<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:sch="http://www.ascc.net/xml/schematron" xmlns:cda="urn:hl7-org:v3" xmlns:ext="http://ns.electronichealth.net.au/Ci/Cda/Extensions/3.0" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.0" cda:dummy-for-xmlns="" ext:dummy-for-xmlns="" xs:dummy-for-xmlns="" xsi:dummy-for-xmlns="">
  <xsl:output method="xml" />
  <xsl:template match="*|@*" mode="schematron-get-full-path">
    <xsl:apply-templates select="parent::*" mode="schematron-get-full-path" />
    <xsl:text>/</xsl:text>
    <xsl:if test="count(. | ../@*) = count(../@*)">@</xsl:if>
    <xsl:value-of select="name()" />
    <xsl:text>[</xsl:text>
    <xsl:value-of select="1+count(preceding-sibling::*[name()=name(current())])" />
    <xsl:text>]</xsl:text>
  </xsl:template>
  <xsl:template match="/">
    <xsl:element name="Results">
      <xsl:attribute name="severity">#ALL</xsl:attribute>
      <xsl:apply-templates select="/" mode="M6" />
      <xsl:apply-templates select="/" mode="M7" />
      <xsl:apply-templates select="/" mode="M8" />
      <xsl:apply-templates select="/" mode="M9" />
      <xsl:apply-templates select="/" mode="M10" />
      <xsl:apply-templates select="/" mode="M11" />
      <xsl:apply-templates select="/" mode="M12" />
      <xsl:apply-templates select="/" mode="M13" />
      <xsl:apply-templates select="/" mode="M14" />
      <xsl:apply-templates select="/" mode="M15" />
      <xsl:apply-templates select="/" mode="M16" />
      <xsl:apply-templates select="/" mode="M17" />
      <xsl:apply-templates select="/" mode="M18" />
      <xsl:apply-templates select="/" mode="M19" />
      <xsl:apply-templates select="/" mode="M20" />
      <xsl:apply-templates select="/" mode="M21" />
      <xsl:apply-templates select="/" mode="M22" />
      <xsl:apply-templates select="/" mode="M23" />
      <xsl:apply-templates select="/" mode="M24" />
      <xsl:apply-templates select="/" mode="M25" />
      <xsl:apply-templates select="/" mode="M26" />
      <xsl:apply-templates select="/" mode="M27" />
      <xsl:apply-templates select="/" mode="M28" />
      <xsl:apply-templates select="/" mode="M29" />
      <xsl:apply-templates select="/" mode="M30" />
      <xsl:apply-templates select="/" mode="M31" />
      <xsl:apply-templates select="/" mode="M32" />
      <xsl:apply-templates select="/" mode="M33" />
      <xsl:apply-templates select="/" mode="M34" />
      <xsl:apply-templates select="/" mode="M35" />
      <xsl:apply-templates select="/" mode="M36" />
      <xsl:apply-templates select="/" mode="M37" />
      <xsl:apply-templates select="/" mode="M38" />
      <xsl:apply-templates select="/" mode="M39" />
      <xsl:apply-templates select="/" mode="M40" />
      <xsl:apply-templates select="/" mode="M41" />
      <xsl:apply-templates select="/" mode="M42" />
      <xsl:apply-templates select="/" mode="M43" />
      <xsl:apply-templates select="/" mode="M44" />
      <xsl:apply-templates select="/" mode="M45" />
      <xsl:apply-templates select="/" mode="M46" />
      <xsl:apply-templates select="/" mode="M47" />
      <xsl:apply-templates select="/" mode="M48" />
      <xsl:apply-templates select="/" mode="M49" />
      <xsl:apply-templates select="/" mode="M50" />
      <xsl:apply-templates select="/" mode="M51" />
      <xsl:apply-templates select="/" mode="M52" />
      <xsl:apply-templates select="/" mode="M53" />
      <xsl:apply-templates select="/" mode="M54" />
      <xsl:apply-templates select="/" mode="M55" />
      <xsl:apply-templates select="/" mode="M56" />
      <xsl:apply-templates select="/" mode="M57" />
      <xsl:apply-templates select="/" mode="M58" />
      <xsl:apply-templates select="/" mode="M59" />
      <xsl:apply-templates select="/" mode="M60" />
      <xsl:apply-templates select="/" mode="M61" />
      <xsl:apply-templates select="/" mode="M62" />
      <xsl:apply-templates select="/" mode="M63" />
      <xsl:apply-templates select="/" mode="M64" />
      <xsl:apply-templates select="/" mode="M65" />
      <xsl:apply-templates select="/" mode="M66" />
      <xsl:apply-templates select="/" mode="M67" />
      <xsl:apply-templates select="/" mode="M68" />
      <xsl:apply-templates select="/" mode="M69" />
      <xsl:apply-templates select="/" mode="M70" />
      <xsl:apply-templates select="/" mode="M71" />
      <xsl:apply-templates select="/" mode="M72" />
      <xsl:apply-templates select="/" mode="M73" />
      <xsl:apply-templates select="/" mode="M74" />
      <xsl:apply-templates select="/" mode="M75" />
      <xsl:apply-templates select="/" mode="M76" />
      <xsl:apply-templates select="/" mode="M77" />
      <xsl:apply-templates select="/" mode="M78" />
      <xsl:apply-templates select="/" mode="M79" />
      <xsl:apply-templates select="/" mode="M80" />
      <xsl:apply-templates select="/" mode="M81" />
      <xsl:apply-templates select="/" mode="M82" />
      <xsl:apply-templates select="/" mode="M83" />
      <xsl:apply-templates select="/" mode="M84" />
      <xsl:apply-templates select="/" mode="M85" />
      <xsl:apply-templates select="/" mode="M86" />
      <xsl:apply-templates select="/" mode="M87" />
      <xsl:apply-templates select="/" mode="M88" />
      <xsl:apply-templates select="/" mode="M89" />
      <xsl:apply-templates select="/" mode="M90" />
      <xsl:apply-templates select="/" mode="M91" />
      <xsl:apply-templates select="/" mode="M92" />
      <xsl:apply-templates select="/" mode="M93" />
      <xsl:apply-templates select="/" mode="M94" />
      <xsl:apply-templates select="/" mode="M95" />
      <xsl:apply-templates select="/" mode="M96" />
      <xsl:apply-templates select="/" mode="M97" />
      <xsl:apply-templates select="/" mode="M98" />
      <xsl:apply-templates select="/" mode="M99" />
      <xsl:apply-templates select="/" mode="M100" />
      <xsl:apply-templates select="/" mode="M101" />
      <xsl:apply-templates select="/" mode="M102" />
    </xsl:element>
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section" priority="4000" mode="M6">
    <xsl:if test="cda:title and normalize-space(cda:title) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - The 'title' tag shall contain a value. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:title and normalize-space(cda:title) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - The 'title' tag shall appear only once. Refer to the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:text and (                 (cda:text/child::* and not(                 (name(cda:text/child::*) = 'content')          or (substring-after(name(cda:text/child::*), ':') = 'content')                 or (name(cda:text/child::*) = 'footnote')         or (substring-after(name(cda:text/child::*), ':') = 'footnote')                 or (name(cda:text/child::*) = 'footnoteRef')      or (substring-after(name(cda:text/child::*), ':') = 'footnoteRef')                 or (name(cda:text/child::*) = 'linkHtml')         or (substring-after(name(cda:text/child::*), ':') = 'linkHtml')                 or (name(cda:text/child::*) = 'list')             or (substring-after(name(cda:text/child::*), ':') = 'list')                 or (name(cda:text/child::*) = 'paragraph')        or (substring-after(name(cda:text/child::*), ':') = 'paragraph')                 or (name(cda:text/child::*) = 'renderMultiMedia') or (substring-after(name(cda:text/child::*), ':') = 'renderMultiMedia')                 or (name(cda:text/child::*) = 'sub')              or (substring-after(name(cda:text/child::*), ':') = 'sub')                 or (name(cda:text/child::*) = 'sup')              or (substring-after(name(cda:text/child::*), ':') = 'sup')                 or (name(cda:text/child::*) = 'table')            or (substring-after(name(cda:text/child::*), ':') = 'table')                 )                 ) or (not(cda:text/child::*) and normalize-space(cda:text) = ''))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - The 'text' tag shall contain a value for narrative content. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:text and (                 (cda:text/child::* and not(                 (name(cda:text/child::*) = 'content')          or (substring-after(name(cda:text/child::*), ':') = 'content')                 or (name(cda:text/child::*) = 'footnote')         or (substring-after(name(cda:text/child::*), ':') = 'footnote')                 or (name(cda:text/child::*) = 'footnoteRef')      or (substring-after(name(cda:text/child::*), ':') = 'footnoteRef')                 or (name(cda:text/child::*) = 'linkHtml')         or (substring-after(name(cda:text/child::*), ':') = 'linkHtml')                 or (name(cda:text/child::*) = 'list')             or (substring-after(name(cda:text/child::*), ':') = 'list')                 or (name(cda:text/child::*) = 'paragraph')        or (substring-after(name(cda:text/child::*), ':') = 'paragraph')                 or (name(cda:text/child::*) = 'renderMultiMedia') or (substring-after(name(cda:text/child::*), ':') = 'renderMultiMedia')                 or (name(cda:text/child::*) = 'sub')              or (substring-after(name(cda:text/child::*), ':') = 'sub')                 or (name(cda:text/child::*) = 'sup')              or (substring-after(name(cda:text/child::*), ':') = 'sup')                 or (name(cda:text/child::*) = 'table')            or (substring-after(name(cda:text/child::*), ':') = 'table')                 )                 ) or (not(cda:text/child::*) and normalize-space(cda:text) = ''))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - The 'text' tag shall appear only once. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M6" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M6" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody" priority="4000" mode="M7">
    <xsl:if test="count(cda:component[cda:section/cda:code/@code = '102.16080']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'component' tag shall appear only once for 'Administrative Observations'. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:component[cda:section/cda:code/@code = '102.16080']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:component[cda:section/cda:code/@code = '102.16080']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'component' tag is missing for 'Administrative Observations'. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:component[cda:section/cda:code/@code = '102.16080']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M7" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component[cda:section/cda:code/@code = '102.16080']" priority="3999" mode="M7">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'section' tag shall appear only once. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M7" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']" priority="3998" mode="M7">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'code' tag shall appear only once. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'title' tag shall appear only once. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:text and not(cda:title)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'title' tag is missing for the existence of 'text'. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:text and not(cda:title)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:title and normalize-space(cda:title) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'title' tag shall contain a value. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:title and normalize-space(cda:title) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'ADMINISTRATIVE OBSERVATIONS'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'title' tag shall contain the value 'Administrative Observations'. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'ADMINISTRATIVE OBSERVATIONS'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'text' tag shall appear only once. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:text and normalize-space(cda:text) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'text' tag shall contain a value. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:text and normalize-space(cda:text) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations / id" - The 'id' tag shall appear only once. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M7" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@code = '102.16080']" priority="3997" mode="M7">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'code' tag 'displayName' attribute is missing. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;ADMINISTRATIVE OBSERVATIONS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'code' tag 'displayName' attribute shall contain the value 'Administrative Observations'. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "ADMINISTRATIVE OBSERVATIONS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations" - The 'translation' tag shall not be present within 'code'. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M7" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:id" priority="3996" mode="M7">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - "Administrative Observations / id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M7" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M7" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody" priority="4000" mode="M8">
    <xsl:if test="count(cda:component[cda:section/cda:code/@code = '101.20117']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'component' tag shall appear only once for 'Diagnostic Investigations'. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:component[cda:section/cda:code/@code = '101.20117']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M8" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component[cda:section/cda:code/@code = '101.20117']" priority="3999" mode="M8">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'section' tag shall appear only once. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M8" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']" priority="3998" mode="M8">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'code' tag shall appear only once. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'title' tag is missing. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'title' tag shall appear only once. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'title' tag shall contain a value. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'DIAGNOSTIC INVESTIGATIONS'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'title' tag shall contain the value 'Diagnostic Investigations'. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'DIAGNOSTIC INVESTIGATIONS'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M8" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '101.20117']" priority="3997" mode="M8">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '101.20117']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@code='101.20117'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The '/ClinicalDocument/component/structuredBody/component/section/code[@code = '101.20117']' path - 1 or more tags are missing. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '101.20117']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@code='101.20117'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DIAGNOSTIC INVESTIGATIONS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'code' tag 'displayName' attribute shall contain the value 'Diagnostic Investigations'. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DIAGNOSTIC INVESTIGATIONS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - "Diagnostic Investigations" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M8" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M8" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']" priority="4000" mode="M9">
    <xsl:choose>
      <xsl:when test="cda:component/cda:section/cda:code[@code='102.16144'] or  cda:component/cda:section/cda:code[@code='102.16145'] or  cda:component/cda:section/cda:code[@code='102.16029']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5 DIAGNOSTIC INVESTIGATIONS - 'section' tag shall have either 'Pathology Test Result' or 'Image Examination Result' or 'FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001' tag. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:component/cda:section/cda:code[@code='102.16144'] or  cda:component/cda:section/cda:code[@code='102.16145'] or  cda:component/cda:section/cda:code[@code='102.16029']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M9" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M9" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component" priority="4000" mode="M10">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'section' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M10" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']" priority="3999" mode="M10">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'code' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'id' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'title' tag is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'title' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'DIAGNOSTIC INVESTIGATION'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'title' tag shall contain the value 'Diagnostic Investigation'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'DIAGNOSTIC INVESTIGATION'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'text' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M10" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16029']" priority="3998" mode="M10">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16029']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section/cda:code[@code = '102.16029'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section/code[@code = '102.16029']' path - 1 or more tags are missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16029']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section/cda:code[@code = '102.16029'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DIAGNOSTIC INVESTIGATION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'code' tag 'displayName' attribute shall contain the value 'Diagnostic Investigation'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DIAGNOSTIC INVESTIGATION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M10" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M10" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@displayName ='Administrative Observations']" priority="4000" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '102.16080'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 4 Administrative Observations - The 'code' tag 'code' attribute shall be '102.16080'. Refer to section '4. Administrative Observations' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16080'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@displayName ='Response Details']" priority="3999" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '101.16611'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - The 'code' tag 'code' attribute shall be '101.16611'. Refer to section '7.1.1 Response Details' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '101.16611'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@displayName ='Recommendations']" priority="3998" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '101.16606'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Code Checks - The 'code' tag 'code' attribute shall be '101.16606'. Refer to section '7.1.2 Recommendations' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '101.16606'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@displayName ='Medications']" priority="3997" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '101.16146'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Code Checks - The 'code' tag 'code' attribute shall be '101.16146'. Refer to section '7.1.3 Medications' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '101.16146'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@displayName ='Adverse Reactions']" priority="3996" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '101.20113'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Code Checks - The 'code' tag 'code' attribute shall be '101.20113'. Refer to section '7.1.4 Newly Identified Allergies and Adverse Reactions' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '101.20113'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@displayName ='Diagnostic Investigations']" priority="3995" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '101.20117'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Code Checks - The 'code' tag 'code' attribute shall be '101.20117'. Refer to section '7.1.5 Diagnostic Investigations' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '101.20117'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section/cda:code[@displayName ='Pathology Test Result']" priority="3994" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '102.16144'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Code Checks - The 'code' tag 'code' attribute shall be '102.16144'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16144'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section/cda:code[@displayName ='Imaging Examination Result']" priority="3993" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '102.16145'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Code Checks - The 'code' tag 'code' attribute shall be '102.16145'. Refer to section '7.1.5.2 Imaging Examination Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16145'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section/cda:code[@displayName ='Requested Service']" priority="3992" mode="M11">
    <xsl:choose>
      <xsl:when test="@code = '102.20158'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Code Checks - The 'code' tag 'code' attribute shall be '102.20158'. Refer to section '7.1.5.3 Requested Service' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.20158'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M11" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M11" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component[cda:section/cda:code/@code = '102.16145']" priority="4000" mode="M12">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'section' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M12" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']" priority="3999" mode="M12">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'code' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'title' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'title' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'title' tag shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'IMAGING EXAMINATION RESULT'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'title' tag shall contain the value 'Imaging Examination Result'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'IMAGING EXAMINATION RESULT'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'text' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'text' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'text' tag shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M12" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16145']" priority="3998" mode="M12">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16145']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section/cda:code[@code='102.16145'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section/code[@code = '102.16145']' path - 1 or more tags are missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16145']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section/cda:code[@code='102.16145'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;IMAGING EXAMINATION RESULT&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'code' tag 'displayName' attribute shall contain the value 'Imaging Examination Result'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "IMAGING EXAMINATION RESULT"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M12" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M12" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody" priority="4000" mode="M13">
    <xsl:if test="count(cda:component[cda:section/cda:code/@code = '101.16146']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'component' tag shall appear only once for 'Medications'. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:component[cda:section/cda:code/@code = '101.16146']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:component[cda:section/cda:code/@code = '101.16146']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'component' tag is missing for 'Medications'. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:component[cda:section/cda:code/@code = '101.16146']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M13" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component[cda:section/cda:code/@code = '101.16146']" priority="3999" mode="M13">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'section' tag shall appear only once. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M13" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']" priority="3998" mode="M13">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'code' tag shall appear only once. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'title' tag shall appear only once. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'title' tag shall contain a value. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'title' tag is missing. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'MEDICATIONS'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'title' tag shall contain the value 'Medications'. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'MEDICATIONS'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'text' tag shall appear only once. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'text' tag is missing. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'text' tag shall contain a value. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M13" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@code = '101.16146']" priority="3997" mode="M13">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;MEDICATIONS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'code' tag 'displayName' attribute shall contain the value 'Medications'. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "MEDICATIONS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 MEDICATIONS - "Medications" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M13" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M13" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody" priority="4000" mode="M14">
    <xsl:if test="count(cda:component[cda:section/cda:code/@code = '101.20113']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'component' tag shall appear only once for 'Newly Identified Allergies and Adverse Reactions'. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:component[cda:section/cda:code/@code = '101.20113']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M14" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component[cda:section/cda:code/@code = '101.20113']" priority="3999" mode="M14">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'section' tag shall appear only once. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M14" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']" priority="3998" mode="M14">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'code' tag shall appear only once. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'title' tag shall appear only once. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'title' tag shall contain a value. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'title' tag is missing. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'ADVERSE REACTIONS'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'title' tag shall contain the value 'Adverse Reactions'. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'ADVERSE REACTIONS'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'text' tag shall appear only once. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'text' tag is missing. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'text' tag shall contain a value. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M14" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '101.20113']" priority="3997" mode="M14">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '101.20113']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@code='101.20113'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The '/ClinicalDocument/component/structuredBody/component/section/code[@code = '101.20113']' path - 1 or more tags are missing. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '101.20113']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@code='101.20113'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;ADVERSE REACTIONS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'code' tag 'displayName' attribute shall contain the value 'Adverse Reactions'. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "ADVERSE REACTIONS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4 NEWLY IDENTIFIED ALLERGIES AND ADVERSE REACTIONS - "Newly Identified Allergies and Adverse Reactions" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M14" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M14" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component[cda:section/cda:code/@code = '102.16144']" priority="4000" mode="M15">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'section' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M15" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']" priority="3999" mode="M15">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'title' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'title' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'title' tag shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'PATHOLOGY TEST RESULT'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'title' tag shall contain the value 'Pathology Test Result'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'PATHOLOGY TEST RESULT'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'text' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'text' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'text' tag shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M15" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16144']" priority="3998" mode="M15">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16144']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section/cda:code[@code='102.16144'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section/code[@code = '102.16144']' path - 1 or more tags are missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16144']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section/cda:code[@code='102.16144'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;PATHOLOGY TEST RESULT&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'code' tag 'displayName' attribute shall contain the value 'Pathology Test Result'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "PATHOLOGY TEST RESULT"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M15" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M15" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody" priority="4000" mode="M16">
    <xsl:if test="count(cda:component[cda:section/cda:code/@code = '101.16606']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'component' tag shall appear only once for 'Recommendations'. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:component[cda:section/cda:code/@code = '101.16606']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:component[cda:section/cda:code/@code = '101.16606']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'component' tag is missing for 'Recommendations'. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:component[cda:section/cda:code/@code = '101.16606']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M16" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component[cda:section/cda:code/@code = '101.16606']" priority="3999" mode="M16">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'section' tag shall appear only once. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M16" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']" priority="3998" mode="M16">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'code' tag shall appear only once. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'title' tag shall appear only once. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'title' tag shall contain a value. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'title' tag is missing. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'RECOMMENDATIONS'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'title' tag shall contain the value 'Recommendations'. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'RECOMMENDATIONS'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'text' tag shall appear only once. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'text' tag is missing. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'text' tag shall contain a value. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M16" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@code = '101.16606']" priority="3997" mode="M16">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RECOMMENDATIONS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'code' tag 'displayName' attribute shall contain the value 'Recommendations'. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RECOMMENDATIONS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 RECOMMENDATIONS - "Recommendations" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M16" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M16" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component[cda:section/cda:code/@code = '102.20158']" priority="4000" mode="M17">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'section' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M17" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']" priority="3999" mode="M17">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'code' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'title' tag is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'title' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'title' tag shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'REQUESTED SERVICE'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'title' tag shall contain the value 'Requested Service'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'REQUESTED SERVICE'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'text' tag is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'text' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'text' tag shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M17" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section/cda:code[@code = '102.20158']" priority="3998" mode="M17">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REQUESTED SERVICE&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'code' tag 'displayName' attribute shall contain the value 'Requested Service'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REQUESTED SERVICE"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M17" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M17" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody" priority="4000" mode="M18">
    <xsl:if test="count(cda:component[cda:section/cda:code/@code = '101.16611']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'component' tag shall appear only once for 'Response Details'. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:component[cda:section/cda:code/@code = '101.16611']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:component[cda:section/cda:code/@code = '101.16611']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'component' tag is missing for 'Response Details'. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:component[cda:section/cda:code/@code = '101.16611']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M18" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component[cda:section/cda:code/@code = '101.16611']" priority="3999" mode="M18">
    <xsl:if test="count(cda:section) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'section' tag shall appear only once. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:section) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M18" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']" priority="3998" mode="M18">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'code' tag shall appear only once. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'title' tag shall appear only once. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'title' tag shall contain a value. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'title' tag is missing. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'RESPONSE DETAILS'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'title' tag shall contain the value 'Response Details'. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:title and normalize-space(cda:title) != '' and                 translate(cda:title, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != 'RESPONSE DETAILS'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'text' tag shall appear only once. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'text' tag is missing. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'text' tag shall contain a value. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M18" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:code[@code = '101.16611']" priority="3997" mode="M18">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RESPONSE DETAILS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'code' tag 'displayName' attribute shall contain the value 'Response Details'. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RESPONSE DETAILS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 RESPONSE DETAILS - "Response Details" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M18" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M18" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M19">
    <xsl:choose>
      <xsl:when test="cda:component" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1 Specialist Letter - "Specialist Letter (Body)" - The 'component' tag is missing. Refer to section 7.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:component</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:component) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1 Specialist Letter - "Specialist Letter (Body)" - The 'component' tag shall appear only once. Refer to section 7.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:component) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M19" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component" priority="3999" mode="M19">
    <xsl:choose>
      <xsl:when test="cda:structuredBody" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1 Specialist Letter - "Specialist Letter (Body)" - The 'structuredBody' tag is missing. Refer to section 7.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:structuredBody</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:structuredBody) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1 Specialist Letter - "Specialist Letter (Body)" - The 'structuredBody' tag shall appear only once. Refer to section 7.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:structuredBody) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M19" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M19" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']" priority="4000" mode="M20">
    <xsl:if test="count(cda:performer[cda:assignedEntity/cda:representedOrganization]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation)" - The 'performer' tag shall appear only once for 'Addressee (Organisation)'. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:performer[cda:assignedEntity/cda:representedOrganization]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M20" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer[cda:assignedEntity/cda:representedOrganization]" priority="3999" mode="M20">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation)" - The 'performer' tag 'typeCode' attribute is missing. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation)" - The 'performer' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'PRF'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation)" - The 'performer' tag 'typeCode' attribute shall contain the value 'PRF'. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'PRF'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:assignedEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation)" - The 'assignedEntity' tag shall appear only once. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M20" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:representedOrganization]" priority="3998" mode="M20">
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Role" - The 'code' tag is missing. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Role" - The 'code' tag shall appear only once. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / id" - The 'id' tag is missing. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / id" - The 'id' tag shall appear only once. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:representedOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant" - The 'representedOrganization' tag shall appear only once. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:representedOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M20" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:representedOrganization]/cda:id" priority="3997" mode="M20">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M20" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:representedOrganization]/cda:representedOrganization" priority="3996" mode="M20">
    <xsl:choose>
      <xsl:when test="cda:asOrganizationPartOf" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant" - The 'asOrganizationPartOf' tag is missing. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:asOrganizationPartOf</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:asOrganizationPartOf) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant" - The 'asOrganizationPartOf' tag shall appear only once. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:asOrganizationPartOf) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant / Person or Organisation or Device / Organisation / Department/Unit" - The 'name' tag shall appear only once. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M20" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:representedOrganization]/cda:representedOrganization/cda:asOrganizationPartOf" priority="3995" mode="M20">
    <xsl:choose>
      <xsl:when test="cda:wholeOrganization" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant" - The 'wholeOrganization' tag is missing. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:wholeOrganization</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:wholeOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant" - The 'wholeOrganization' tag shall appear only once. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:wholeOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M20" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:representedOrganization]/cda:representedOrganization/cda:asOrganizationPartOf/cda:wholeOrganization" priority="3994" mode="M20">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag is missing. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag shall appear only once. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M20" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:representedOrganization]/cda:representedOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/cda:name" priority="3993" mode="M20">
    <xsl:if test="@use and normalize-space(@use) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'use' attribute shall contain a value. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@use and normalize-space(@use) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and normalize-space(@use) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Provider_Organisation_Name_Usage']/code[                     (@code = current()/@use) or                     (@alternativeCode = current()/@use) or                     (@hl7Code = current()/@use)                 ])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'use' attribute shall be as per AS 4846-2006: Health Care Provider Organisation Name Usage. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and normalize-space(@use) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Provider_Organisation_Name_Usage']/code[                     (@code = current()/@use) or                     (@alternativeCode = current()/@use) or                     (@hl7Code = current()/@use)                 ])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M20" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M20" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:representedOrganization]/cda:addr" priority="4000" mode="M21">
    <xsl:choose>
      <xsl:when test="not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Organisation) / Participant / Address" - The 'country' tag shall contain the value 'Australia'. Refer to section 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M21" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M21" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']" priority="4000" mode="M22">
    <xsl:choose>
      <xsl:when test="cda:performer" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADDRESSE PERSON and/or 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Person)" and/or "Addressee (Organisation)" - The 'performer' tag is missing. Refer to section 7.1.2.1.1.1 and/or 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:performer</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M22" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer" priority="3999" mode="M22">
    <xsl:choose>
      <xsl:when test="(cda:assignedEntity/cda:assignedPerson) or (cda:assignedEntity/cda:representedOrganization)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADDRESSE PERSON and/or 7.1.2.1.1.2 ADDRESSE ORGANISATION - "Addressee (Person)" and/or "Addressee (Organisation)" - The 'assignedEntity' tag is missing. Refer to section 7.1.2.1.1.1 and/or 7.1.2.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">(cda:assignedEntity/cda:assignedPerson) or (cda:assignedEntity/cda:representedOrganization)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M22" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M22" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']" priority="4000" mode="M23">
    <xsl:if test="count(cda:performer[cda:assignedEntity/cda:assignedPerson]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person)" - The 'performer' tag shall appear only once for 'Addressee (Person)'. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:performer[cda:assignedEntity/cda:assignedPerson]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M23" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer[cda:assignedEntity/cda:assignedPerson]" priority="3999" mode="M23">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person)" - The 'performer' tag 'typeCode' attribute is missing. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person)" - The 'performer' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'PRF'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person)" - The 'performer' tag 'typeCode' attribute shall contain the value 'PRF'. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'PRF'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:assignedEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person)" - The 'assignedEntity' tag shall appear only once. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M23" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:assignedPerson]" priority="3998" mode="M23">
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / Role" - The 'code' tag is missing. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / Role" - The 'code' tag shall appear only once. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / id" - The 'id' tag is missing. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / id" - The 'id' tag shall appear only once. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:assignedPerson) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / Participant" - The 'assignedPerson' tag shall appear only once. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedPerson) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M23" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:assignedPerson]/cda:id" priority="3997" mode="M23">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M23" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:assignedPerson]/cda:assignedPerson" priority="3996" mode="M23">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / Participant / Person or Organisation or Device / Person / Person Name" - The 'name' tag is missing. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:asEmployment) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / Participant / Person or Organisation or Device / Person / Employment Detail" - The 'asEmployment' tag shall appear only once. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:asEmployment) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M23" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M23" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:assignedPerson]/cda:addr" priority="4000" mode="M24">
    <xsl:choose>
      <xsl:when test="not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1.1.1 ADRESSEE PERSON - "Addressee (Person) / Participant / Address" - The 'country' tag shall contain the value 'Australia'. Refer to section 7.1.2.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M24" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M24" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']" priority="4000" mode="M25">
    <xsl:choose>
      <xsl:when test="cda:entry[cda:act/cda:code/@code = '102.15517']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'entry' tag is missing for 'Adverse Reaction'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entry[cda:act/cda:code/@code = '102.15517']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry[cda:act/cda:code/@code = '102.15517']" priority="3999" mode="M25">
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'act' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']" priority="3998" mode="M25">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'id' tag is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'id' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'code' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:participant" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participant' tag is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:participant</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:participant) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participant' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:participant) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '102.16474']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'entryRelationship' tag shall appear only once for ' Reaction Event'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '102.16474']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:id" priority="3997" mode="M25">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act/cda:code[@code = '102.15517']" priority="3996" mode="M25">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;ADVERSE REACTION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'code' tag 'displayName' attribute shall contain the value 'Adverse Reaction'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "ADVERSE REACTION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:participant" priority="3995" mode="M25">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participant' tag 'typeCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participant' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'CAGNT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participant' tag 'typeCode' attribute shall contain the value 'CAGNT'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'CAGNT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participant' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:participantRole" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participantRole' tag is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:participantRole</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:participantRole) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participantRole' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:participantRole) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:participant/cda:participantRole" priority="3994" mode="M25">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'participantRole' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:playingEntity" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'playingEntity' tag is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:playingEntity</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:playingEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'playingEntity' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:playingEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:participant/cda:participantRole/cda:playingEntity" priority="3993" mode="M25">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'playingEntity' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'code' tag is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'code' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:participant/cda:participantRole/cda:playingEntity/cda:code" priority="3992" mode="M25">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Substance/Agent" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:entryRelationship[cda:observation/cda:code/@code = '102.16474']" priority="3991" mode="M25">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'CAUS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'CAUS'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'CAUS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'observation' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16474']" priority="3990" mode="M25">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'code' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[@typeCode = 'MFST']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'entryRelationship' tag is missing for ' Manifestation'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[@typeCode = 'MFST']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16474']" priority="3989" mode="M25">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16474']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20113']/cda:entry/cda:act[cda:code/@code='102.15517']/cda:entryRelationship/cda:observation/cda:code[@code='102.16474'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20113']/entry/act[code/@code = '102.15517']/entryRelationship/observation/code[@code = '102.16474']' path - 1 or more tags are missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16474']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20113']/cda:entry/cda:act[cda:code/@code='102.15517']/cda:entryRelationship/cda:observation/cda:code[@code='102.16474'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REACTION EVENT&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'code' tag 'displayName' attribute shall contain the value 'Reaction Event'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REACTION EVENT"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16474']/cda:entryRelationship[@typeCode = 'MFST']" priority="3988" mode="M25">
    <xsl:choose>
      <xsl:when test="@inversionInd" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'entryRelationship' tag 'inversionInd' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@inversionInd</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@inversionInd) or normalize-space(@inversionInd) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'entryRelationship' tag 'inversionInd' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@inversionInd) or normalize-space(@inversionInd) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@inversionInd) or normalize-space(@inversionInd) = '' or @inversionInd = 'true'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'entryRelationship' tag 'inversionInd' attribute shall contain the value 'true'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@inversionInd) or normalize-space(@inversionInd) = '' or @inversionInd = 'true'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'entryRelationship' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:observation" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:observation</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16474']/cda:entryRelationship[@typeCode = 'MFST']/cda:observation" priority="3987" mode="M25">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'code' tag is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'code' tag shall appear only once. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16474']/cda:entryRelationship[@typeCode = 'MFST']/cda:observation/cda:code" priority="3986" mode="M25">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M25" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M25" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act[cda:code/@code = '102.15517']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16474']/cda:entryRelationship" priority="4000" mode="M26">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'MFST'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 ADVERSE REACTION - "Adverse Reaction / Reaction Event / Manifestation" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'MFST'. Refer to section 7.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'MFST'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M26" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M26" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry[cda:observation/cda:code/@code = '282291009']" priority="4000" mode="M27">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'observation' tag shall appear only once. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M27" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:observation[cda:code/@code = '282291009']" priority="3999" mode="M27">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'id' tag is missing. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'id' tag shall appear only once. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'code' tag shall appear only once. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Problem/Diagnosis / Diagnosis Name" - The 'value' tag is missing. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Problem/Diagnosis / Diagnosis Name" - The 'value' tag shall appear only once. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M27" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:observation[cda:code/@code = '282291009']/cda:id" priority="3998" mode="M27">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M27" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '282291009']" priority="3997" mode="M27">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '282291009']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16611']/cda:entry/cda:observation/cda:code[@code='282291009'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.16611']/entry/observation/code[@code = '282291009']' path - 1 or more tags are missing. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '282291009']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16611']/cda:entry/cda:observation/cda:code[@code='282291009'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DIAGNOSIS INTERPRETATION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'code' tag 'displayName' attribute shall contain the value 'Diagnosis interpretation'. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DIAGNOSIS INTERPRETATION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Diagnosis" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M27" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:observation[cda:code/@code = '282291009']/cda:value" priority="3996" mode="M27">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Problem/Diagnosis / Diagnosis Name" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Problem/Diagnosis / Diagnosis Name" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M27" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M27" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:observation[cda:code/@code = '282291009']/cda:value" priority="4000" mode="M28">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 DIAGNOSIS - "Problem/Diagnosis / Diagnosis Name" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M28" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M28" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']" priority="4000" mode="M29">
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image View Name" - The 'value' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '103.16517']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'entryRelationship' tag shall appear only once for ' DICOM Series Identifier'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '103.16517']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16519']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'entryRelationship' tag shall appear only once for ' Subject Position'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16519']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image DateTime" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observationMedia/@classCode = 'OBS']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'entryRelationship' tag shall appear only once for ' Image'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observationMedia/@classCode = 'OBS']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:value" priority="3999" mode="M29">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image View Name" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:act/cda:code/@code = '102.16511']" priority="3998" mode="M29">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SUBJ'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'SUBJ'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SUBJ'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@inversionInd" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'entryRelationship' tag 'inversionInd' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@inversionInd</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@inversionInd) or normalize-space(@inversionInd) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'entryRelationship' tag 'inversionInd' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@inversionInd) or normalize-space(@inversionInd) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@inversionInd) or normalize-space(@inversionInd) = '' or @inversionInd = 'true'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'entryRelationship' tag 'inversionInd' attribute shall contain the value 'true'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@inversionInd) or normalize-space(@inversionInd) = '' or @inversionInd = 'true'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'act' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']" priority="3997" mode="M29">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '103.16513']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'entryRelationship' tag shall appear only once for ' DICOM Study Identifier'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '103.16513']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16514']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'entryRelationship' tag shall appear only once for ' Report Identifier'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16514']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16511']" priority="3996" mode="M29">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16511']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code = '102.16511'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/act/code[@code = '102.16511']' path - 1 or more tags are missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16511']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code = '102.16511'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;EXAMINATION REQUEST DETAILS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'code' tag 'displayName' attribute shall contain the value 'Examination Request Details'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "EXAMINATION REQUEST DETAILS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16512']" priority="3995" mode="M29">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'REFR'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16512']" priority="3994" mode="M29">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'text' tag is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'text' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'text' tag shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16512']" priority="3993" mode="M29">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16512']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16512'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/act[code/@code = '102.16511']/entryRelationship/observation/code[@code = '103.16512']' path - 1 or more tags are missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16512']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16512'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;EXAMINATION REQUESTED NAME&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'code' tag 'displayName' attribute shall contain the value 'Examination Requested Name'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "EXAMINATION REQUESTED NAME"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16512']/cda:text" priority="3992" mode="M29">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Examination Requested Name" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship[cda:act/cda:code/@code = '103.16513']" priority="3991" mode="M29">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SUBJ'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'SUBJ'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SUBJ'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'act' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']" priority="3990" mode="M29">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'id' tag is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16513']" priority="3989" mode="M29">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16513']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:act/cda:code[@code = '103.16513'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/act[code/@code = '102.16511']/entryRelationship/act/code[@code = '103.16513']' path - 1 or more tags are missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16513']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:act/cda:code[@code = '103.16513'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DICOM STUDY IDENTIFIER&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'code' tag 'displayName' attribute shall contain the value 'DICOM Study Identifier'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DICOM STUDY IDENTIFIER"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Imaging Examination Result /Examination Request Details / DICOM Study Identifier" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16514']" priority="3988" mode="M29">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16514']" priority="3987" mode="M29">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'id' tag is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16514']" priority="3986" mode="M29">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16514']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16514'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/act[code/@code = '102.16511']/entryRelationship/observation/code[@code = '103.16514']' path - 1 or more tags are missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16514']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16514'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REPORT IDENTIFIER&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'code' tag 'displayName' attribute shall contain the value 'Report Identifier'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REPORT IDENTIFIER"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Report Identifier" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16515']" priority="3985" mode="M29">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16515']" priority="3984" mode="M29">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16515']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:act[cda:code/@code='103.16513']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16515'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/act[code/@code = '102.16511']/entryRelationship/act[code/@code = '103.16513']/entryRelationship/observation/code[@code = '103.16515']' path - 1 or more tags are missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16515']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:act[cda:code/@code='103.16513']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16515'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;IMAGE DETAILS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'code' tag 'displayName' attribute shall contain the value 'Image Details'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "IMAGE DETAILS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship[cda:act/cda:code/@code = '103.16517']" priority="3983" mode="M29">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'REFR'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'act' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship/cda:act[cda:code/@code = '103.16517']" priority="3982" mode="M29">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'id' tag is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16517']" priority="3981" mode="M29">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16517']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code='103.16513']/cda:entryRelationship/cda:observation[cda:code/@code='103.16515']/cda:entryRelationship/cda:act/cda:code[@code = '103.16517'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/act[code/@code = '102.16511']/entryRelationship/act[code/@code = '103.16513']/entryRelationship/observation[code/@code = '103.16515']/entryRelationship/act/code[@code = '103.16517']' path - 1 or more tags are missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16517']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code='103.16513']/cda:entryRelationship/cda:observation[cda:code/@code='103.16515']/cda:entryRelationship/cda:act/cda:code[@code = '103.16517'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DICOM SERIES IDENTIFIER&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'code' tag 'displayName' attribute shall contain the value 'DICOM Series Identifier'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DICOM SERIES IDENTIFIER"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / DICOM Series Identifier" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16519']" priority="3980" mode="M29">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'REFR'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16519']" priority="3979" mode="M29">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'value' tag is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'value' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:value) or normalize-space(cda:value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'value' tag shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:value) or normalize-space(cda:value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16519']" priority="3978" mode="M29">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16519']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:act[cda:code/@code='103.16513']/cda:entryRelationship/cda:observation[cda:code/@code='103.16515']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16519'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/act[code/@code = '102.16511']/entryRelationship/act[code/@code = '103.16513']/entryRelationship/observation[code/@code = '103.16515']/entryRelationship/observation/code[@code = '103.16519']' path - 1 or more tags are missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16519']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16511']/cda:entryRelationship/cda:act[cda:code/@code='103.16513']/cda:entryRelationship/cda:observation[cda:code/@code='103.16515']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16519'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SUBJECT POSITION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'code' tag 'displayName' attribute shall contain the value 'Subject Position'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SUBJECT POSITION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16519']/cda:value" priority="3977" mode="M29">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Subject Position" - The 'value' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship[cda:observationMedia/@classCode = 'OBS']" priority="3976" mode="M29">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SPRT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'SPRT'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SPRT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observationMedia) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'observationMedia' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observationMedia) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']" priority="3975" mode="M29">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'observationMedia' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'observationMedia' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'observationMedia' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'id' tag is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'id' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'value' tag is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'value' tag shall appear only once. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']/cda:id" priority="3974" mode="M29">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']/cda:value" priority="3973" mode="M29">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ED' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ED')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'value' tag 'xsi:type' attribute shall contain the value 'ED'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ED' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ED')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M29" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M29" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:value" priority="4000" mode="M30">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image View Name" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M30" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16515']/cda:entryRelationship/cda:observationMedia" priority="3999" mode="M30">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'observationMedia' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'observationMedia' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS - "Examination Request Details / Image Details / Image" - The 'observationMedia' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M30" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M30" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']" priority="4000" mode="M31">
    <xsl:if test="count(cda:entry[cda:observation/cda:code/@code = '103.16302.132.1.1']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'entry' tag shall appear only once for ' Global Statement'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/cda:code/@code = '103.16302.132.1.1']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M31" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry[cda:observation/cda:code/@code = '103.16302.132.1.1']" priority="3999" mode="M31">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'entry' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'observation' tag shall appear only once. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M31" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:observation[cda:code/@code = '103.16302.132.1.1']" priority="3998" mode="M31">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'code' tag shall appear only once. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag is missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag shall appear only once. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M31" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16302.132.1.1']" priority="3997" mode="M31">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16302.132.1.1']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']/cda:entry/cda:observation/cda:code[@code='103.16302.132.1.1'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.16146']/entry/observation/code[@code = '103.16302.132.1.1']' path - 1 or more tags are missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16302.132.1.1']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']/cda:entry/cda:observation/cda:code[@code='103.16302.132.1.1'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;GLOBAL STATEMENT&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'code' tag 'displayName' attribute shall contain the value 'Global Statement'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "GLOBAL STATEMENT"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M31" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:observation[cda:code/@code = '103.16302.132.1.1']/cda:value" priority="3996" mode="M31">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'code' attribute is missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'code' attribute shall contain a value. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Global_Statement_Values']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'code' attribute shall be as per NCTIS: Admin Codes - Global Statement Values. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Global_Statement_Values']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'codeSystem' attribute is missing. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16299'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.16299'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16299'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Global Statement Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'codeSystemName' attribute shall contain the value 'NCTIS Global Statement Values'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Global Statement Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'displayName' attribute shall contain a value. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Global_Statement_Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'code' and 'displayName' attributes shall match as per NCTIS: Admin Codes - Global Statement Values. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Global_Statement_Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M31" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M31" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:observation[cda:code/@code = '103.16302.132.1.1']/cda:value" priority="4000" mode="M32">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS - "Exclusion Statement - Medications / Global Statement" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.3.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M32" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M32" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']" priority="4000" mode="M33">
    <xsl:choose>
      <xsl:when test="cda:entry[cda:observation/@classCode = 'OBS']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Name" - The 'entry' tag is missing for ' Name'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entry[cda:observation/@classCode = 'OBS']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entry[cda:observation/@classCode = 'OBS']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Name" - The 'entry' tag shall appear only once for ' Name'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/@classCode = 'OBS']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M33" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']/cda:entry[cda:observation/@classCode = 'OBS']" priority="3999" mode="M33">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Name" - The 'observation' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M33" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']/cda:entry/cda:observation[@classCode = 'OBS']" priority="3998" mode="M33">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Name" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Name" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Name" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '308552006']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'entryRelationship' tag shall appear only once for ' Report Status'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '308552006']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - " Undifferentiated Pathology and Radiology Results / Report Date" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / id" - The 'id' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Value" - The 'value' tag is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Value" - The 'value' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M33" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '308552006']" priority="3997" mode="M33">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'observation' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M33" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']" priority="3996" mode="M33">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'code' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag shall appear only once. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M33" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@code = '308552006']" priority="3995" mode="M33">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REPORT STATUS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'code' tag 'displayName' attribute shall contain the value 'report status'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REPORT STATUS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M33" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']/cda:value" priority="3994" mode="M33">
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag 'code' attribute shall contain a value. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) ])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag 'code' and 'code' attribute shall be as per 10.20 NCTIS: Admin Codes - Result Status. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) ])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystem and normalize-space(@codeSystem) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystem and normalize-space(@codeSystem) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystem and normalize-space(@codeSystem) != '' and @codeSystem != '1.2.36.1.2001.1001.101.104.16501'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.16501'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and normalize-space(@codeSystem) != '' and @codeSystem != '1.2.36.1.2001.1001.101.104.16501'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Result Status Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag 'codeSystemName' attribute shall contain the value 'NCTIS Result Status Values'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Result Status Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag 'displayName' attribute shall contain a value. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Report Status" - The 'value' tag 'code' and 'displayName' attributes shall match as per 10.20 NCTIS: Admin Codes - Result Status. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M33" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16029']/cda:entry/cda:observation[@classCode = 'OBS']/cda:value" priority="3993" mode="M33">
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ED' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ED')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.4 FAQ_Diagnostic_Investigations_with_correct_OIDS_rev001 - "Undifferentiated Pathology and Radiology Results / Value" - The 'value' tag 'xsi:type' attribute shall contain the value 'ED'. Refer to section 7.1.5.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ED' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ED')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M33" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M33" />
  <xsl:template match="cda:targetSiteCode" priority="4000" mode="M34">
    <xsl:choose>
      <xsl:when test="                 cda:originalText or (@code and @codeSystem) or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@code" attribute - The 'targetSiteCode' tag shall have at least the 'originalText' tag or the 'code and codeSystem' or the 'nullFlavor' attributes. Check all 'cda:targetSiteCode' tags to find the missing tag or attribute(s). Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 cda:originalText or (@code and @codeSystem) or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystem and normalize-space(@codeSystem) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@codeSystem" attribute - The 'targetSiteCode' tag 'codeSystem' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'codeSystem' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystem and normalize-space(@codeSystem) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@codeSystem" attribute - The 'targetSiteCode' tag 'codeSystem' attribute shall contain an UUID or OID. Check all 'cda:targetSiteCode' tags to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@codeSystem" attribute - The 'targetSiteCode' tag 'codeSystem' attribute shall be a valid UUID. Check all 'cda:targetSiteCode' tags to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@codeSystem" attribute - The 'targetSiteCode' tag 'codeSystem' attribute shall be a valid OID. Check all 'cda:targetSiteCode' tags to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@nullFlavor" attribute - The 'targetSiteCode' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:targetSiteCode' tags 'nullFlavor' attributes to find the 'nullFlavor' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and                 normalize-space(@nullFlavor) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Coded_DataType_NullFlavor']/code[(@code = current()/@nullFlavor)])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@nullFlavor" attribute - The 'targetSiteCode' tag 'nullFlavor' attribute shall be as per FAQ Representing Coding in CDA Documents CDA CD DataType nullFlavors. Check all 'cda:targetSiteCode' tags to find the 'nullFlavor' attributes of incorrect value. Refer to the HL7 data types specification and section 2.1.1 of the FAQ Representing Coding in CDA Documents, and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and                 normalize-space(@nullFlavor) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Coded_DataType_NullFlavor']/code[(@code = current()/@nullFlavor)])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:originalText) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:originalText" - The 'originalText' tag shall appear only once. Check all 'cda:targetSiteCode' tags to find the duplicated 'originalText' child tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:originalText) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:originalText and normalize-space(cda:originalText) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:originalText" - The 'originalText' tag shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'originalText' child tag have value missing. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:originalText and normalize-space(cda:originalText) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@code" attribute - The 'targetSiteCode' tag 'code' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'code' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="substring(@code, 1, 1) = ' ' or substring(@code, string-length(@code), 1) = ' '">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@code" attribute - The 'targetSiteCode' tag 'code' attribute shall not start or end with space. Check all 'cda:targetSiteCode' tags to find the 'code' attribute with incorrect value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">substring(@code, 1, 1) = ' ' or substring(@code, string-length(@code), 1) = ' '</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@codeSystem) and @code">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@code" attribute - The 'targetSiteCode' tag 'code' attribute shall not be present if the corresponding 'codeSystem' attribute is missing. Check all 'cda:targetSiteCode' tags to find the incorrectly contained 'code' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@codeSystem) and @code</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@codeSystemName" attribute - The 'targetSiteCode' tag 'codeSystemName' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'codeSystemName' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemVersion and normalize-space(@codeSystemVersion) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@codeSystemVersion" attribute - The 'targetSiteCode' tag 'codeSystemVersion' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'codeSystemVersion' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemVersion and normalize-space(@codeSystemVersion) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@displayName" attribute - The 'targetSiteCode' tag 'displayName' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'displayName' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/@displayName" attribute - The 'targetSiteCode' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:targetSiteCode' tags to find the incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:qualifier) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier" tag - The 'qualifier' tag shall appear only once. Check all 'targetSiteCode' tags to find the duplicated child 'qualifier' tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:qualifier) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="cda:targetSiteCode/cda:translation" priority="3999" mode="M34">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute is missing. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with missing 'codeSystem' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag 'codeSystem' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain an UUID or OID. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall be a valid UUID. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall be a valid OID. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 not(parent::*/@codeSystem) or                 normalize-space(parent::*/@codeSystem) = '' or                 @codeSystem != parent::*/@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain a value different from the codeSystem it translates from. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 not(parent::*/@codeSystem) or                 normalize-space(parent::*/@codeSystem) = '' or                 @codeSystem != parent::*/@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@code or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation" attributes - The 'translation' tag shall have at least the 'code' or the 'nullFlavor' attributes. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with the missing attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@nullFlavor" attribute - The 'translation' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag 'nullFlavor' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'OTH'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@nullFlavor" attribute - The 'translation' tag 'nullFlavor' attribute shall contain the value 'OTH'. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag 'nullFlavor' attribute of incorrect value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'OTH'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:originalText)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation" - The 'originalText' tag shall not be present within 'translation' tag. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag containing 'originalText' tag. Refer to the HL7 data types specification and section 2.1.5 of the Implementation Guidance - Representing Coding in CDA Documents - Version 1.0 - 10 October 2011, and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:originalText)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation" - The 'translation' tag shall not be present within 'translation' tag. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with nested 'translation' tag. Refer to the HL7 data types specification and section 2.1.5 of the Implementation Guidance - Representing Coding in CDA Documents - Version 1.0 - 10 October 2011, and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag 'code' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="substring(@code, 1, 1) = ' ' or substring(@code, string-length(@code), 1) = ' '">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall not start or end with space. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag 'code' attribute of incorrect value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">substring(@code, 1, 1) = ' ' or substring(@code, string-length(@code), 1) = ' '</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@codeSystem) and @code">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall not be present if the corresponding 'codeSystem' attribute is missing. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with incorrectly contained 'code' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@codeSystem) and @code</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@codeSystemName" attribute - The 'translation' tag 'codeSystemName' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag 'codeSystemName' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemVersion and normalize-space(@codeSystemVersion) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@codeSystemVersion" attribute - The 'translation' tag 'codeSystemVersion' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag 'codeSystemVersion' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemVersion and normalize-space(@codeSystemVersion) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@displayName" attribute - The 'translation' tag 'displayName' attribute shall contain a value. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag 'displayName' attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/@displayName" attribute - The 'translation' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:qualifier)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:translation/cda:qualifier" - The 'qualifier' tag shall not be present within 'translation'. Check all 'cda:targetSiteCode' tags to find the 'translation' child tag with the incorrect child 'qualifier' tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:qualifier)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="cda:targetSiteCode/cda:originalText" priority="3998" mode="M34">
    <xsl:if test="count(cda:reference) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:targetSiteCode/cda:originalText' tag - The 'reference' tag shall appear only once. Check all 'cda:targetSiteCode/cda:originalText' tags to find the duplicated 'reference' tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:reference) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:reference and                 normalize-space(concat(text()[1], text()[2])) != '' and                 normalize-space(concat(text()[1], text()[2])) !=                 normalize-space(concat(ancestor::cda:component/cda:section/cda:text/text()[1],                                        ancestor::cda:component/cda:section/cda:text/text()[2]))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:targetSiteCode/cda:originalText' tag - The 'originalText' tag shall contain the value match to its corresponding narrative block text. Check all 'cda:targetSiteCode/cda:originalText' tags to find the corresponding narrative text mismatch. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:reference and                 normalize-space(concat(text()[1], text()[2])) != '' and                 normalize-space(concat(text()[1], text()[2])) !=                 normalize-space(concat(ancestor::cda:component/cda:section/cda:text/text()[1],                                        ancestor::cda:component/cda:section/cda:text/text()[2]))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="cda:targetSiteCode/cda:originalText/cda:reference" priority="3997" mode="M34">
    <xsl:choose>
      <xsl:when test="@value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:targetSiteCode/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute is missing. Check all 'cda:targetSiteCode/cda:originalText/cda:reference' tags to find the missing 'value' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or normalize-space(@value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:targetSiteCode/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:originalText/cda:reference' tags to find the empty 'value' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or normalize-space(@value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value) or                 normalize-space(@value) = '' or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:targetSiteCode/cda:originalText/cda:reference' tag - The narrative 'text/content/@ID' attribute corresponding to the 'reference' tag 'value' attribute is missing. Check all 'cda:targetSiteCode/cda:originalText/cda:reference' tags to find the missing corresponding narrative. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value) or                 normalize-space(@value) = '' or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value) or                 normalize-space(@value) = '' or                 not(ancestor::cda:component/cda:section/cda:text) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content/@ID) or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID = @value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">&gt;Error: Specialist Letter - Global Clinical Document check for 'cda:targetSiteCode/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute shall contain the value match to its corresponding narrative block content 'ID' attribute. Check all 'cda:targetSiteCode/cda:originalText/cda:reference' tags to find the corresponding narrative content ID mismatch. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value) or                 normalize-space(@value) = '' or                 not(ancestor::cda:component/cda:section/cda:text) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content/@ID) or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID = @value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="cda:targetSiteCode/cda:qualifier" priority="3996" mode="M34">
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name" tag - The 'name' tag is missing. Check all 'targetSiteCode' tags to find the missing tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name" tag - The 'name' tag shall appear only once. Check all 'targetSiteCode' tags to find the duplicated tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value" tag - The 'value' tag is missing. Check all 'targetSiteCode' tags to find the missing tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value" tag - The 'value' tag shall appear only once. Check all 'targetSiteCode' tags to find the duplicated tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="cda:targetSiteCode/cda:qualifier/cda:name" priority="3995" mode="M34">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@code" attribute - The 'name' tag 'code' attribute is missing. Check all 'targetSiteCode' tags to find the missing attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@code" attribute - The 'name' tag 'code' attribute shall contain a value. Check all 'targetSiteCode' tags to find the attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@code) or                 normalize-space(@code) = '' or                 @code = '78615007'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@code" attribute - The 'name' tag 'code' attribute shall contain the value '78615007'. Check all 'targetSiteCode' tags to find the incorrect the attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@code) or                 normalize-space(@code) = '' or                 @code = '78615007'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@codeSystem" attribute - The 'name' tag 'codeSystem' attribute is missing. Check all 'targetSiteCode' tags to find the missing attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@codeSystem" attribute - The 'name' tag 'codeSystem' attribute shall contain a value. Check all 'targetSiteCode' tags to find the attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@codeSystem" attribute - The 'name' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Check all 'targetSiteCode' tags to find the incorrect attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@codeSystemName" attribute - The 'name' tag 'codeSystemName' attribute shall contain a value. Check all 'targetSiteCode' tags to find the attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and                 normalize-space(@codeSystemName) != '' and                 (@codeSystemName != 'SNOMED CT-AU')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@codeSystemName" attribute - The 'name' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Check all 'targetSiteCode' tags to find the incorrect attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and                 normalize-space(@codeSystemName) != '' and                 (@codeSystemName != 'SNOMED CT-AU')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemVersion and normalize-space(@codeSystemVersion) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@codeSystemName" attribute - The 'name' tag 'codeSystemVersion' attribute shall contain a value. Check all 'targetSiteCode' tags to find the attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemVersion and normalize-space(@codeSystemVersion) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemVersion and                 normalize-space(@codeSystemVersion) != '' and                 @codeSystemVersion != '20110531'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@codeSystemVersion" attribute - The 'name' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Check all 'targetSiteCode' tags to find the incorrect attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemVersion and                 normalize-space(@codeSystemVersion) != '' and                 @codeSystemVersion != '20110531'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@displayName" attribute - The 'name' tag 'displayName' attribute shall contain a value. Check all 'targetSiteCode' tags to find the attribute of missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@displayName" attribute - The 'targetSiteCode/qualifier/name' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:targetSiteCode/cda:qualifier/cda:name' tags to find the incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @displayName and                 normalize-space(@displayName) != '' and                 (@displayName != 'with laterality')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:name/@displayName" attribute - The 'name' tag 'displayName' attribute shall contain the value 'with laterality'. Check all 'targetSiteCode' tags to find the incorrect attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @displayName and                 normalize-space(@displayName) != '' and                 (@displayName != 'with laterality')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="cda:targetSiteCode/cda:qualifier/cda:value" priority="3994" mode="M34">
    <xsl:if test="cda:originalText and normalize-space(cda:originalText) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/cda:originalText" - The 'originalText' tag shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value/cda:originalText' tags to find the missing text. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:originalText and normalize-space(cda:originalText) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:originalText) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/cda:originalText" - The 'originalText' tag shall appear only once. Check all 'cda:targetSiteCode/cda:qualifier/cda:value/cda:originalText' tags to find the duplicated text. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:originalText) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 cda:originalText or (@code and @codeSystem) or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/@code" attribute - The 'value' tag shall have 'originalText' tag or 'code and codeSystem' or 'nullFlavor' attribute. Check all 'cda:targetSiteCode/cda:qualifier/cda:value' tags to find the missing tag or attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 cda:originalText or (@code and @codeSystem) or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/@nullFlavor" attribute - The 'value' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value' tags 'nullFlavor' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/@code" attribute - The 'value' tag 'code' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value' tags 'code' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystem and normalize-space(@codeSystem) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/@codeSystem" attribute - The 'value' tag 'codeSystem' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value' tags 'codeSystem' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystem and normalize-space(@codeSystem) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/@codeSystemName" attribute - The 'value' tag 'codeSystemName' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value' tags 'codeSystemName' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/@displayName" attribute - The 'value' tag 'displayName' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value' tags 'displayName' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/@displayName" attribute - The 'targetSiteCode/qualifier/value' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:targetSiteCode/cda:qualifier/cda:value' tags to find the incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="cda:targetSiteCode/cda:qualifier/cda:value/cda:translation" priority="3993" mode="M34">
    <xsl:choose>
      <xsl:when test="@code and @codeSystem or (@nullFlavor='OTH' and @codeSystem)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/cda:translation" attributes - The 'translation' tag shall have 'code' and 'codeSystem' attributes. Check all 'cda:targetSiteCode/cda:qualifier/cda:value/cda:translation' tags to find the missing tag or attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code and @codeSystem or (@nullFlavor='OTH' and @codeSystem)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/cda:translation/@nullFlavor" attribute - The 'translation' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value/cda:translation' tags 'nullFlavor' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value/cda:translation' tags 'code' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystem and normalize-space(@codeSystem) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value/cda:translation' tags 'codeSystem' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystem and normalize-space(@codeSystem) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/cda:translation/@codeSystemName" attribute - The 'translation' tag 'codeSystemName' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value/cda:translation' tags 'codeSystemName' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:value/cda:translation/@displayName" attribute - The 'translation' tag 'displayName' attribute shall contain a value. Check all 'cda:targetSiteCode/cda:qualifier/cda:value/cda:translation' tags 'displayName' attributes to find the missing value. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:targetSiteCode/cda:qualifier/cda:translation/@displayName" attribute - The 'targetSiteCode/qualifier/translation' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:targetSiteCode/cda:qualifier/cda:translation' tags to find the incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="cda:section[cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id]" priority="3992" mode="M34">
    <xsl:choose>
      <xsl:when test="                 starts-with(cda:text//cda:linkHtml/@href, 'pcehr:')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "linkHtml" tag - The 'cda:content/cda:linkHtml' tag 'href' attribute shall start with 'pcehr:'. Refer to section(s) 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 starts-with(cda:text//cda:linkHtml/@href, 'pcehr:')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 starts-with(substring-before(substring-after(concat(cda:text//cda:linkHtml/@href, '^'), '/'), '^'), '2.25.') or                 substring-before(substring-after(concat(cda:text//cda:linkHtml/@href, '^'), '/'), '^') = cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id/@root" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "linkHtml" tag - The 'cda:content/cda:linkHtml' tag 'href' attribute shall contain the value from 'cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id/@root'. Refer to section(s) 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 starts-with(substring-before(substring-after(concat(cda:text//cda:linkHtml/@href, '^'), '/'), '^'), '2.25.') or                 substring-before(substring-after(concat(cda:text//cda:linkHtml/@href, '^'), '/'), '^') = cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id/@root</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 starts-with(cda:text//cda:linkHtml/@href, 'pcehr:') and                 cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id/@extension and                 substring-after(substring-after(cda:text//cda:linkHtml/@href, ':'), '^') != cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id/@extension">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "linkHtml" tag - The 'cda:content/cda:linkHtml' tag 'href' attribute shall contain the value from 'cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id/@extension'. Refer to section(s) 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 starts-with(cda:text//cda:linkHtml/@href, 'pcehr:') and                 cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id/@extension and                 substring-after(substring-after(cda:text//cda:linkHtml/@href, ':'), '^') != cda:entry/cda:act/cda:reference/cda:externalDocument/cda:id/@extension</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M34" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M34" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation/cda:code[@displayName ='Date of Birth is Calculated From Age']" priority="4000" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16233'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age - The 'code' tag 'code' attribute shall contain the value '103.16233'. Refer to section '6.1.1 Subject of Care' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16233'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation/cda:code[@displayName ='Date of Birth Accuracy Indicator']" priority="3999" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.16234'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator - The 'code' tag 'code' attribute shall contain the value '102.16234'. Refer to section '6.1.1 Subject of Care' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16234'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation/cda:code[@displayName ='Age']" priority="3998" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.20109'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age - The 'code' tag 'code' attribute shall contain the value '103.20109'. Refer to section '6.1.1 Subject of Care' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.20109'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation/cda:code[@displayName ='Age Accuracy Indicator']" priority="3997" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16279'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator - The 'code' tag 'code' attribute shall contain the value '103.16279'. Refer to section '6.1.1 Subject of Care' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16279'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation/cda:code[@displayName ='Birth Plurality']" priority="3996" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16249'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality - The 'code' tag 'code' attribute shall contain the value '103.16249'. Refer to section '6.1.1 Subject of Care' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16249'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation/cda:code[@displayName ='Date of Death Accuracy Indicator']" priority="3995" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.16252'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator - The 'code' tag 'code' attribute shall contain the value '102.16252'. Refer to section '6.1.1 Subject of Care' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16252'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:observation/cda:code[@displayName ='Diagnosis interpretation']" priority="3994" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '282291009'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.2 - Diagnosis - The 'code' tag 'code' attribute shall contain the value '282291009'. Refer to section '7.1.1.2 DIAGNOSIS' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '282291009'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act/cda:code[@displayName ='Other Diagnosis Procedure Entry']" priority="3993" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.15513.132.1.1'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 - Other Diagnosis Procedure Entry - The 'code' tag 'code' attribute shall contain the value '102.15513.132.1.1'. Refer to section '7.1.1.3 Other Diagnosis Procedure Entry' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.15513.132.1.1'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act/cda:code[@displayName ='Response Narrative']" priority="3992" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.15513.132.1.2'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 - Response Narrative - The 'code' tag 'code' attribute shall contain the value '102.15513.132.1.2'. Refer to section '7.1.1.4 Response Narrative' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.15513.132.1.2'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act/cda:code[@displayName ='Recommendation']" priority="3991" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.20016'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 - Recommendation - The 'code' tag 'code' attribute shall contain the value '102.20016'. Refer to section '7.1.2.1 Recommendation' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.20016'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:observation/cda:code[@displayName = 'Recommendations Exclusion']" priority="3990" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.16134'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 - Recommendations Exclusion / General Statement - The 'code' tag 'code' attribute shall contain the value '102.16134'. Refer to section '7.1.2.2 Recommendations Exclusion' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16134'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:act/cda:code[@displayName ='Clinical Indication']" priority="3989" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.10141'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 - Medication / Clinical Indication - The 'code' tag 'code' attribute shall contain the value '103.10141'. Refer to section '7.1.3.1 Medication' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.10141'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:act/cda:code[@displayName ='Additional Comments']" priority="3988" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16044'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 - Medication / Comment - The 'code' tag 'code' attribute shall contain the value '103.16044'. Refer to section '7.1.3.1 Medication' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16044'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Change Type']" priority="3987" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16593'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 - Medication / Change Type - The 'code' tag 'code' attribute shall contain the value '103.16593'. Refer to section "'7.1.3.1 Medication'" of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16593'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Recommendation or Change']" priority="3986" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16595'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 - Medication / Change or Recommendation - The 'code' tag 'code' attribute shall contain the value '103.16595'. Refer to section '7.1.3.1 Medication' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16595'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:act/cda:code[@displayName ='Change Reason']" priority="3985" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.10177'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 - Medication / Change Reason - The 'code' tag 'code' attribute shall contain the value '103.10177'. Refer to section '7.1.3.1 Medication' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.10177'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:observation/cda:code[@displayName ='Global Statement']" priority="3984" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16302.132.1.1'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.2 - EXCLUSION STATEMENT / MEDICATIONS / Global Statement - The 'code' tag 'code' attribute shall contain the value '103.16302.132.1.1'. Refer to section '7.1.3.2 EXCLUSION STATEMENT - MEDICATIONS' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16302.132.1.1'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry/cda:act/cda:code[@displayName ='Adverse Reaction']" priority="3983" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.15517'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 - Adverse Reaction - The 'code' tag 'code' attribute shall contain the value '102.15517' . Refer to section '7.1.4.1 Adverse Reaction' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.15517'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20113']/cda:entry[cda:act/cda:code/@code = '102.15517']/cda:act/cda:entryRelationship/cda:observation/cda:code[@displayName ='Reaction Event']" priority="3982" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.16474'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.4.1 - Adverse Reaction / Reaction Event - The 'code' tag 'code' attribute shall contain the value '102.16474'. Refer to section '7.1.4.1 Adverse Reaction' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16474'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='pathology service']" priority="3981" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '310074003'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Diagnostic Service - The 'code' tag 'code' attribute shall contain the value '310074003'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '310074003'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='report status']" priority="3980" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '308552006'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Overall Pathology Test Result Status Code Checks - The 'code' tag 'code' attribute shall contain the value '308552006'. Refer to section "'7.1.5.1 Pathology Test Result'" of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '308552006'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act/cda:code[@displayName ='Clinical information']" priority="3979" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '55752-0'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Clinical Information Provided - The 'code' tag 'code' attribute shall contain the value '55752-0'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '55752-0'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='pathology diagnosis']" priority="3978" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '88101002'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Pathological Diagnosis - The 'code' tag 'code' attribute shall contain the value '88101002'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '88101002'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='laboratory findings data interpretation']" priority="3977" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '386344002'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Pathology Test Conclusion - The 'code' tag 'code' attribute shall contain the value '386344002'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '386344002'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act/cda:code[@displayName ='Test Comment']" priority="3976" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16468'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Test Comment - The 'code' tag 'code' attribute shall contain the value '103.16468'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16468'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act/cda:code[@displayName ='Test Request Details']" priority="3975" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.16160'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Test Request Details - The 'code' tag 'code' attribute shall contain the value '102.16160'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16160'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16160']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Test Requested Name']" priority="3974" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.11017'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Test Request Details / Test Requested Name - The 'code' tag 'code' attribute shall contain the value '103.11017'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.11017'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Pathology Test Result DateTime']" priority="3973" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16605'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 - Pathology Test Result / Pathology Test Result DateTime - The 'code' tag 'code' attribute shall contain the value '103.16605'. Refer to section '7.1.5.1 Pathology Test Result' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16605'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Test Specimen Detail']" priority="3972" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.16156.132.1.1'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 - Test Specimen Detail - The 'code' tag 'code' attribute shall contain the value '102.16156.132.1.1'. Refer to section '7.1.5.1.1 Test Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16156.132.1.1'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:targetSiteCode/cda:qualifier/cda:name[@displayName ='with laterality']" priority="3971" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '78615007'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 Test Specimen Detail / Anatomical Site / Specific Location / Side - The 'code' tag 'code' attribute shall contain the value '78615007'. Refer to section '7.1.5.1.1 Test Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '78615007'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Sampling Preconditions']" priority="3970" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16171'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 Test Specimen Detail / Collection and handling / Sampling Preconditions - The 'code' tag 'code' attribute shall contain the value '103.16171'. Refer to section '7.1.5.1.1 Test Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16171'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Collection Setting']" priority="3969" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16529'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 Test Specimen Detail / Handling and Processing / Collection Setting - The 'code' tag 'code' attribute shall contain the value '103.16529'. Refer to section "'7.1.5.1.1 Test Specimen Detail'" of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16529'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@displayName ='DateTime Received']" priority="3968" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.11014'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 Test Specimen Detail / Handling and Processing / DateTime Received - The 'code' tag 'code' attribute shall contain the value '103.11014'. Refer to section '7.1.5.1.1 Test Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.11014'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Parent Specimen Identifier']" priority="3967" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16187'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 Test Specimen Detail / Identifiers / Parent Specimen Identifier - The 'code' tag 'code' attribute shall contain the value '103.16187'. Refer to section '7.1.5.1.1 Test Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16187'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation/cda:entryRelationship/cda:act/cda:code[@displayName ='result comments']" priority="3966" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '281296001'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment - The 'code' tag 'code' attribute shall contain the value '281296001'. Refer to section '7.1.5.1.2 Pathology Test Result Group' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '281296001'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation/cda:entryRelationship/cda:act/cda:code[@displayName ='reference range comments']" priority="3965" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '281298000'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance - The 'code' tag 'code' attribute shall contain the value '281298000'. Refer to section '7.1.5.1.2 Pathology Test Result Group' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '281298000'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation/cda:code[@displayName ='Result Group Specimen Detail']" priority="3964" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.16156.132.1.2'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 Result Group Specimen Detail - The 'code' tag 'code' attribute shall contain the value '102.16156.132.1.2'. Refer to section '7.1.5.1.2.1 Result Group Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16156.132.1.2'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:targetSiteCode/cda:qualifier/cda:name[@displayName ='with laterality']" priority="3963" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '78615007'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 Result Group Specimen Detail /Anatomical Site / Specific Location / Side - The 'name' tag 'code' attribute shall contain the value '78615007'. Refer to section '7.1.5.1.2.1 Result Group Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '78615007'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Sampling Preconditions']" priority="3962" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16171'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 Result Group Specimen Detail / Collection and handling / Sampling Preconditions - The 'code' tag 'code' attribute shall contain the value '103.16171'. Refer to section '7.1.5.1.2.1 Result Group Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16171'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Collection Setting']" priority="3961" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16529'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 Result Group Specimen Detail / Handling and Processing / Collection Setting - The 'code' tag 'code' attribute shall contain the value '103.16529'. Refer to section '7.1.5.1.2.1 Result Group Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16529'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='DateTime Received']" priority="3960" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.11014'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 Result Group Specimen Detail / Handling and Processing / DateTime Received - The 'code' tag 'code' attribute shall contain the value '103.11014'. Refer to section '7.1.5.1.2.1 Result Group Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.11014'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName ='Parent Specimen Identifier']" priority="3959" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16187'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 Result Group Specimen Detail / Identifiers / Parent Specimen Identifier - The 'code' tag 'code' attribute shall contain the value '103.16187'. Refer to section '7.1.5.1.2.1 Result Group Specimen Detail' of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16187'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:targetSiteCode/cda:qualifier/cda:name[@displayName = 'with laterality']" priority="3958" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '78615007'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 Imaging Examination Result / Anatomical Site / Specific Location / Side - The 'name' tag 'code' attribute shall contain the value '78615007'. Refer to section 7.1.5.2 Imaging Examination Result of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '78615007'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@displayName = 'Clinical information']" priority="3957" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '55752-0'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT / Clinical Information Provided - The 'code' tag 'code' attribute shall contain the value '55752-0'. Refer to section 7.1.5.2 IMAGING EXAMINATION RESULT of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '55752-0'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName = 'Findings']" priority="3956" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16503'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT / Findings - The 'code' tag 'code' attribute shall be '103.16503'. Refer to section 7.1.5.2 IMAGING EXAMINATION RESULT of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16503'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@displayName = 'result comments']" priority="3955" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '281296001'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP / Result Comment - The 'code' tag 'code' attribute shall be '281296001'. Refer to section 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '281296001'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:targetSiteCode/cda:qualifier/cda:name[@displayName = 'with laterality']" priority="3954" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '78615007'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP / Specific Location / Side - The 'name' tag 'code' attribute shall contain the value '78615007'. Refer to section 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '78615007'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@displayName = 'Examination Request Details']" priority="3953" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '102.16511'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS / Examination Request Details - The 'code' tag 'code' attribute shall contain the value '102.16511'. Refer to section 7.1.5.2.2 EXAMINATION REQUEST DETAILS of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '102.16511'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:observation/cda:code[@displayName = 'Examination Requested Name']" priority="3952" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16512'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS / Examination Requested Name - The 'code' tag 'code' attribute shall be '103.16512'. Refer to section 7.1.5.2.2 EXAMINATION REQUEST DETAILS of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16512'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act/cda:code[@displayName = 'DICOM Study Identifier']" priority="3951" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16513'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS / DICOM Study Identifier - The 'code' tag 'code' attribute shall be '103.16513'. Refer to section 7.1.5.2.2 EXAMINATION REQUEST DETAILS of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16513'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:observation/cda:code[@displayName = 'Report Identifier']" priority="3950" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16514'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS / Report Identifier - The 'code' tag 'code' attribute shall be '103.16514'. Refer to section 7.1.5.2.2 EXAMINATION REQUEST DETAILS of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16514'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation/cda:code[@displayName = 'Image Details']" priority="3949" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16515'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS / Image Detail - The 'code' tag 'code' attribute shall contain the value '103.16515'. Refer to section 7.1.5.2.2 EXAMINATION REQUEST DETAILS of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16515'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@displayName = 'DICOM Series Identifier']" priority="3948" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16517'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS / DICOM Series Identifier - The 'code' tag 'code' attribute shall contain the value '103.16517'. Refer to section 7.1.5.2.2 EXAMINATION REQUEST DETAILS of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16517'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16511']/cda:entryRelationship/cda:act[cda:code/@code = '103.16513']/cda:entryRelationship/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@displayName = 'Subject Position']" priority="3947" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16519'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.2 EXAMINATION REQUEST DETAILS / Subject Position - The 'code' tag 'code' attribute shall contain the value '103.16519'. Refer to section 7.1.5.2.2 EXAMINATION REQUEST DETAILS of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16519'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode='ACT']/cda:entryRelationship/cda:act/cda:code[@displayName = 'Subject of Care Instruction Description']" priority="3946" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.10146'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 Requested Service / Subject of Care Instruction Description - The 'code' tag 'code' attribute shall be '103.10146'. Refer to section 7.1.5.3 Requested Service of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.10146'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode='ACT']/cda:entryRelationship/cda:act/cda:code[@displayName = 'Requested Service DateTime']" priority="3945" mode="M35">
    <xsl:choose>
      <xsl:when test="@code = '103.16635'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 Requested Service / Requested Service DateTime - The 'code' tag 'code' attribute shall be '103.16635. Refer to section 7.1.5.3 Requested Service of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = '103.16635'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M35" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M35" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:organizer/@classCode = 'BATTERY']" priority="4000" mode="M36">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:organizer) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'organizer' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:organizer) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']" priority="3999" mode="M36">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'organizer' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'organizer' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'organizer' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'id' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'id' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:statusCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'statusCode' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:statusCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:statusCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'statusCode' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:statusCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Imaging Examination Result Group Name" - The 'code' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Imaging Examination Result Group Name" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:component[cda:observation/@classCode = 'OBS']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'component' tag is missing for ' Individual Imaging Examination Result'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:component[cda:observation/@classCode = 'OBS']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:id" priority="3998" mode="M36">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:statusCode" priority="3997" mode="M36">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'statusCode' tag 'code' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'statusCode' tag 'code' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@code) or normalize-space(@code) = '' or @code = 'completed'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'statusCode' tag 'code' attribute shall contain the value 'completed'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@code) or normalize-space(@code) = '' or @code = 'completed'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component[cda:observation/@classCode = 'OBS']" priority="3996" mode="M36">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']" priority="3995" mode="M36">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'id' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'id' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Individual Imaging Examination Result Name" - The 'code' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Individual Imaging Examination Result Name" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value" - The 'value' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:interpretationCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:interpretationCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:targetSiteCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Specific Location / Anatomical Location Name" - The 'targetSiteCode' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:targetSiteCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:id" priority="3994" mode="M36">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:code" priority="3993" mode="M36">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Individual Imaging Examination Result Name" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:interpretationCode" priority="3992" mode="M36">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'code' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'code' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'HL7_ObservationInterpretationNormality']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'code' attribute shall be as per 10.21 HL7 V3: ObservationInterpretationNormality. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'HL7_ObservationInterpretationNormality']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.5.83'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.5.83'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.5.83'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'HL7 ObservationInterpretationNormality'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'codeSystemName' attribute shall contain the value 'HL7 ObservationInterpretationNormality'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'HL7 ObservationInterpretationNormality'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'displayName' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'HL7_ObservationInterpretationNormality']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Normal Status" - The 'interpretationCode' tag 'code' and 'displayName' attributes shall match as per 10.21 HL7 V3: ObservationInterpretationNormality. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'HL7_ObservationInterpretationNormality']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:referenceRange" priority="3991" mode="M36">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'referenceRange' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'referenceRange' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFV'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'referenceRange' tag 'typeCode' attribute shall contain the value 'REFV'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFV'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observationRange) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'observationRange' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observationRange) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:observationRange" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'observationRange' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:observationRange</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:referenceRange/cda:observationRange" priority="3990" mode="M36">
    <xsl:if test="@classCode and normalize-space(@classCode) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'observationRange' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@classCode and normalize-space(@classCode) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @classCode and normalize-space(@classCode) != '' and @classCode != 'OBS'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'observationRange' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @classCode and normalize-space(@classCode) != '' and @classCode != 'OBS'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'observationRange' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'observationRange' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN.CRT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details" - The 'observationRange' tag 'moodCode' attribute shall contain the value 'EVN.CRT'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN.CRT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details / Imaging Examination Result Value Reference Range Meaning" - The 'code' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details / Imaging Examination Result Value Reference Range Meaning" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details / Imaging Examination Result Value Reference Range" - The 'value' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details / Imaging Examination Result Value Reference Range" - The 'value' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:referenceRange/cda:observationRange/cda:code" priority="3989" mode="M36">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details / Imaging Examination Result Value Reference Range Meaning" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:referenceRange/cda:observationRange/cda:value" priority="3988" mode="M36">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details / Imaging Examination Result Value Reference Range" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'IVL_PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details / Imaging Examination Result Value Reference Range" - The 'value' tag 'xsi:type' attribute shall contain the value 'IVL_PQ'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'IVL_PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value Reference Range Details / Imaging Examination Result Value Reference Range" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:act/cda:code/@code = '281296001']" priority="3987" mode="M36">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'act' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '281296001']" priority="3986" mode="M36">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'text' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'text' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act/cda:code[@code = '281296001']" priority="3985" mode="M36">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RESULT COMMENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'displayName' attribute shall contain the value 'result comments'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RESULT COMMENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '281296001']/cda:text" priority="3984" mode="M36">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observationMedia/@classCode = 'OBS']" priority="3983" mode="M36">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'REFR'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observationMedia) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'observationMedia' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observationMedia) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']" priority="3982" mode="M36">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'id' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'id' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'value' tag is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'value' tag shall appear only once. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']/cda:id" priority="3981" mode="M36">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M36" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M36" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer" priority="4000" mode="M37">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'organizer' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'organizer' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'BATTERY'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group" - The 'organizer' tag 'classCode' attribute shall contain the value 'BATTERY'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'BATTERY'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M37" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation" priority="3999" mode="M37">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M37" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '281296001' and ancestor::*[cda:code/@code = '102.16145']]" priority="3998" mode="M37">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:section[cda:code/@code='102.16145']//cda:code[@code = '281296001']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='281296001'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Result Comment" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/organizer[@classCode = 'BATTERY']/component/observation[@classCode = 'OBS']/entryRelationship/act/code[@code = '281296001']' path - 1 or more tags are missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:section[cda:code/@code='102.16145']//cda:code[@code = '281296001']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='281296001'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M37" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observationMedia" priority="3997" mode="M37">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute is missing. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Anatomical Location / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M37" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS']/cda:value" priority="3996" mode="M37">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                 normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                   normalize-space(@xsi:type) = 'PQ' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'PQ')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2.1 IMAGING EXAMINATION RESULT GROUP - "Imaging Examination Result Group / Individual Imaging Examination Result / Imaging Examination Result Value" - The 'value' tag 'xsi:type' attributes shall be 'CD', 'PQ'. Refer to section 7.1.5.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                 normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                   normalize-space(@xsi:type) = 'PQ' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'PQ')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M37" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M37" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']" priority="4000" mode="M38">
    <xsl:if test="count(cda:entry[cda:observation/@classCode = 'OBS']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'entry' tag shall appear only once for ' Imaging Examination Result Name'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/@classCode = 'OBS']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry[cda:observation/@classCode = 'OBS']" priority="3999" mode="M38">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'entry' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']" priority="3998" mode="M38">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'id' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'id' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'code' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'code' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:methodCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Modality" - The 'methodCode' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:methodCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:observation/cda:code/@code = '308552006']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'entryRelationship' tag is missing for ' Imaging Examination Result Status'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:observation/cda:code/@code = '308552006']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '308552006']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'entryRelationship' tag shall appear only once for ' Imaging Examination Result Status'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '308552006']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '55752-0']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'entryRelationship' tag shall appear only once for ' Clinical Information Provided'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '55752-0']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16503']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'entryRelationship' tag shall appear only once for ' Findings'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16503']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Examination Result Representation" - The 'text' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:text and normalize-space(cda:text) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Examination Result Representation" - The 'text' tag shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:text and normalize-space(cda:text) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:observation/cda:code/@code = '103.16589']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'entryRelationship' tag is missing for ' Imaging Examination Result DateTime'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:observation/cda:code/@code = '103.16589']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16589']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'entryRelationship' tag shall appear only once for ' Imaging Examination Result DateTime'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16589']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:id" priority="3997" mode="M38">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'id' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:code" priority="3996" mode="M38">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observationMedia/@classCode = 'OBS']" priority="3995" mode="M38">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'REFR'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observationMedia) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observationMedia) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']" priority="3994" mode="M38">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'id' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'id' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'value' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'value' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']/cda:id" priority="3993" mode="M38">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '308552006']" priority="3992" mode="M38">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'entryRelationship' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']" priority="3991" mode="M38">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@code = '308552006']" priority="3990" mode="M38">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REPORT STATUS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'displayName' attribute shall contain the value 'report status'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REPORT STATUS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']/cda:value" priority="3989" mode="M38">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'code' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'code' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'code' attribute shall be as per 10.20 NCTIS: Admin Codes - Result Status. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16501'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.16501'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16501'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Result Status Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'codeSystemName' attribute shall contain the value 'NCTIS Result Status Values'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Result Status Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'displayName' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'code' and 'displayName' attributes shall match as per 10.20 NCTIS: Admin Codes - Result Status. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:act/cda:code/@code = '55752-0']" priority="3988" mode="M38">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'act' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '55752-0']" priority="3987" mode="M38">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'code' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'text' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'text' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'text' tag shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act/cda:code[@code = '55752-0']" priority="3986" mode="M38">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.1'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.1'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.1'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;LOINC&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'code' tag 'codeSystemName' attribute shall contain the value 'LOINC'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "LOINC"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;CLINICAL INFORMATION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'code' tag 'displayName' attribute shall contain the value 'Clinical information'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "CLINICAL INFORMATION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '55752-0']/cda:text" priority="3985" mode="M38">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and @xsi:type != 'ST'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and @xsi:type != 'ST'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16503']" priority="3984" mode="M38">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'REFR'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16503']" priority="3983" mode="M38">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'id' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'id' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'code' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'text' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'text' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'text' tag shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16503']/cda:id" priority="3982" mode="M38">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16503']" priority="3981" mode="M38">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16503']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@code='103.16503'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/observation/code[@code = '103.16503']' path - 1 or more tags are missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16503']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@code='103.16503'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;FINDINGS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'code' tag 'displayName' attribute shall contain the value 'Findings'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "FINDINGS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16503']/cda:text" priority="3980" mode="M38">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Findings" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16589']" priority="3979" mode="M38">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'entryRelationship' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'observation' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16589']" priority="3978" mode="M38">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'code' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:effectiveTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'effectiveTime' tag is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:effectiveTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16589']" priority="3977" mode="M38">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;IMAGING EXAMINATION RESULT DATETIME&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'code' tag 'displayName' attribute shall contain the value 'Imaging Examination Result DateTime'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "IMAGING EXAMINATION RESULT DATETIME"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16589']/cda:effectiveTime" priority="3976" mode="M38">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result DateTime" - The 'effectiveTime' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M38" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M38" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation" priority="4000" mode="M39">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Name" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M39" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observationMedia" priority="3999" mode="M39">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute is missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M39" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16145']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']/cda:value" priority="3998" mode="M39">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Imaging Examination Result Status" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M39" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '55752-0' and ancestor::*[cda:code/@code = '102.16145']]" priority="3997" mode="M39">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:section[cda:code/@code='102.16145']//cda:code[@code = '55752-0']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='55752-0'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.2 IMAGING EXAMINATION RESULT - "Imaging Examination Result / Clinical Information Provided" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16145']/entry/observation[@classCode = 'OBS']/entryRelationship/act/code[@code = '55752-0']' path - 1 or more tags are missing. Refer to section 7.1.5.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:section[cda:code/@code='102.16145']//cda:code[@code = '55752-0']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16145']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='55752-0'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M39" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M39" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']" priority="4000" mode="M40">
    <xsl:choose>
      <xsl:when test="cda:entry/cda:substanceAdministration[@classCode='SBADM'] or  cda:entry/cda:observation/cda:code[@code='103.16302.132.1.1']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3 Medications - 'section' tag shall have either 'MEDICATION' or 'EXCLUSION STATEMENT - MEDICATIONS' tag but not both. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entry/cda:substanceAdministration[@classCode='SBADM'] or  cda:entry/cda:observation/cda:code[@code='103.16302.132.1.1']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="cda:entry/cda:substanceAdministration[@classCode='SBADM'] and  cda:entry/cda:observation/cda:code[@code='103.16302.132.1.1']">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3 Medications - 'section' tag shall have either 'MEDICATION' or 'EXCLUSION STATEMENT - MEDICATIONS' tag but not both. Refer to section 7.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:entry/cda:substanceAdministration[@classCode='SBADM'] and  cda:entry/cda:observation/cda:code[@code='103.16302.132.1.1']</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M40" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M40" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry[cda:substanceAdministration/@classCode = 'SBADM']" priority="4000" mode="M41">
    <xsl:if test="count(cda:substanceAdministration) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'substanceAdministration' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:substanceAdministration) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']" priority="3999" mode="M41">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'substanceAdministration' tag 'moodCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'substanceAdministration' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'substanceAdministration' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'id' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'id' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:consumable" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'consumable' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:consumable</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:consumable) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'consumable' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:consumable) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Directions" - The 'text' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:text and normalize-space(cda:text) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Directions" - The 'text' tag shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:text and normalize-space(cda:text) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '103.10141']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'entryRelationship' tag shall appear only once for ' Clinical Indication'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '103.10141']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '103.16044']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'entryRelationship' tag shall appear only once for ' Comment'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '103.16044']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:observation/cda:code/@code = '103.16593']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'entryRelationship' tag is missing for ' Change Type'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:observation/cda:code/@code = '103.16593']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16593']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'entryRelationship' tag shall appear only once for ' Change Type'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16593']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:id" priority="3998" mode="M41">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:consumable" priority="3997" mode="M41">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'consumable' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:manufacturedProduct" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'manufacturedProduct' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:manufacturedProduct</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:manufacturedProduct) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'manufacturedProduct' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:manufacturedProduct) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:consumable/cda:manufacturedProduct" priority="3996" mode="M41">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'manufacturedProduct' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:manufacturedMaterial" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'manufacturedMaterial' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:manufacturedMaterial</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:manufacturedMaterial) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'manufacturedMaterial' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:manufacturedMaterial) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial" priority="3995" mode="M41">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'manufacturedMaterial' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'code' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'code' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:consumable/cda:manufacturedProduct/cda:manufacturedMaterial/cda:code" priority="3994" mode="M41">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Medicine" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:text" priority="3993" mode="M41">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Directions" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Directions" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship[cda:act/cda:code/@code = '103.10141']" priority="3992" mode="M41">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'RSON'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'RSON'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'RSON'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'act' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:act[cda:code/@code = '103.10141']" priority="3991" mode="M41">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'code' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'text' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'text' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'text' tag shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.10141']" priority="3990" mode="M41">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.10141']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:act/cda:code[@code='103.10141'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.16146']/entry/substanceAdministration[@classCode = 'SBADM']/entryRelationship/act/code[@code = '103.10141']' path - 1 or more tags are missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.10141']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:act/cda:code[@code='103.10141'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or @displayName = 'Clinical Indication'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'code' tag 'displayName' attribute shall contain the value 'Clinical Indication'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or @displayName = 'Clinical Indication'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:act[cda:code/@code = '103.10141']/cda:text" priority="3989" mode="M41">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Clinical Indication" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship[cda:act/cda:code/@code = '103.16044']" priority="3988" mode="M41">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'act' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:act[cda:code/@code = '103.16044']" priority="3987" mode="M41">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'code' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'text' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'text' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'text' tag shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16044']" priority="3986" mode="M41">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16044']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:act/cda:code[@code='103.16044'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.16146']/entry/substanceAdministration[@classCode = 'SBADM']/entryRelationship/act/code[@code = '103.16044']' path - 1 or more tags are missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16044']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:act/cda:code[@code='103.16044'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;ADDITIONAL COMMENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'code' tag 'displayName' attribute shall contain the value 'Additional Comments'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "ADDITIONAL COMMENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:act[cda:code/@code = '103.16044']/cda:text" priority="3985" mode="M41">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Comment" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16593']" priority="3984" mode="M41">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SPRT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'SPRT'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SPRT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'observation' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']" priority="3983" mode="M41">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'code' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:observation/cda:code/@code = '103.16595']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'entryRelationship' tag is missing for ' Change or Recommendation'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:observation/cda:code/@code = '103.16595']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16595']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'entryRelationship' tag shall appear only once for ' Change or Recommendation'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16595']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Description" - The 'text' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:text and normalize-space(cda:text) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Description" - The 'text' tag shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:text and normalize-space(cda:text) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '103.10177']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'entryRelationship' tag shall appear only once for ' Change Reason'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '103.10177']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16593']" priority="3982" mode="M41">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;CHANGE TYPE&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'code' tag 'displayName' attribute shall contain the value 'Change Type'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "CHANGE TYPE"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value" priority="3981" mode="M41">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'code' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS: Change Type Values']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'code' attribute shall be as per NCTIS: Change Type Values. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS: Change Type Values']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16592'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.16592'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16592'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Change Type Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'codeSystemName' attribute shall contain the value 'NCTIS Change Type Values'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Change Type Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'displayName' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS: Change Type Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'code' and 'displayName' attributes shall match as per NCTIS: Change Type Values. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS: Change Type Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16595']" priority="3980" mode="M41">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'observation' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']" priority="3979" mode="M41">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'code' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16595']" priority="3978" mode="M41">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RECOMMENDATION OR CHANGE&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'code' tag 'displayName' attribute shall contain the value 'Recommendation or Change'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RECOMMENDATION OR CHANGE"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value" priority="3977" mode="M41">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'code' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS: Admin Codes - Recommendation or Change Values']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'code' attribute shall be as per NCTIS: Admin Codes - Recommendation or Change Values. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS: Admin Codes - Recommendation or Change Values']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16594'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.16594'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16594'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Recommendation or Change Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'codeSystemName' attribute shall contain the value 'NCTIS Recommendation or Change Values'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Recommendation or Change Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'displayName' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS: Admin Codes - Recommendation or Change Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'code' and 'displayName' attributes shall match as per NCTIS: Admin Codes - Recommendation or Change Values. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS: Admin Codes - Recommendation or Change Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:text" priority="3976" mode="M41">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Description" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Description" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship[cda:act/cda:code/@code = '103.10177']" priority="3975" mode="M41">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'RSON'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'RSON'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'RSON'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'act' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:act[cda:code/@code = '103.10177']" priority="3974" mode="M41">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'code' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'text' tag is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'text' tag shall appear only once. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'text' tag shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.10177']" priority="3973" mode="M41">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.10177']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:observation[cda:code/@code='103.16593']/cda:entryRelationship/cda:act/cda:code[@code='103.10177'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.16146']/entry/substanceAdministration[@classCode = 'SBADM']/entryRelationship/observation[code/@code = '103.16593']/entryRelationship/act/code[@code = '103.10177']' path - 1 or more tags are missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.10177']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16146']/cda:entry/cda:substanceAdministration[@classCode='SBADM']/cda:entryRelationship/cda:observation[cda:code/@code='103.16593']/cda:entryRelationship/cda:act/cda:code[@code='103.10177'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;CHANGE REASON&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'code' tag 'displayName' attribute shall contain the value 'Change Reason'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "CHANGE REASON"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Reason" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M41" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M41" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration" priority="4000" mode="M42">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'substanceAdministration' tag 'classCode' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'substanceAdministration' tag 'classCode' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'SBADM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication" - The 'substanceAdministration' tag 'classCode' attribute shall contain the value 'SBADM'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'SBADM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value[@code='05' and @displayName='Ceased']) and (cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value[@code='02' and @displayName='The change has been made.']) and not(@negationInd)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'substanceAdministration' tag 'negationInd' attribute is missing. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value[@code='05' and @displayName='Ceased']) and (cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value[@code='02' and @displayName='The change has been made.']) and not(@negationInd)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value[@code='05' and @displayName='Ceased']) and (cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value[@code='02' and @displayName='The change has been made.']) and (@negationInd) and (normalize-space(@negationInd)='')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'substanceAdministration' tag 'negationInd' attribute shall contain a value. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value[@code='05' and @displayName='Ceased']) and (cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value[@code='02' and @displayName='The change has been made.']) and (@negationInd) and (normalize-space(@negationInd)='')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value[@code='05' and @displayName='Ceased']) and (cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value[@code='02' and @displayName='The change has been made.']) and (@negationInd) and not(normalize-space(@negationInd)='') and not((@negationInd)='true')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'substanceAdministration' tag 'negationInd' attribute shall contain the value 'true'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value[@code='05' and @displayName='Ceased']) and (cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value[@code='02' and @displayName='The change has been made.']) and (@negationInd) and not(normalize-space(@negationInd)='') and not((@negationInd)='true')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not((cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value[@code='05' and @displayName='Ceased']) and (cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value[@code='02' and @displayName='The change has been made.'])) and (@negationInd)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'substanceAdministration' tag 'negationInd' attribute shall not exist. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not((cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value[@code='05' and @displayName='Ceased']) and (cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value[@code='02' and @displayName='The change has been made.'])) and (@negationInd)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M42" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16593']/cda:value" priority="3999" mode="M42">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change Type" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M42" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16146']/cda:entry/cda:substanceAdministration[@classCode = 'SBADM']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16593']/cda:observation/cda:entryRelationship/cda:observation[cda:code/@code = '103.16595']/cda:value" priority="3998" mode="M42">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.3.1 MEDICATION - "Medication / Change or Recommendation" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.3.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M42" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M42" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry[cda:act/cda:code/@code = '102.15513.132.1.1']" priority="4000" mode="M43">
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'act' tag shall appear only once. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M43" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act[cda:code/@code = '102.15513.132.1.1']" priority="3999" mode="M43">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'id' tag is missing. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'id' tag shall appear only once. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'code' tag shall appear only once. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry / Other Diagnosis or Procedure Name" - The 'text' tag is missing. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry / Other Diagnosis or Procedure Name" - The 'text' tag shall appear only once. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry / Other Diagnosis or Procedure Name" - The 'text' tag shall contain a value. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M43" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act[cda:code/@code = '102.15513.132.1.1']/cda:id" priority="3998" mode="M43">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M43" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.15513.132.1.1']" priority="3997" mode="M43">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.15513.132.1.1']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16611']/cda:entry/cda:act/cda:code[@code='102.15513.132.1.1'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.16611']/entry/act/code[@code = '102.15513.132.1.1']' path - 1 or more tags are missing. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.15513.132.1.1']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16611']/cda:entry/cda:act/cda:code[@code='102.15513.132.1.1'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;OTHER DIAGNOSIS PROCEDURE ENTRY&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'code' tag 'displayName' attribute shall contain the value 'Other Diagnosis Procedure Entry'. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "OTHER DIAGNOSIS PROCEDURE ENTRY"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M43" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act[cda:code/@code = '102.15513.132.1.1']/cda:text" priority="3996" mode="M43">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry / Other Diagnosis or Procedure Name" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.3 OTHER DIAGNOSIS PROCEDURE ENTRY - "Other Diagnosis Procedure Entry / Other Diagnosis or Procedure Name" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M43" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M43" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:organizer/@classCode = 'BATTERY']" priority="4000" mode="M44">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:organizer) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'organizer' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:organizer) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']" priority="3999" mode="M44">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'organizer' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'organizer' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'organizer' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'id' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:statusCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'statusCode' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:statusCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:statusCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'statusCode' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:statusCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Pathology Test Result Group Name" - The 'code' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Pathology Test Result Group Name" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:component[cda:observation/@classCode = 'OBS']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'component' tag is missing for ' Individual Pathology Test Result'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:component[cda:observation/@classCode = 'OBS']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:id" priority="3998" mode="M44">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:statusCode" priority="3997" mode="M44">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'statusCode' tag 'code' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'statusCode' tag 'code' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@code) or normalize-space(@code) = '' or @code = 'completed'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'statusCode' tag 'code' attribute shall contain the value 'completed'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@code) or normalize-space(@code) = '' or @code = 'completed'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component" priority="3996" mode="M44">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']" priority="3995" mode="M44">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'id' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Name" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value" - The 'value' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:interpretationCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:interpretationCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '281298000']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'entryRelationship' tag shall appear only once for ' Individual Pathology Test Reference Range Guidance'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '281298000']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:observation/cda:code/@code = '308552006']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'entryRelationship' tag is missing for ' Individual Pathology Test Result Status'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:observation/cda:code/@code = '308552006']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '308552006']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'entryRelationship' tag shall appear only once for ' Individual Pathology Test Result Status'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '308552006']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:id" priority="3994" mode="M44">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:code" priority="3993" mode="M44">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Name" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:value" priority="3992" mode="M44">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:interpretationCode" priority="3991" mode="M44">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'code' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'code' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'HL7_ObservationInterpretationNormality']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'code' attribute shall be as per 10.21 HL7 V3: ObservationInterpretationNormality. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'HL7_ObservationInterpretationNormality']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.5.83'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.5.83'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.5.83'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'HL7 ObservationInterpretationNormality'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'codeSystemName' attribute shall contain the value 'HL7 ObservationInterpretationNormality'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'HL7 ObservationInterpretationNormality'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'displayName' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'HL7_ObservationInterpretationNormality']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Normal Status" - The 'interpretationCode' tag 'code' and 'displayName' attributes shall match as per 10.21 HL7 V3: ObservationInterpretationNormality. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'HL7_ObservationInterpretationNormality']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:referenceRange" priority="3990" mode="M44">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'referenceRange' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'referenceRange' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFV'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'referenceRange' tag 'typeCode' attribute shall contain the value 'REFV'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFV'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:observationRange" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'observationRange' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:observationRange</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observationRange) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'observationRange' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observationRange) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:referenceRange/cda:observationRange" priority="3989" mode="M44">
    <xsl:if test="@classCode and normalize-space(@classCode) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'observationRange' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@classCode and normalize-space(@classCode) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @classCode and normalize-space(@classCode) != '' and @classCode != 'OBS'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'observationRange' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @classCode and normalize-space(@classCode) != '' and @classCode != 'OBS'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'observationRange' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'observationRange' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN.CRT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value Reference Range Details" - The 'observationRange' tag 'moodCode' attribute shall contain the value 'EVN.CRT'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN.CRT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Result Value Reference Range Details /Individual Pathology Test Result Value Reference Range Meaning" - The 'code' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Result Value Reference Range Details /Individual Pathology Test Result Value Reference Range Meaning" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Result Value Reference Range Details /Individual Pathology Test Result Value Reference Range" - The 'value' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Result Value Reference Range Details /Individual Pathology Test Result Value Reference Range" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:referenceRange/cda:observationRange/cda:code" priority="3988" mode="M44">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Result Value Reference Range Details /Individual Pathology Test Result Value Reference Range Meaning" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:referenceRange/cda:observationRange/cda:value" priority="3987" mode="M44">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Result Value Reference Range Details /Individual Pathology Test Result Value Reference Range" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'IVL_PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Result Value Reference Range Details /Individual Pathology Test Result Value Reference Range" - The 'value' tag 'xsi:type' attribute shall contain the value 'IVL_PQ'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'IVL_PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Result Value Reference Range Details /Individual Pathology Test Result Value Reference Range" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship[cda:act/cda:code/@code = '281296001']" priority="3986" mode="M44">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'act' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act[cda:code/@code = '281296001']" priority="3985" mode="M44">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'text' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'text' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act/cda:code[@code = '281296001']" priority="3984" mode="M44">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RESULT COMMENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'displayName' attribute shall contain the value 'result comments'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RESULT COMMENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act[cda:code/@code = '281296001']/cda:text" priority="3983" mode="M44">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship[cda:act/cda:code/@code = '281298000']" priority="3982" mode="M44">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'act' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act[cda:code/@code = '281298000']" priority="3981" mode="M44">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'text' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'text' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '281298000']" priority="3980" mode="M44">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '281298000']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act/cda:code[@code='281298000'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/organizer[@classCode = 'BATTERY']/component/observation[@classCode = 'OBS' and code/@code != '102.16156.132.1.2']/entryRelationship/act/code[@code = '281298000']' path - 1 or more tags are missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '281298000']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act/cda:code[@code='281298000'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REFERENCE RANGE COMMENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'code' tag 'displayName' attribute shall contain the value 'reference range comments'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REFERENCE RANGE COMMENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act[cda:code/@code = '281298000']/cda:text" priority="3979" mode="M44">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Reference Range Guidance" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship[cda:observation/cda:code/@code = '308552006']" priority="3978" mode="M44">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'entryRelationship' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']" priority="3977" mode="M44">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code = '308552006']" priority="3976" mode="M44">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REPORT STATUS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'displayName' attribute shall contain the value 'report status'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REPORT STATUS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']/cda:value" priority="3975" mode="M44">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'code' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'code' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'code' attribute shall be as per 10.20 NCTIS: Admin Codes - Result Status. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16501'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.16501'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16501'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Result Status Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'codeSystemName' attribute shall contain the value 'NCTIS Result Status Values'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Result Status Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'displayName' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'code' and 'displayName' attributes shall match as per 10.20 NCTIS: Admin Codes - Result Status. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M44" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M44" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer" priority="4000" mode="M45">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'organizer' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'organizer' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'BATTERY'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group" - The 'organizer' tag 'classCode' attribute shall contain the value 'BATTERY'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'BATTERY'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M45" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation" priority="3999" mode="M45">
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - "7.1.5.1.2 PATHOLOGY TEST RESULT GROUP" and/or "7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL" - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Name" and/or "Result Group Specimen Detail"- The 'code' tag is missing. Refer to section 7.1.5.1.2 and/or 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M45" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS' and cda:code/@code != '102.16156.132.1.2']/cda:value" priority="3998" mode="M45">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                 normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                   normalize-space(@xsi:type) = 'PQ' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'PQ') or                  normalize-space(@xsi:type) = 'BL' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'BL') or                  normalize-space(@xsi:type) = 'ST' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'ST') or                  normalize-space(@xsi:type) = 'INT' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'INT') or                  normalize-space(@xsi:type) = 'RTO' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'RTO') or                  normalize-space(@xsi:type) = 'IVL_PQ' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ') or                  normalize-space(@xsi:type) = 'PPD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'PPD')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Value" - The 'value' tag 'xsi:type' attributes shall be 'CD', 'PQ', 'BL', 'ST', 'INT', 'RTO', 'IVL_PQ', 'PPD'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                 normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                   normalize-space(@xsi:type) = 'PQ' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'PQ') or                  normalize-space(@xsi:type) = 'BL' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'BL') or                  normalize-space(@xsi:type) = 'ST' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'ST') or                  normalize-space(@xsi:type) = 'INT' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'INT') or                  normalize-space(@xsi:type) = 'RTO' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'RTO') or                  normalize-space(@xsi:type) = 'IVL_PQ' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ') or                  normalize-space(@xsi:type) = 'PPD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'PPD')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M45" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '281296001' and ancestor::*[cda:code/@code = '102.16144']]" priority="3997" mode="M45">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:section[cda:code/@code='102.16144']//cda:code[@code = '281296001']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act/cda:code[@code='281296001'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Comment" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/organizer[@classCode = 'BATTERY']/component/observation[@classCode = 'OBS' and code/@code != '102.16156.132.1.2']/entryRelationship/act/code[@code = '281296001']' path - 1 or more tags are missing. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:section[cda:code/@code='102.16144']//cda:code[@code = '281296001']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[@classCode='OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:act/cda:code[@code='281296001'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M45" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[@classCode = 'OBS' and cda:code/@code != '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']/cda:value" priority="3996" mode="M45">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2 PATHOLOGY TEST RESULT GROUP - "Pathology Test Result Group / Individual Pathology Test Result / Individual Pathology Test Result Status" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M45" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M45" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']" priority="4000" mode="M46">
    <xsl:if test="count(cda:entry[cda:observation/@classCode = 'OBS']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'entry' tag shall appear only once for ' Pathology Test Result Name'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/@classCode = 'OBS']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entry[cda:observation/@classCode = 'OBS']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'entry' tag is missing for ' Pathology Test Result Name'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entry[cda:observation/@classCode = 'OBS']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry[cda:observation/@classCode = 'OBS']" priority="3999" mode="M46">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'entry' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']" priority="3998" mode="M46">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'code' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '310074003']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'entryRelationship' tag shall appear only once for ' Diagnostic Service'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '310074003']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:observation/cda:code/@code = '308552006']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'entryRelationship' tag is missing for ' Overall Pathology Test Result Status'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:observation/cda:code/@code = '308552006']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '308552006']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'entryRelationship' tag shall appear only once for ' Overall Pathology Test Result Status'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '308552006']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '55752-0']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'entryRelationship' tag shall appear only once for ' Clinical Information Provided'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '55752-0']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '386344002']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'entryRelationship' tag shall appear only once for ' Pathology Test Conclusion'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '386344002']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Result Representation" - The 'value' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '103.16468']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'entryRelationship' tag shall appear only once for ' Test Comment'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '103.16468']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Laboratory Test Result Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:observation/cda:code/@code = '103.16605']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'entryRelationship' tag is missing for ' Pathology Test Result DateTime'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:observation/cda:code/@code = '103.16605']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16605']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'entryRelationship' tag shall appear only once for ' Pathology Test Result DateTime'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16605']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:code" priority="3997" mode="M46">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '310074003']" priority="3996" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '310074003']" priority="3995" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '310074003']" priority="3994" mode="M46">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '310074003']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@code='310074003'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/observation/code[@code = '310074003']' path - 1 or more tags are missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '310074003']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@code='310074003'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;PATHOLOGY SERVICE&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'displayName' attribute shall contain the value 'pathology service'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "PATHOLOGY SERVICE"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '310074003']/cda:value" priority="3993" mode="M46">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'code' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'code' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'HL7 Diagnostic Service Values']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'code' attribute shall be as per HL7_Diagnostic_Service_Values. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'HL7 Diagnostic Service Values']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystem and normalize-space(@codeSystem) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystem and normalize-space(@codeSystem) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystem and normalize-space(@codeSystem) != '' and @codeSystem != '2.16.840.1.113883.12.74'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.12.74'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and normalize-space(@codeSystem) != '' and @codeSystem != '2.16.840.1.113883.12.74'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'displayName' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'HL7 Diagnostic Service Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'code' and 'displayName' attributes shall match as per HL7_Diagnostic_Service_Values. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'HL7 Diagnostic Service Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '308552006']" priority="3992" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'entryRelationship' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']" priority="3991" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@code = '308552006']" priority="3990" mode="M46">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REPORT STATUS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'displayName' attribute shall contain the value 'report status'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REPORT STATUS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '308552006']/cda:value" priority="3989" mode="M46">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'code' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'code' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'code' attribute shall be as per 10.20 NCTIS: Admin Codes - Result Status. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'codeSystem' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16501'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.16501'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16501'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'codeSystemName' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Result Status Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'codeSystemName' attribute shall contain the value 'NCTIS Result Status Values'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Result Status Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'displayName' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'code' and 'displayName' attributes shall match as per 10.20 NCTIS: Admin Codes - Result Status. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Admin_Codes_Result_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathology Test Result Status" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:act/cda:code/@code = '55752-0']" priority="3988" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'act' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '55752-0']" priority="3987" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'text' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'text' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'text' tag shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act/cda:code[@code = '55752-0']" priority="3986" mode="M46">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.1'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.1'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.1'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;LOINC&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'code' tag 'codeSystemName' attribute shall contain the value 'LOINC'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "LOINC"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;CLINICAL INFORMATION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'code' tag 'displayName' attribute shall contain the value 'Clinical information'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "CLINICAL INFORMATION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '55752-0']/cda:text" priority="3985" mode="M46">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '88101002']" priority="3984" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'REFR'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '88101002']" priority="3983" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '88101002']" priority="3982" mode="M46">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '88101002']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@code='88101002'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/observation/code[@code = '88101002']' path - 1 or more tags are missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '88101002']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@code='88101002'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;PATHOLOGY DIAGNOSIS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'code' tag 'displayName' attribute shall contain the value 'pathology diagnosis'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "PATHOLOGY DIAGNOSIS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '88101002']/cda:value" priority="3981" mode="M46">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '386344002']" priority="3980" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'REFR'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'REFR'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '386344002']" priority="3979" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'id' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'id' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'value' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'value' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:value) or normalize-space(cda:value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'value' tag shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:value) or normalize-space(cda:value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '386344002']/cda:id" priority="3978" mode="M46">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '386344002']" priority="3977" mode="M46">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '386344002']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@code='386344002'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/observation/code[@code = '386344002']' path - 1 or more tags are missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '386344002']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation/cda:code[@code='386344002'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.96'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.96'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemVersion" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'codeSystemVersion' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemVersion</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemVersion) or normalize-space(@codeSystemVersion) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'codeSystemVersion' attribute shall contain the value '20110531'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemVersion) or normalize-space(@codeSystemVersion) = '' or @codeSystemVersion = '20110531'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SNOMED CT-AU&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'codeSystemName' attribute shall contain the value 'SNOMED CT-AU'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SNOMED CT-AU"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;LABORATORY FINDINGS DATA INTERPRETATION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'code' tag 'displayName' attribute shall contain the value 'laboratory findings data interpretation'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "LABORATORY FINDINGS DATA INTERPRETATION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '386344002']/cda:value" priority="3976" mode="M46">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Conclusion" - The 'value' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:value" priority="3975" mode="M46">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Result Representation" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ED' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ED')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Result Representation" - The 'value' tag 'xsi:type' attribute shall contain the value 'ED'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ED' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ED')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:act/cda:code/@code = '103.16468']" priority="3974" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'act' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '103.16468']" priority="3973" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'text' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'text' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16468']" priority="3972" mode="M46">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16468']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='103.16468'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/act/code[@code = '103.16468']' path - 1 or more tags are missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16468']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='103.16468'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;TEST COMMENT&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'code' tag 'displayName' attribute shall contain the value 'Test Comment'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "TEST COMMENT"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '103.16468']/cda:text" priority="3971" mode="M46">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Comment" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:act/cda:code/@code = '102.16160']" priority="3970" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SUBJ'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'SUBJ'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SUBJ'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@inversionInd" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'entryRelationship' tag 'inversionInd' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@inversionInd</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@inversionInd) or normalize-space(@inversionInd) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'entryRelationship' tag 'inversionInd' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@inversionInd) or normalize-space(@inversionInd) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@inversionInd) or normalize-space(@inversionInd) = '' or @inversionInd = 'true'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'entryRelationship' tag 'inversionInd' attribute shall contain the value 'true'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@inversionInd) or normalize-space(@inversionInd) = '' or @inversionInd = 'true'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'act' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16160']" priority="3969" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16160']" priority="3968" mode="M46">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16160']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='102.16160'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/act/code[@code = '102.16160']' path - 1 or more tags are missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16160']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='102.16160'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;TEST REQUEST DETAILS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'code' tag 'displayName' attribute shall contain the value 'Test Request Details'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "TEST REQUEST DETAILS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16160']/cda:entryRelationship[cda:observation/cda:code/@code = '103.11017']" priority="3967" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16160']/cda:entryRelationship/cda:observation[cda:code/@code = '103.11017']" priority="3966" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'RQO'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'observation' tag 'moodCode' attribute shall contain the value 'RQO'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'RQO'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'value' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'value' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.11017']" priority="3965" mode="M46">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.11017']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16160']/cda:entryRelationship/cda:observation/cda:code[@code='103.11017'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/act[code/@code = '102.16160']/entryRelationship/observation/code[@code = '103.11017']' path - 1 or more tags are missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.11017']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act[cda:code/@code='102.16160']/cda:entryRelationship/cda:observation/cda:code[@code='103.11017'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;TEST REQUESTED NAME&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'code' tag 'displayName' attribute shall contain the value 'Test Requested Name'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "TEST REQUESTED NAME"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16160']/cda:entryRelationship/cda:observation[cda:code/@code = '103.11017']/cda:value" priority="3964" mode="M46">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16605']" priority="3963" mode="M46">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'entryRelationship' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16605']" priority="3962" mode="M46">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'code' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:effectiveTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'effectiveTime' tag is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:effectiveTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16605']" priority="3961" mode="M46">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;PATHOLOGY TEST RESULT DATETIME&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'code' tag 'displayName' attribute shall contain the value 'Pathology Test Result DateTime'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "PATHOLOGY TEST RESULT DATETIME"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16605']/cda:effectiveTime" priority="3960" mode="M46">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result DateTime" - The 'effectiveTime' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M46" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M46" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation" priority="4000" mode="M47">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathology Test Result Name" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M47" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='310074003']/cda:value" priority="3999" mode="M47">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Diagnostic Service" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M47" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='308552006']/cda:value" priority="3998" mode="M47">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Overall Pathlogy Test Result Status" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M47" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '55752-0' and ancestor::*[cda:code/@code = '102.16144']]" priority="3997" mode="M47">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:section[cda:code/@code='102.16144']//cda:code[@code = '55752-0']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='55752-0'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Clinical Information Provided" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/act/code[@code = '55752-0']' path - 1 or more tags are missing. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:section[cda:code/@code='102.16144']//cda:code[@code = '55752-0']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:act/cda:code[@code='55752-0'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M47" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='88101002']/cda:value" priority="3996" mode="M47">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Pathological Diagnosis" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M47" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:act[cda:code/@code = '102.16160']/cda:entryRelationship/cda:observation[cda:code/@code = '103.11017']/cda:value" priority="3995" mode="M47">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 PATHOLOGY TEST RESULT - "Pathology Test Result / Test Request Details / Test Requested Name" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M47" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:value" priority="3994" mode="M47">
    <xsl:choose>
      <xsl:when test="cda:reference or normalize-space(.) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1 Pathology Test Result - "Pathology Test Result / Test Result Representation" - The 'value' tag shall contain a value or a reference. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:reference or normalize-space(.) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M47" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M47" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry[cda:procedure/@classCode = 'PROC']" priority="4000" mode="M48">
    <xsl:if test="count(cda:procedure) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'procedure' tag shall appear only once. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:procedure) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M48" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:procedure[@classCode = 'PROC']" priority="3999" mode="M48">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'procedure' tag 'moodCode' attribute is missing. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'procedure' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'procedure' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'id' tag is missing. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'id' tag shall appear only once. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure / Procedure Name" - The 'code' tag is missing. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure / Procedure Name" - The 'code' tag shall appear only once. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M48" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:procedure[@classCode = 'PROC']/cda:id" priority="3998" mode="M48">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M48" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:procedure[@classCode = 'PROC']/cda:code" priority="3997" mode="M48">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure / Procedure Name" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M48" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M48" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:procedure" priority="4000" mode="M49">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'procedure' tag 'classCode' attribute is missing. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'procedure' tag 'classCode' attribute shall contain a value. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'PROC'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.1 PROCEDURE - "Procedure" - The 'procedure' tag 'classCode' attribute shall contain the value 'PROC'. Refer to section 7.1.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'PROC'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M49" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M49" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']" priority="4000" mode="M50">
    <xsl:if test="count(cda:entry[cda:observation/cda:code/@code = '102.16134']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'entry' tag shall appear only once for ' General Statement'. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/cda:code/@code = '102.16134']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M50" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry[cda:observation/cda:code/@code = '102.16134']" priority="3999" mode="M50">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'entry' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'observation' tag shall appear only once. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M50" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:observation[cda:code/@code = '102.16134']" priority="3998" mode="M50">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'code' tag shall appear only once. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'value' tag is missing. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'value' tag shall appear only once. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:value) or normalize-space(cda:value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'value' tag shall contain a value. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:value) or normalize-space(cda:value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M50" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16134']" priority="3997" mode="M50">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16134']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16606']/cda:entry/cda:observation/cda:code[@code='102.16134'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.16606']/entry/observation/code[@code = '102.16134']' path - 1 or more tags are missing. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16134']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16606']/cda:entry/cda:observation/cda:code[@code='102.16134'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RECOMMENDATIONS EXCLUSION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'code' tag 'displayName' attribute shall contain the value 'Recommendations Exclusion'. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RECOMMENDATIONS EXCLUSION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M50" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:observation[cda:code/@code = '102.16134']/cda:value" priority="3996" mode="M50">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'value' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.2 RECOMMENDATIONS EXCLUSION - "Recommendations Exclusion / General Statement" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.2.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M50" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M50" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16606']" priority="4000" mode="M51">
    <xsl:choose>
      <xsl:when test="cda:entry/cda:act/cda:code[@code='102.20016'] or  cda:entry/cda:observation/cda:code[@code='102.16134']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2 Recommendations - 'section' tag shall have either 'Recommendations Exclusion (EXCLUSION STATEMENT)' or 'RECOMMENDATION' tag but not both. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entry/cda:act/cda:code[@code='102.20016'] or  cda:entry/cda:observation/cda:code[@code='102.16134']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="cda:entry/cda:act/cda:code[@code='102.20016'] and  cda:entry/cda:observation/cda:code[@code='102.16134']">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2 Recommendations - 'section' tag shall have either 'Recommendations Exclusion (EXCLUSION STATEMENT)' or 'RECOMMENDATION' tag but not both. Refer to section 7.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:entry/cda:act/cda:code[@code='102.20016'] and  cda:entry/cda:observation/cda:code[@code='102.16134']</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M51" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M51" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry[cda:act/cda:code/@code = '102.20016']" priority="4000" mode="M52">
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'act' tag shall appear only once. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M52" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']" priority="3999" mode="M52">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'PRP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'act' tag 'moodCode' attribute shall contain the value 'PRP'. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'PRP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'id' tag is missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'id' tag shall appear only once. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'code' tag shall appear only once. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:effectiveTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation / Recommendation Time Frame" - The 'effectiveTime' tag is missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:effectiveTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation / Recommendation Time Frame" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation / Recommendation Narrative" - The 'text' tag is missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation / Recommendation Narrative" - The 'text' tag shall appear only once. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M52" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:id" priority="3998" mode="M52">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M52" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.20016']" priority="3997" mode="M52">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.20016']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16606']/cda:entry/cda:act/cda:code[@code='102.20016'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.16606']/entry/act/code[@code = '102.20016']' path - 1 or more tags are missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.20016']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.16606']/cda:entry/cda:act/cda:code[@code='102.20016'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RECOMMENDATION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'code' tag 'displayName' attribute shall contain the value 'Recommendation'. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RECOMMENDATION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M52" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:effectiveTime" priority="3996" mode="M52">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation / Recommendation Time Frame" - The 'effectiveTime' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M52" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:text" priority="3995" mode="M52">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation / Recommendation Narrative" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation / Recommendation Narrative" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.2.1 RECOMMENDATION - "Recommendation / Recommendation Narrative" - The 'text' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M52" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M52" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']" priority="4000" mode="M53">
    <xsl:choose>
      <xsl:when test="cda:entry[cda:act/@classCode = 'ACT']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'entry' tag is missing for ' Requested Service Description'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entry[cda:act/@classCode = 'ACT']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entry[cda:act/@classCode = 'ACT']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'entry' tag shall appear only once for ' Requested Service Description'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:act/@classCode = 'ACT']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry[cda:act/@classCode = 'ACT']" priority="3999" mode="M53">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'entry' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'act' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']" priority="3998" mode="M53">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'act' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA-Act.moodCode']/code[(@code = current()/@moodCode)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'act' tag 'moodCode' attribute shall be as per HL7 v3 CDA-Act.moodCode. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA-Act.moodCode']/code[(@code = current()/@moodCode)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'id' tag is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'id' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'code' tag is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'code' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / DateTime Service Scheduled/ Service Commencement Window" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '103.10146']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'entryRelationship' tag shall appear only once for ' Subject of Care Instruction Description'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '103.10146']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:act/cda:code/@code = '103.16635']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'entryRelationship' tag is missing for ' Requested Service DateTime'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:act/cda:code/@code = '103.16635']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entryRelationship[cda:act/cda:code/@code = '103.16635']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'entryRelationship' tag shall appear only once for ' Requested Service DateTime'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:act/cda:code/@code = '103.16635']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:id" priority="3997" mode="M53">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'id' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:code" priority="3996" mode="M53">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service Description" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:entryRelationship[cda:act/cda:code/@code = '103.10146']" priority="3995" mode="M53">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'act' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:entryRelationship/cda:act[cda:code/@code = '103.10146']" priority="3994" mode="M53">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'act' tag 'classCode' attribute shall contain the value 'INFRM'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'INFRM'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'code' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'text' tag is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'text' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.10146']" priority="3993" mode="M53">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.10146']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.20158']/cda:entry/cda:act[@classCode='ACT']/cda:entryRelationship/cda:act/cda:code[@code='103.10146'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.20158']/entry/act[@classCode = 'ACT']/entryRelationship/act/code[@code = '103.10146']' path - 1 or more tags are missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.10146']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.20158']/cda:entry/cda:act[@classCode='ACT']/cda:entryRelationship/cda:act/cda:code[@code='103.10146'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SUBJECT OF CARE INSTRUCTION DESCRIPTION&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'code' tag 'displayName' attribute shall contain the value 'Subject of Care Instruction Description'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SUBJECT OF CARE INSTRUCTION DESCRIPTION"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Subject of Care Instruction Description" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:entryRelationship[cda:act/cda:code/@code = '103.16635']" priority="3992" mode="M53">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'entryRelationship' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'act' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:entryRelationship/cda:act[cda:code/@code = '103.16635']" priority="3991" mode="M53">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'act' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'code' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:effectiveTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'effectiveTime' tag is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:effectiveTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:entryRelationship/cda:act/cda:code[@code = '103.16635']" priority="3990" mode="M53">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;REQUESTED SERVICE DATETIME&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'code' tag 'displayName' attribute shall contain the value 'Requested Service DateTime'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "REQUESTED SERVICE DATETIME"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:entryRelationship/cda:act[cda:code/@code = '103.16635']/cda:effectiveTime" priority="3989" mode="M53">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service / Requested Service DateTime" - The 'effectiveTime' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M53" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M53" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.20158']/cda:entry/cda:act[@moodCode]" priority="4000" mode="M54">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service &gt; Requested Service Description" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service &gt; Requested Service Description" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3 REQUESTED SERVICE - "Requested Service &gt; Requested Service Description" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.5.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M54" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M54" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']" priority="4000" mode="M55">
    <xsl:choose>
      <xsl:when test="(cda:entry/cda:procedure/@classCode='PROC') or (cda:entry/cda:observation/cda:code/@code = '282291009') or (cda:entry/cda:act/cda:code/@code='102.15513.132.1.1')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1 Response Details - 'section' tag shall have either 'PROCEDURE' or 'DIAGNOSIS' or 'OTHER DIAGNOSIS PROCEDURE ENTRY' tag. Refer to section 7.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">(cda:entry/cda:procedure/@classCode='PROC') or (cda:entry/cda:observation/cda:code/@code = '282291009') or (cda:entry/cda:act/cda:code/@code='102.15513.132.1.1')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M55" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M55" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']" priority="4000" mode="M56">
    <xsl:choose>
      <xsl:when test="cda:entry[cda:act/cda:code/@code = '102.15513.132.1.2']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'entry' tag is missing for 'Response Narrative'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entry[cda:act/cda:code/@code = '102.15513.132.1.2']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:entry[cda:act/cda:code/@code = '102.15513.132.1.2']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'entry' tag shall appear only once for 'Response Narrative'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:act/cda:code/@code = '102.15513.132.1.2']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M56" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry[cda:act/cda:code/@code = '102.15513.132.1.2']" priority="3999" mode="M56">
    <xsl:if test="count(cda:act) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'act' tag shall appear only once. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:act) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M56" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act[cda:code/@code = '102.15513.132.1.2']" priority="3998" mode="M56">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'act' tag 'classCode' attribute is missing. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'act' tag 'classCode' attribute shall contain a value. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'act' tag 'classCode' attribute shall contain the value 'ACT'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'ACT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'act' tag 'moodCode' attribute is missing. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'act' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'act' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'id' tag is missing. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'id' tag shall appear only once. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'code' tag shall appear only once. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative / Narrative" - The 'text' tag is missing. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative / Narrative" - The 'text' tag shall appear only once. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:text) or normalize-space(cda:text) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative / Narrative" - The 'text' tag shall contain a value. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:text) or normalize-space(cda:text) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M56" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act[cda:code/@code = '102.15513.132.1.2']/cda:id" priority="3997" mode="M56">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M56" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act/cda:code[@code = '102.15513.132.1.2']" priority="3996" mode="M56">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RESPONSE NARRATIVE&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'code' tag 'displayName' attribute shall contain the value 'Response Narrative'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RESPONSE NARRATIVE"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M56" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16611']/cda:entry/cda:act[cda:code/@code = '102.15513.132.1.2']/cda:text" priority="3995" mode="M56">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative / Narrative" - The 'text' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative / Narrative" - The 'text' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.1.4 RESPONSE NARRATIVE - "Response Narrative / Narrative" - The 'text' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.1.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M56" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M56" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']" priority="4000" mode="M57">
    <xsl:if test="count(cda:component[cda:observation/cda:code/@code = '102.16156.132.1.2']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'component' tag shall appear only once for 'Result Group Specimen Detail'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:component[cda:observation/cda:code/@code = '102.16156.132.1.2']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component[cda:observation/cda:code/@code = '102.16156.132.1.2']" priority="3999" mode="M57">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']" priority="3998" mode="M57">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:methodCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection Procedure" - The 'methodCode' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:methodCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16171']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'entryRelationship' tag shall appear only once for ' Sampling Preconditions'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16171']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:effectiveTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection DateTime" - The 'effectiveTime' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:effectiveTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection DateTime" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16529']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'entryRelationship' tag shall appear only once for ' Collection Setting'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16529']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.11014']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'entryRelationship' tag shall appear only once for ' DateTime Received'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.11014']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16187']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'entryRelationship' tag shall appear only once for ' Parent Specimen Identifier'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16187']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16156.132.1.2']" priority="3997" mode="M57">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16156.132.1.2']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation/cda:code[@code = '102.16156.132.1.2'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/organizer[@classCode = 'BATTERY']/component/observation/code[@code = '102.16156.132.1.2']' path - 1 or more tags are missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16156.132.1.2']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation/cda:code[@code = '102.16156.132.1.2'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;RESULT GROUP SPECIMEN DETAIL&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'code' tag 'displayName' attribute shall contain the value 'Result Group Specimen Detail'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "RESULT GROUP SPECIMEN DETAIL"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity" priority="3996" mode="M57">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Specimen Tissue Type" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:quantity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details / Weight" - The 'quantity' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:quantity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:desc) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details / Description (Object Description)" - The 'desc' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:desc) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:asSpecimenInContainer) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Container Identifier" - The 'asSpecimenInContainer' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:asSpecimenInContainer) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship[cda:observationMedia/@classCode = 'OBS']" priority="3995" mode="M57">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SPRT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'SPRT'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SPRT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observationMedia) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observationMedia) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']" priority="3994" mode="M57">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'id' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'value' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']/cda:id" priority="3993" mode="M57">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:specimen" priority="3992" mode="M57">
    <xsl:choose>
      <xsl:when test="cda:specimenRole" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details (Physical Properties of an Object)" - The 'specimenRole' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:specimenRole</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:specimenRole) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details (Physical Properties of an Object)" - The 'specimenRole' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:specimenRole) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:specimen/cda:specimenRole" priority="3991" mode="M57">
    <xsl:choose>
      <xsl:when test="cda:specimenPlayingEntity" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details (Physical Properties of an Object)" - The 'specimenPlayingEntity' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:specimenPlayingEntity</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:specimenPlayingEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details (Physical Properties of an Object)" - The 'specimenPlayingEntity' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:specimenPlayingEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Specimen Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity/cda:quantity" priority="3990" mode="M57">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details / Weight" - The 'quantity' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'PQ')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details / Weight" - The 'quantity' tag 'xsi:type' attribute shall contain the value 'PQ'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'PQ')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@unit and normalize-space(@unit) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details / Weight" - The 'quantity' tag 'unit' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@unit and normalize-space(@unit) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details / Weight" - The 'quantity' tag 'value' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity/cda:desc" priority="3989" mode="M57">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details / Description (Object Description)" - The 'desc' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Physical Details / Description (Object Description)" - The 'desc' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16171']" priority="3988" mode="M57">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16171']" priority="3987" mode="M57">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'value' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16171']" priority="3986" mode="M57">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SAMPLING PRECONDITIONS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'displayName' attribute shall contain the value 'Sampling Preconditions'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SAMPLING PRECONDITIONS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16171']/cda:value" priority="3985" mode="M57">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16529']" priority="3984" mode="M57">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16529']" priority="3983" mode="M57">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:value) or normalize-space(cda:value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:value) or normalize-space(cda:value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16529']" priority="3982" mode="M57">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;COLLECTION SETTING&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'displayName' attribute shall contain the value 'Collection Setting'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "COLLECTION SETTING"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16529']/cda:value" priority="3981" mode="M57">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship[cda:observation/cda:code/@code = '103.11014']" priority="3980" mode="M57">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.11014']" priority="3979" mode="M57">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'value' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code = '103.11014']" priority="3978" mode="M57">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DATETIME RECEIVED&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'displayName' attribute shall contain the value 'DateTime Received'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DATETIME RECEIVED"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.11014']/cda:value" priority="3977" mode="M57">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'TS' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'TS')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The 'value' tag 'xsi:type' attribute shall contain the value 'TS'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'TS' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'TS')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16187']" priority="3976" mode="M57">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16187']" priority="3975" mode="M57">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:specimen" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'specimen' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:specimen</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:specimen) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'specimen' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:specimen) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16187']" priority="3974" mode="M57">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;PARENT SPECIMEN IDENTIFIER&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'displayName' attribute shall contain the value 'Parent Specimen Identifier'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "PARENT SPECIMEN IDENTIFIER"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16187']/cda:specimen" priority="3973" mode="M57">
    <xsl:choose>
      <xsl:when test="cda:specimenRole" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'specimenRole' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:specimenRole</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:specimenRole) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'specimenRole' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:specimenRole) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16187']/cda:specimen/cda:specimenRole" priority="3972" mode="M57">
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'id' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity/ext:asSpecimenInContainer" priority="3971" mode="M57">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Container Identifier" - The 'asSpecimenInContainer' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Container Identifier" - The 'asSpecimenInContainer' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'CONT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Container Identifier" - The 'asSpecimenInContainer' tag 'classCode' attribute shall contain the value 'CONT'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'CONT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:container" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Container Identifier" - The 'container' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:container</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:container) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Container Identifier" - The 'container' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:container) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity/ext:asSpecimenInContainer/ext:container" priority="3970" mode="M57">
    <xsl:choose>
      <xsl:when test="ext:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Container Identifier" - The 'id' tag is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Container Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M57" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M57" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observationMedia" priority="4000" mode="M58">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group SpecimenDetail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M58" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16171' and ancestor::*[cda:code/@code = '102.16156.132.1.2']]" priority="3999" mode="M58">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.2']//cda:code[@code = '103.16171']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code='103.16171'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/organizer[@classCode = 'BATTERY']/component/observation[code/@code = '102.16156.132.1.2']/entryRelationship/observation/code[@code = '103.16171']' path - 1 or more tags are missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.2']//cda:code[@code = '103.16171']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code='103.16171'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M58" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:organizer[@classCode = 'BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16171']/cda:value" priority="3998" mode="M58">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Collection and handling / Sampling Preconditions" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M58" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16529' and ancestor::*[cda:code/@code = '102.16156.132.1.2']]" priority="3997" mode="M58">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.2']//cda:code[@code = '103.16529']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code='103.16529'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / Collection Setting" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/organizer[@classCode = 'BATTERY']/component/observation[code/@code = '102.16156.132.1.2']/entryRelationship/observation/code[@code = '103.16529']' path - 1 or more tags are missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.2']//cda:code[@code = '103.16529']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code='103.16529'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M58" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.11014' and ancestor::*[cda:code/@code = '102.16156.132.1.2']]" priority="3996" mode="M58">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.2']//cda:code[@code = '103.11014']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code='103.11014'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Handling and Processing / DateTime Received" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/organizer[@classCode = 'BATTERY']/component/observation[code/@code = '102.16156.132.1.2']/entryRelationship/observation/code[@code = '103.11014']' path - 1 or more tags are missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.2']//cda:code[@code = '103.11014']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code='103.11014'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M58" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16187' and ancestor::*[cda:code/@code = '102.16156.132.1.2']]" priority="3995" mode="M58">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.2']//cda:code[@code = '103.16187']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code='103.16187'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.2.1 RESULT GROUP SPECIMEN DETAIL - "Result Group Specimen Detail / Identifiers / Parent Specimen Identifier" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/organizer[@classCode = 'BATTERY']/component/observation[code/@code = '102.16156.132.1.2']/entryRelationship/observation/code[@code = '103.16187']' path - 1 or more tags are missing. Refer to section 7.1.5.1.2.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.2']//cda:code[@code = '103.16187']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:organizer[@classCode='BATTERY']/cda:component/cda:observation[cda:code/@code = '102.16156.132.1.2']/cda:entryRelationship/cda:observation/cda:code[@code='103.16187'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M58" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M58" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']" priority="4000" mode="M59">
    <xsl:if test="count(cda:performer[cda:assignedEntity/cda:representedOrganization]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider (Organisation)" - The 'performer' tag shall appear only once for 'Service Provider (Organisation)'. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:performer[cda:assignedEntity/cda:representedOrganization]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M59" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer[cda:assignedEntity/cda:representedOrganization]" priority="3999" mode="M59">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider (Organisation)" - The 'performer' tag 'typeCode' attribute is missing. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider (Organisation)" - The 'performer' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'PRF'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider (Organisation)" - The 'performer' tag 'typeCode' attribute shall contain the value 'PRF'. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'PRF'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:time) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participation Period" - The 'time' tag shall appear only once. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:time) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:assignedEntity[cda:representedOrganization]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Role" - The 'assignedEntity' tag shall appear only once for ' Role'. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedEntity[cda:representedOrganization]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M59" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity[cda:representedOrganization]" priority="3998" mode="M59">
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Role" - The 'code' tag is missing. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Role" - The 'code' tag shall appear only once. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Id" - The 'id' tag is missing. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Id" - The 'id' tag shall appear only once. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M59" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity[cda:representedOrganization]/cda:id" priority="3997" mode="M59">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M59" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:representedOrganization" priority="3996" mode="M59">
    <xsl:choose>
      <xsl:when test="cda:asOrganizationPartOf" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Entity Identifier" - The 'asOrganizationPartOf' tag is missing. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:asOrganizationPartOf</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:asOrganizationPartOf) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Entity Identifier" - The 'asOrganizationPartOf' tag shall appear only once. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:asOrganizationPartOf) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Person or Organisation or Device / Organisation / Department/Unit" - The 'name' tag shall appear only once. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M59" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:representedOrganization/cda:asOrganizationPartOf" priority="3995" mode="M59">
    <xsl:choose>
      <xsl:when test="cda:wholeOrganization" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Entity Identifier" - The 'wholeOrganization' tag is missing. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:wholeOrganization</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:wholeOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Entity Identifier" - The 'wholeOrganization' tag shall appear only once. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:wholeOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M59" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:representedOrganization/cda:asOrganizationPartOf/cda:wholeOrganization" priority="3994" mode="M59">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(ext:asEntityIdentifier) or ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800362')]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Entity Identifier" - The 'asEntityIdentifier' tag for 'HPI-O' is missing. "The value of one Entity Identifier SHALL be an Australian HPI-O." although there could be multiple Entity Identifiers. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(ext:asEntityIdentifier) or ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800362')]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag is missing. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag shall appear only once. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M59" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:representedOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/cda:name" priority="3993" mode="M59">
    <xsl:if test="@use and normalize-space(@use) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'use' attribute shall contain a value. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@use and normalize-space(@use) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and normalize-space(@use) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Provider_Organisation_Name_Usage']/code[                     (@code = current()/@use) or                     (@alternativeCode = current()/@use) or                     (@hl7Code = current()/@use)                 ])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'use' attribute shall be as per AS 4846-2006: Health Care Provider Organisation Name Usage. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and normalize-space(@use) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Provider_Organisation_Name_Usage']/code[                     (@code = current()/@use) or                     (@alternativeCode = current()/@use) or                     (@hl7Code = current()/@use)                 ])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M59" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M59" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity" priority="4000" mode="M60">
    <xsl:if test="count(cda:representedOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant" - The 'representedOrganization' tag shall appear only once. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:representedOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M60" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:addr[@use]" priority="3999" mode="M60">
    <xsl:choose>
      <xsl:when test="not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "Service Provider / Participant / Address" - The 'country' tag shall contain the value 'Australia'. Refer to section 7.1.5.3.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M60" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M60" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']" priority="4000" mode="M61">
    <xsl:if test="count(cda:performer[cda:assignedEntity/cda:assignedPerson]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider (Person)" - The 'performer' tag shall appear only once for 'Service Provider (Person)'. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:performer[cda:assignedEntity/cda:assignedPerson]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M61" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer[cda:assignedEntity/cda:assignedPerson]" priority="3999" mode="M61">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider (Person)" - The 'performer' tag 'typeCode' attribute is missing. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider (Person)" - The 'performer' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'PRF'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider (Person)" - The 'performer' tag 'typeCode' attribute shall contain the value 'PRF'. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'PRF'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:assignedEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Role" - The 'assignedEntity' tag shall appear only once. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M61" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity[cda:assignedPerson]" priority="3998" mode="M61">
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Role" - The 'code' tag is missing. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Role" - The 'code' tag shall appear only once. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Id" - The 'id' tag is missing. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Id" - The 'id' tag shall appear only once. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:addr" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Participant / Address" - The 'addr' tag is missing. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:addr</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M61" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity[cda:assignedPerson]/cda:id" priority="3997" mode="M61">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M61" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson" priority="3996" mode="M61">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Participant / Person or Organisation or Device / Person / Person Name" - The 'name' tag is missing. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:asEmployment) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Participant / Person or Organisation or Device / Person / Employment Detail" - The 'asEmployment' tag shall appear only once. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:asEmployment) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M61" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M61" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']" priority="4000" mode="M62">
    <xsl:if test="count(cda:performer/cda:assignedEntity/cda:assignedPerson) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Participant" - The 'assignedPerson' tag shall appear only once. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:performer/cda:assignedEntity/cda:assignedPerson) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M62" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity[cda:assignedPerson]/cda:addr[@use]" priority="3999" mode="M62">
    <xsl:choose>
      <xsl:when test="not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - "Service Provider / Participant / Address" - The 'country' tag shall contain the value 'Australia'. Refer to section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M62" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M62" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']" priority="4000" mode="M63">
    <xsl:if test="count(cda:entry[cda:observation/cda:code/@code = '103.16233']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'entry' tag shall appear only once for ' Date of Birth is Calculated From Age'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/cda:code/@code = '103.16233']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entry[cda:observation/cda:code/@code = '102.16234']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'entry' tag shall appear only once for ' Date of Birth Accuracy Indicator'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/cda:code/@code = '102.16234']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entry[cda:observation/cda:code/@code = '103.20109']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'entry' tag shall appear only once for ' Age'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/cda:code/@code = '103.20109']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entry[cda:observation/cda:code/@code = '103.16279']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'entry' tag shall appear only once for ' Age Accuracy Indicator'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/cda:code/@code = '103.16279']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entry[cda:observation/cda:code/@code = '103.16249']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'entry' tag shall appear only once for ' Birth Plurality'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/cda:code/@code = '103.16249']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entry[cda:observation/cda:code/@code = '102.16252']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'entry' tag shall appear only once for ' Date of Death Accuracy Indicator'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entry[cda:observation/cda:code/@code = '102.16252']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry[cda:observation/cda:code/@code = '103.16233']" priority="3999" mode="M63">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'observation' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16233']" priority="3998" mode="M63">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'observation' tag 'classCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'code' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'value' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'value' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16233']" priority="3997" mode="M63">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16233']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='103.16233'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '102.16080']/entry/observation/code[@code = '103.16233']' path - 1 or more tags are missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16233']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='103.16233'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'code' tag 'displayName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DATE OF BIRTH IS CALCULATED FROM AGE&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'code' tag 'displayName' attribute shall contain the value 'Date of Birth is Calculated From Age'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DATE OF BIRTH IS CALCULATED FROM AGE"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'translation' tag shall not be present within 'code'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16233']/cda:id" priority="3996" mode="M63">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16233']/cda:value" priority="3995" mode="M63">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'BL' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'BL')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'value' tag 'xsi:type' attribute shall contain the value 'BL'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'BL' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'BL')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry[cda:observation/cda:code/@code = '102.16234']" priority="3994" mode="M63">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'observation' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '102.16234']" priority="3993" mode="M63">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'observation' tag 'classCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'code' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'value' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'value' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16234']" priority="3992" mode="M63">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16234']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='102.16234'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '102.16080']/entry/observation/code[@code = '102.16234']' path - 1 or more tags are missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16234']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='102.16234'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'code' tag 'displayName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DATE OF BIRTH ACCURACY INDICATOR&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'code' tag 'displayName' attribute shall contain the value 'Date of Birth Accuracy Indicator'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DATE OF BIRTH ACCURACY INDICATOR"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'translation' tag shall not be present within 'code'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '102.16234']/cda:id" priority="3991" mode="M63">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '102.16234']/cda:value" priority="3990" mode="M63">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'value' tag 'code' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Date_Accuracy_Indicator']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'value' tag 'code' attribute shall be as per AS 5017-2006 Health Care Client Identifier Date Accuracy Indicator. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Date_Accuracy_Indicator']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'value' tag 'code' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'CS' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'CS')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth Accuracy Indicator" - The 'value' tag 'xsi:type' attribute shall contain the value 'CS'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'CS' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'CS')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry[cda:observation/cda:code/@code = '103.20109']" priority="3989" mode="M63">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'entry' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'observation' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.20109']" priority="3988" mode="M63">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'observation' tag 'classCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'observation' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'code' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'value' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'value' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.20109']" priority="3987" mode="M63">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.20109']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='103.20109'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '102.16080']/entry/observation/code[@code = '103.20109']' path - 1 or more tags are missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.20109']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='103.20109'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'code' tag 'displayName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;AGE&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'code' tag 'displayName' attribute shall contain the value 'Age'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "AGE"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'translation' tag shall not be present within 'code'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.20109']/cda:id" priority="3986" mode="M63">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'id' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.20109']/cda:value" priority="3985" mode="M63">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'PQ')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'value' tag 'xsi:type' attribute shall contain the value 'PQ'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'PQ')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'value' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry[cda:observation/cda:code/@code = '103.16279']" priority="3984" mode="M63">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'observation' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16279']" priority="3983" mode="M63">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'observation' tag 'classCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'code' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'value' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'value' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16279']" priority="3982" mode="M63">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16279']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='103.16279'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '102.16080']/entry/observation/code[@code = '103.16279']' path - 1 or more tags are missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16279']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='103.16279'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'code' tag 'displayName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;AGE ACCURACY INDICATOR&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'code' tag 'displayName' attribute shall contain the value 'Age Accuracy Indicator'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "AGE ACCURACY INDICATOR"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'translation' tag shall not be present within 'code'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16279']/cda:id" priority="3981" mode="M63">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16279']/cda:value" priority="3980" mode="M63">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'BL' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'BL')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'value' tag 'xsi:type' attribute shall contain the value 'BL'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'BL' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'BL')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry[cda:observation/cda:code/@code = '103.16249']" priority="3979" mode="M63">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'observation' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16249']" priority="3978" mode="M63">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'observation' tag 'classCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'code' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'value' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'value' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16249']" priority="3977" mode="M63">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '103.16249']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='103.16249'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '102.16080']/entry/observation/code[@code = '103.16249']' path - 1 or more tags are missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '103.16249']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='103.16249'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'code' tag 'displayName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;BIRTH PLURALITY&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'code' tag 'displayName' attribute shall contain the value 'Birth Plurality'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "BIRTH PLURALITY"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'translation' tag shall not be present within 'code'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16249']/cda:id" priority="3976" mode="M63">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '103.16249']/cda:value" priority="3975" mode="M63">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'INT' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'INT')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'value' tag 'xsi:type' attribute shall contain the value 'INT'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'INT' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'INT')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry[cda:observation/cda:code/@code = '102.16252']" priority="3974" mode="M63">
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'observation' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '102.16252']" priority="3973" mode="M63">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'observation' tag 'classCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'code' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'value' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'value' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '102.16252']" priority="3972" mode="M63">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:code[@code = '102.16252']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='102.16252'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '102.16080']/entry/observation/code[@code = '102.16252']' path - 1 or more tags are missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:code[@code = '102.16252']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation/cda:code[@code='102.16252'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'code' tag 'displayName' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DATE OF DEATH ACCURACY INDICATOR&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'code' tag 'displayName' attribute shall contain the value 'Date of Death Accuracy Indicator'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DATE OF DEATH ACCURACY INDICATOR"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'translation' tag shall not be present within 'code'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '102.16252']/cda:id" priority="3971" mode="M63">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/cda:entry/cda:observation[cda:code/@code = '102.16252']/cda:value" priority="3970" mode="M63">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'value' tag 'code' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Date_Accuracy_Indicator']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'value' tag 'code' attribute shall be as per AS 5017-2006 Health Care Client Identifier Date Accuracy Indicator. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Date_Accuracy_Indicator']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'value' tag 'code' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'CS' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'CS')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death Accuracy Indicator" - The 'value' tag 'xsi:type' attribute shall contain the value 'CS'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'CS' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'CS')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/ext:coverage2[ext:entitlement/ext:participant/@typeCode = 'BEN']" priority="3969" mode="M63">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'coverage2' tag 'typeCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COVBY'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'coverage2' tag 'typeCode' attribute shall contain the value 'COVBY'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COVBY'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'coverage2' tag 'typeCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:entitlement) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'entitlement' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:entitlement) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/ext:coverage2/ext:entitlement[ext:participant/@typeCode = 'BEN']" priority="3968" mode="M63">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'entitlement' tag 'classCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'COV'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'entitlement' tag 'classCode' attribute shall contain the value 'COV'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'COV'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'entitlement' tag 'classCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'entitlement' tag 'moodCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'entitlement' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'entitlement' tag 'moodCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:participant) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'participant' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:participant) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="ext:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Number" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Number" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="ext:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Validity Duration" - The 'effectiveTime' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="ext:participant[@typeCode = 'BEN']" priority="3967" mode="M63">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//ext:participant[@typeCode = 'BEN']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/ext:coverage2/ext:entitlement/ext:participant[@typeCode = 'BEN'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '102.16080']/coverage2/entitlement/participant[@typeCode = 'BEN']' path - 1 or more tags are missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//ext:participant[@typeCode = 'BEN']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/ext:coverage2/ext:entitlement/ext:participant[@typeCode = 'BEN'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:participantRole" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'participantRole' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:participantRole</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:participantRole) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'participantRole' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:participantRole) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/ext:coverage2/ext:entitlement/ext:participant[@typeCode = 'BEN']/ext:participantRole" priority="3966" mode="M63">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'participantRole' tag 'classCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'PAT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'participantRole' tag 'classCode' attribute shall contain the value 'PAT'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'PAT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'participantRole' tag 'classCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/ext:coverage2/ext:entitlement/ext:participant[@typeCode = 'BEN']/ext:participantRole/ext:id" priority="3965" mode="M63">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/ext:coverage2/ext:entitlement[ext:participant/@typeCode = 'BEN']/ext:code" priority="3964" mode="M63">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag 'code' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Entitlement_Type_Values']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag 'code' attribute shall be as per NCTIS: Admin Codes - Entitlement Type. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Entitlement_Type_Values']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16047'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.16047'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.16047'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Entitlement Type Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Entitlement Type Values'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Entitlement Type Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag 'codeSystemName' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag 'displayName' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Entitlement_Type_Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'code' tag 'code' and 'displayName' attributes shall match as per NCTIS: Admin Codes - Entitlement Type. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Entitlement_Type_Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement / Entitlement Type" - The 'translation' tag shall not be present within 'code'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M63" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M63" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation[cda:code/@code='103.16233']/cda:value" priority="4000" mode="M64">
    <xsl:choose>
      <xsl:when test="        translate(@value , 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'TRUE' or         translate(@value , 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'FALSE'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 Subject of Care - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth is Calculated From Age" - The 'value' tag 'value' attribute shall contain the value 'true' or 'false'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">        translate(@value , 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'TRUE' or         translate(@value , 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'FALSE'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M64" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation[cda:code/@code='103.16249']/cda:value" priority="3999" mode="M64">
    <xsl:choose>
      <xsl:when test="not(@value) or number(@value) &gt; 0" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Plurality" - The 'value' tag 'value' attribute shall be an integer greater than equal to 1. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or number(@value) &gt; 0</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M64" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation[cda:code/@code='103.20109']/cda:value" priority="3998" mode="M64">
    <xsl:choose>
      <xsl:when test="not(@value) or number(@value) &gt;= 0" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'value' tag 'value' attribute shall be an integer greater than equal to 0. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or number(@value) &gt;= 0</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @value and                 normalize-space(@value) != '' and                 number(@value) != floor(@value)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'value' tag 'value' attribute shall contain an integer value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 normalize-space(@value) != '' and                 number(@value) != floor(@value)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@unit) or (@unit = 'd') or (@unit = 'wk') or (@unit = 'mo') or (@unit = 'a')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age" - The 'unit' tag 'unit' attribute shall be 'd' or 'wk' or 'mo' or 'a'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@unit) or (@unit = 'd') or (@unit = 'wk') or (@unit = 'mo') or (@unit = 'a')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M64" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '102.16080']/ext:coverage2/ext:entitlement/ext:participant" priority="3997" mode="M64">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'ext:participant' tag 'typeCode' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'BEN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'ext:participant' tag 'typeCode' attribute shall contain the value 'BEN'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'BEN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'ext:participant' tag 'typeCode' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M64" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/cda:entry/cda:observation[cda:code/@code='103.16279']/cda:value" priority="3996" mode="M64">
    <xsl:choose>
      <xsl:when test="        translate(@value , 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'TRUE' or         translate(@value , 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'FALSE'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 Subject of Care - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Age Detail / Age Accuracy Indicator" - The 'value' tag 'value' attribute shall contain the value 'true' or 'false'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">        translate(@value , 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'TRUE' or         translate(@value , 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'FALSE'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M64" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='102.16080']/ext:coverage2/ext:entitlement/ext:participant/ext:participantRole[@classCode='PAT']/ext:id" priority="3995" mode="M64">
    <xsl:if test="@root and                 normalize-space(@root) != '' and                 normalize-space(/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:id/@root) != '' and                 @root != /cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:id/@root">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entitlement" - The 'ext:id' tag 'root' attribute value shall be same as '/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:id/@root' value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@root and                 normalize-space(@root) != '' and                 normalize-space(/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:id/@root) != '' and                 @root != /cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:id/@root</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M64" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M64" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']" priority="4000" mode="M65">
    <xsl:choose>
      <xsl:when test="cda:entryRelationship[cda:observation/cda:code/@code = '102.16156.132.1.1']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'entryRelationship' tag is missing for 'Test Specimen Detail'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:entryRelationship[cda:observation/cda:code/@code = '102.16156.132.1.1']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship[cda:observation/cda:code/@code = '102.16156.132.1.1']" priority="3999" mode="M65">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SUBJ'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'SUBJ'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SUBJ'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']" priority="3998" mode="M65">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:methodCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection Procedure" - The 'methodCode' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:methodCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16171']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'entryRelationship' tag shall appear only once for ' Sampling Preconditions'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16171']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:effectiveTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection DateTime" - The 'effectiveTime' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:effectiveTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection DateTime" - The 'effectiveTime' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16529']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'entryRelationship' tag shall appear only once for ' Collection Setting'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16529']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.11014']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'entryRelationship' tag shall appear only once for ' DateTime Received'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.11014']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16187']) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'entryRelationship' tag shall appear only once for ' Parent Specimen Identifier'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:entryRelationship[cda:observation/cda:code/@code = '103.16187']) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation/cda:code[@code = '102.16156.132.1.1']" priority="3997" mode="M65">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;TEST SPECIMEN DETAIL&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'code' tag 'displayName' attribute shall contain the value 'Test Specimen Detail'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "TEST SPECIMEN DETAIL"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity" priority="3996" mode="M65">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Specimen Tissue Type" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:quantity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Weight" - The 'quantity' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:quantity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:desc) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Description (Object Description)" - The 'desc' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:desc) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:desc and normalize-space(cda:desc) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Description (Object Description)" - The 'desc' tag shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:desc and normalize-space(cda:desc) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:asSpecimenInContainer) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Container Identifier" - The 'asSpecimenInContainer' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:asSpecimenInContainer) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship[cda:observationMedia/@classCode = 'OBS']" priority="3995" mode="M65">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SPRT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'SPRT'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'SPRT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observationMedia) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observationMedia) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']" priority="3994" mode="M65">
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'id' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'value' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observationMedia[@classCode = 'OBS']/cda:id" priority="3993" mode="M65">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:specimen" priority="3992" mode="M65">
    <xsl:choose>
      <xsl:when test="cda:specimenRole" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details(Physical Properties of an Object)" - The 'specimenRole' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:specimenRole</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:specimenRole) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details(Physical Properties of an Object)" - The 'specimenRole' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:specimenRole) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:specimen/cda:specimenRole" priority="3991" mode="M65">
    <xsl:choose>
      <xsl:when test="cda:specimenPlayingEntity" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details(Physical Properties of an Object)" - The 'specimenPlayingEntity' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:specimenPlayingEntity</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:specimenPlayingEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details(Physical Properties of an Object)" - The 'specimenPlayingEntity' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:specimenPlayingEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Specimen Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity/cda:quantity" priority="3990" mode="M65">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Weight" - The 'quantity' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'PQ')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Weight" - The 'quantity' tag 'xsi:type' attribute shall contain the value 'PQ'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'PQ' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'PQ')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@unit and normalize-space(@unit) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Weight" - The 'quantity' tag 'unit' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@unit and normalize-space(@unit) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Weight" - The 'quantity' tag 'value' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity/cda:desc" priority="3989" mode="M65">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Description (Object Description)" - The 'desc' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Physical Details / Description (Object Description)" - The 'desc' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16171']" priority="3988" mode="M65">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16171']" priority="3987" mode="M65">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'value' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16171']" priority="3986" mode="M65">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;SAMPLING PRECONDITIONS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'code' tag 'displayName' attribute shall contain the value 'Sampling Preconditions'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "SAMPLING PRECONDITIONS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16171']/cda:value" priority="3985" mode="M65">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:effectiveTime" priority="3984" mode="M65">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection DateTime" - The 'effectiveTime' tag 'nullFlavor' attribute shall not be present. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16529']" priority="3983" mode="M65">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16529']" priority="3982" mode="M65">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:value) or normalize-space(cda:value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:value) or normalize-space(cda:value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16529']" priority="3981" mode="M65">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;COLLECTION SETTING&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'code' tag 'displayName' attribute shall contain the value 'Collection Setting'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "COLLECTION SETTING"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16529']/cda:value" priority="3980" mode="M65">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The 'value' tag 'xsi:type' attribute shall contain the value 'ST'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'ST' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'ST')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship[cda:observation/cda:code/@code = '103.11014']" priority="3979" mode="M65">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.11014']" priority="3978" mode="M65">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'value' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'value' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code = '103.11014']" priority="3977" mode="M65">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;DATETIME RECEIVED&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'code' tag 'displayName' attribute shall contain the value 'DateTime Received'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "DATETIME RECEIVED"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.11014']/cda:value" priority="3976" mode="M65">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'value' tag 'xsi:type' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'TS' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'TS')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The 'value' tag 'xsi:type' attribute shall contain the value 'TS'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and normalize-space(@xsi:type) != '' and                  normalize-space(@xsi:type) != 'TS' and                 not(substring-before(normalize-space(@xsi:type), ':') != '' and                     substring-after(normalize-space(@xsi:type), ':') = 'TS')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship[cda:observation/cda:code/@code = '103.16187']" priority="3975" mode="M65">
    <xsl:choose>
      <xsl:when test="@typeCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'entryRelationship' tag 'typeCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@typeCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'entryRelationship' tag 'typeCode' attribute shall contain the value 'COMP'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode = 'COMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:observation) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:observation) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16187']" priority="3974" mode="M65">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@moodCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'moodCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@moodCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@moodCode) or normalize-space(@moodCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'moodCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@moodCode) or normalize-space(@moodCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'observation' tag 'moodCode' attribute shall contain the value 'EVN'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@moodCode) or normalize-space(@moodCode) = '' or @moodCode = 'EVN'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:specimen" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'specimen' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:specimen</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:specimen) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'specimen' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:specimen) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code = '103.16187']" priority="3973" mode="M65">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;NCTIS DATA COMPONENTS&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'codeSystemName' attribute shall contain the value 'NCTIS Data Components'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "NCTIS DATA COMPONENTS"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'displayName' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;PARENT SPECIMEN IDENTIFIER&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'code' tag 'displayName' attribute shall contain the value 'Parent Specimen Identifier'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "PARENT SPECIMEN IDENTIFIER"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'translation' tag shall not be present within 'code'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16187']/cda:specimen" priority="3972" mode="M65">
    <xsl:choose>
      <xsl:when test="cda:specimenRole" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'specimenRole' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:specimenRole</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:specimenRole) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'specimenRole' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:specimenRole) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16187']/cda:specimen/cda:specimenRole" priority="3971" mode="M65">
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'id' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity/ext:asSpecimenInContainer" priority="3970" mode="M65">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Container Identifier" - The 'asSpecimenInContainer' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Container Identifier" - The 'asSpecimenInContainer' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'CONT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Container Identifier" - The 'asSpecimenInContainer' tag 'classCode' attribute shall contain the value 'CONT'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'CONT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:container" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Container Identifier" - The 'container' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:container</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:container) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Container Identifier" - The 'container' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:container) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:specimen/cda:specimenRole/cda:specimenPlayingEntity/ext:asSpecimenInContainer/ext:container" priority="3969" mode="M65">
    <xsl:choose>
      <xsl:when test="ext:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Container Identifier" - The 'id' tag is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Container Identifier" - The 'id' tag shall appear only once. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M65" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M65" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observationMedia" priority="4000" mode="M66">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute is missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute shall contain a value. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Anatomical Site / Anatomical Location Image" - The 'observationMedia' tag 'classCode' attribute shall contain the value 'OBS'. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or @classCode = 'OBS'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M66" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16171' and ancestor::*[cda:code/@code = '102.16156.132.1.1']]" priority="3999" mode="M66">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.1']//cda:code[@code = '103.16171']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code='103.16171'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/observation[code/@code = '102.16156.132.1.1']/entryRelationship/observation/code[@code = '103.16171']' path - 1 or more tags are missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.1']//cda:code[@code = '103.16171']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code='103.16171'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M66" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.16144']/cda:entry/cda:observation[@classCode = 'OBS']/cda:entryRelationship/cda:observation[cda:code/@code = '102.16156.132.1.1']/cda:entryRelationship/cda:observation[cda:code/@code = '103.16171']/cda:value" priority="3998" mode="M66">
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Collection and handling / Sampling Preconditions" - The 'value' tag 'xsi:type' attribute shall contain the value 'CD' or 'CE'. Refer to section 7.1.5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or normalize-space(@xsi:type) = '' or                  normalize-space(@xsi:type) = 'CD' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CD') or                  normalize-space(@xsi:type) = 'CE' or                 (substring-before(normalize-space(@xsi:type), ':') != '' and                 substring-after(normalize-space(@xsi:type), ':') = 'CE')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M66" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16529' and ancestor::*[cda:code/@code = '102.16156.132.1.1']]" priority="3997" mode="M66">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.1']//cda:code[@code = '103.16529']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code='103.16529'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / Collection Setting" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/observation[code/@code = '102.16156.132.1.1']/entryRelationship/observation/code[@code = '103.16529']' path - 1 or more tags are missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.1']//cda:code[@code = '103.16529']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code='103.16529'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M66" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.11014' and ancestor::*[cda:code/@code = '102.16156.132.1.1']]" priority="3996" mode="M66">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.1']//cda:code[@code = '103.11014']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code='103.11014'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Handling and Processing / DateTime Received" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/observation[code/@code = '102.16156.132.1.1']/entryRelationship/observation/code[@code = '103.11014']' path - 1 or more tags are missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.1']//cda:code[@code = '103.11014']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code='103.11014'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M66" />
  </xsl:template>
  <xsl:template match="cda:code[@code = '103.16187' and ancestor::*[cda:code/@code = '102.16156.132.1.1']]" priority="3995" mode="M66">
    <xsl:choose>
      <xsl:when test="                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.1']//cda:code[@code = '103.16187']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code='103.16187'])" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.1.1 TEST SPECIMEN DETAIL - "Test Specimen Detail / Identifiers / Parent Specimen Identifier" - The '/ClinicalDocument/component/structuredBody/component/section[code/@code = '101.20117']/component/section[code/@code = '102.16144']/entry/observation[@classCode = 'OBS']/entryRelationship/observation[code/@code = '102.16156.132.1.1']/entryRelationship/observation/code[@code = '103.16187']' path - 1 or more tags are missing. Refer to section 7.1.5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 count(/cda:ClinicalDocument//cda:observation[cda:code/@code='102.16156.132.1.1']//cda:code[@code = '103.16187']) =                 count(/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code='101.20117']/cda:component/cda:section[cda:code/@code='102.16144']/cda:entry/cda:observation[@classCode='OBS']/cda:entryRelationship/cda:observation[cda:code/@code='102.16156.132.1.1']/cda:entryRelationship/cda:observation/cda:code[@code='103.16187'])</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M66" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M66" />
  <xsl:template match="*[@codeSystem='2.16.840.1.113883.13.62']" priority="4000" mode="M67">
    <xsl:choose>
      <xsl:when test="number(@code) = floor(@code)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - ANZSCO code check for "*[@codeSystem='2.16.840.1.113883.13.62']/@code" attribute - The 'code' attribute ANZSCO code value shall be a number. Check all such 'code' attributes to find the incorrect attribute(s). Refer to section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">number(@code) = floor(@code)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="string-length(@code) = 6" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - ANZSCO code check for "*[@codeSystem='2.16.840.1.113883.13.62']/@code" attribute - The 'code' attribute ANZSCO code value shall have 6 digits. Check all such 'code' attributes to find the incorrect attribute(s). Refer to section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">string-length(@code) = 6</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - ANZSCO code check for "*[@codeSystem='2.16.840.1.113883.13.62']/@codeSystemName" attribute - The ANZSCO 'codeSystemName' attribute is missing. Refer to section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or @codeSystemName = '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - ANZSCO code check for "*[@codeSystem='2.16.840.1.113883.13.62']/@codeSystemName" attribute - The ANZSCO 'codeSystemName' attribute shall contain the value '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006'. Refer to section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or @codeSystemName = '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M67" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M67" />
  <xsl:template match="/" priority="4000" mode="M68">
    <xsl:choose>
      <xsl:when test="cda:ClinicalDocument" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument" - The 'ClinicalDocument' tag is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:ClinicalDocument</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:ClinicalDocument) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument" - The 'ClinicalDocument' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:ClinicalDocument) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument" priority="3999" mode="M68">
    <xsl:choose>
      <xsl:when test="cda:typeId" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/typeId" - The 'typeId' tag is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:typeId</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:typeId) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/typeId" - The 'typeId' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:typeId) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:templateId" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/templateId" - The 'templateId' tag is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:templateId</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/id" - The 'id' tag is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/id" - The 'id' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:effectiveTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/effectiveTime" - The 'effectiveTime' tag is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:effectiveTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/effectiveTime" - The 'effectiveTime' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:confidentialityCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/confidentialityCode" - The 'confidentialityCode' tag is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:confidentialityCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:confidentialityCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/confidentialityCode" - The 'confidentialityCode' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:confidentialityCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:languageCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/languageCode" - The 'languageCode' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:languageCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="ext:completionCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:completionCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:completionCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:completionCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:setId) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/setId" - The 'setId' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:setId) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:versionNumber) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/versionNumber" - The 'versionNumber' tag shall appear only once. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:versionNumber) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:typeId" priority="3998" mode="M68">
    <xsl:choose>
      <xsl:when test="@root" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/typeId" - The 'typeId' tag 'root' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@root</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@root) or normalize-space(@root) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/typeId" - The 'typeId' tag 'root' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@root) or normalize-space(@root) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or normalize-space(@root) = '' or @root = '2.16.840.1.113883.1.3'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/typeId" - The 'typeId' tag 'root' attribute shall contain the value '2.16.840.1.113883.1.3'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or normalize-space(@root) = '' or @root = '2.16.840.1.113883.1.3'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@extension" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/typeId" - The 'typeId' tag 'extension' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@extension</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@extension) or normalize-space(@extension) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/typeId" - The 'typeId' tag 'extension' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@extension) or normalize-space(@extension) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@extension) or normalize-space(@extension) = '' or @extension = 'POCD_HD000040'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/typeId" - The 'typeId' tag 'extension' attribute shall contain the value 'POCD_HD000040'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@extension) or normalize-space(@extension) = '' or @extension = 'POCD_HD000040'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:id" priority="3997" mode="M68">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/id" - The 'id' tag 'nullFlavor' attribute shall not be present. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:code" priority="3996" mode="M68">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag 'code' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@code) or normalize-space(@code) = '' or @code = '51852-2'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag 'code' attribute shall contain the value '51852-2'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@code) or normalize-space(@code) = '' or @code = '51852-2'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag 'codeSystem' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.1'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.6.1'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.6.1'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag 'codeSystemName' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;LOINC&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag 'codeSystemName' attribute shall contain the value 'LOINC'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystemName) or normalize-space(@codeSystemName) = '' or translate(@codeSystemName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "LOINC"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@displayName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag 'displayName' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@displayName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = &quot;LETTER&quot;" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/code" - The 'code' tag 'displayName' attribute shall contain the value 'Letter'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@displayName) or normalize-space(@displayName) = '' or translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = "LETTER"</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:effectiveTime" priority="3995" mode="M68">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/effectiveTime" - The 'effectiveTime' tag 'nullFlavor' attribute shall not be present. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:confidentialityCode" priority="3994" mode="M68">
    <xsl:choose>
      <xsl:when test="@nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/confidentialityCode" - The 'confidentialityCode' tag 'nullFlavor' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor) or normalize-space(@nullFlavor) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/confidentialityCode" - The 'confidentialityCode' tag 'nullFlavor' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor) or normalize-space(@nullFlavor) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@nullFlavor) or normalize-space(@nullFlavor) = '' or @nullFlavor = 'NA'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/confidentialityCode" - The 'confidentialityCode' tag 'nullFlavor' attribute shall contain the value 'NA'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@nullFlavor) or normalize-space(@nullFlavor) = '' or @nullFlavor = 'NA'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:languageCode" priority="3993" mode="M68">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/languageCode" - The 'languageCode' tag 'code' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/languageCode" - The 'languageCode' tag 'code' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/ext:completionCode" priority="3992" mode="M68">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'code' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'code' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Document_Status_Values']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'code' attribute shall be as per 10.13 NCTIS: Admin Codes - Document Status. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'NCTIS_Document_Status_Values']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'codeSystem' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'codeSystem' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.20104'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'codeSystem' attribute shall contain the value '1.2.36.1.2001.1001.101.104.20104'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '1.2.36.1.2001.1001.101.104.20104'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'codeSystemName' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Document Status Values'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'codeSystemName' attribute shall contain the value 'NCTIS Document Status Values'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'NCTIS Document Status Values'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'displayName' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Document_Status_Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'code' and 'displayName' attributes shall match as per 10.13 NCTIS: Admin Codes - Document Status. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'NCTIS_Document_Status_Values']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/ext:completionCode" - The 'completionCode' tag 'nullFlavor' attribute shall not be present. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:setId" priority="3991" mode="M68">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/setId" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:versionNumber" priority="3990" mode="M68">
    <xsl:choose>
      <xsl:when test="@value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/versionNumber" - The 'versionNumber' tag 'value' attribute is missing. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or normalize-space(@value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument/versionNumber" - The 'versionNumber' tag 'value' attribute shall contain a value. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or normalize-space(@value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M68" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M68" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M69">
    <xsl:choose>
      <xsl:when test="count(cda:templateId[@root = '1.2.36.1.2001.1001.101.100.1002.132' and @extension='1.3'])&gt;0" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument / templateId" - The 'templateId' tag 'root' attribute shall contain the value "1.2.36.1.2001.1001.101.100.1002.132". If the 'root' value is '1.2.36.1.2001.1001.101.100.1002.132' then the 'extension' attribute shall contain the value '1.3'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">count(cda:templateId[@root = '1.2.36.1.2001.1001.101.100.1002.132' and @extension='1.3'])&gt;0</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="count(cda:templateId[@root = '1.2.36.1.2001.1001.100.149' and @extension='1.0'])&gt;0" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 ClinicalDocument - "ClinicalDocument / templateId" - The 'templateId' tag 'root' attribute shall contain the value "1.2.36.1.2001.1001.100.149" . If the 'root' value is '1.2.36.1.2001.1001.100.149' then the 'extension' attribute shall contain the value '1.0'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">count(cda:templateId[@root = '1.2.36.1.2001.1001.100.149' and @extension='1.0'])&gt;0</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M69" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:languageCode" priority="3999" mode="M69">
    <xsl:choose>
      <xsl:when test="@code = 'en-AU' or @code='en'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1 Clinical Document - "ClinicalDocument / languageCode" - The 'languageCode' tag 'code' attribute shall be coded as per 'RFC3066' format 'LanguageCode-COUNTRYCODE' and shall have the language code as 'en'. Refer to section 5.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code = 'en-AU' or @code='en'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M69" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M69" />
  <xsl:template match="ext:asEmployment" priority="4000" mode="M70">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'asEmployment' tag 'classCode' attribute is missing. Check all 'ext:asEmployment' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'asEmployment' tag 'classCode' attribute shall contain a value. Check all 'ext:asEmployment' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@classCode='EMP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'asEmployment' tag 'classCode' attribute shall contain the value 'EMP'. Check all 'ext:asEmployment' tags to find the incorrect attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode='EMP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:employerOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'ext:employerOrganization' tag shall appear only once. Check all 'ext:asEmployment' tags to find the duplicate tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:employerOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'ext:code' tag shall appear only once. Check all 'ext:asEmployment' tags to find the duplicate tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:jobCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'ext:jobCode' tag shall appear only once. Check all 'ext:asEmployment' tags to find the duplicate tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:jobCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:jobClassCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'ext:jobClassCode' tag shall appear only once. Check all 'ext:asEmployment' tags to find the duplicate tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:jobClassCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M70" />
  </xsl:template>
  <xsl:template match="ext:asEmployment/ext:jobCode" priority="3999" mode="M70">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'code' attribute is missing. Check all 'ext:asEmployment/ext:jobCode' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'code' attribute shall contain a value. Check all 'ext:asEmployment/ext:jobCode' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@code) or                 normalize-space(@code) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006']/code[                 @code = current()/@code]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'code' attribute shall be as per '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006'. Check all 'ext:asEmployment/ext:jobCode' tags to find the incorrect attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@code) or                 normalize-space(@code) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006']/code[                 @code = current()/@code]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'codeSystem' attribute is missing. Check all 'ext:asEmployment/ext:jobCode' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'codeSystem' attribute shall contain a value. Check all 'ext:asEmployment/ext:jobCode' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006']/code[                 @codeSystem = current()/@codeSystem]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'codeSystem' attribute shall be as per '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006'. Check all 'ext:asEmployment/ext:jobCode' tags to find the incorrect attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006']/code[                 @codeSystem = current()/@codeSystem]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'codeSystemName' attribute shall contain a value. Check all 'ext:asEmployment/ext:jobCode' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemVersion and normalize-space(@codeSystemVersion) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'codeSystemVersion' attribute shall contain a value. Check all 'ext:asEmployment/ext:jobCode' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemVersion and normalize-space(@codeSystemVersion) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'displayName' attribute shall contain a value. Check all 'ext:asEmployment/ext:jobCode' tags to find the missing attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @displayName and                 normalize-space(@displayName) != '' and                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006']                 /code[(@code = current()/@code) and (translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))]">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'jobCode' tag 'code' and 'displayName' attributes shall match as per '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006'. Check all 'ext:asEmployment/ext:jobCode' tags to find the incorrect attribute. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @displayName and                 normalize-space(@displayName) != '' and                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = '1220.0 - ANZSCO - Australian and New Zealand Standard Classification of Occupations, First Edition, 2006']                 /code[(@code = current()/@code) and (translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') != translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))]</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M70" />
  </xsl:template>
  <xsl:template match="ext:asEmployment/ext:employerOrganization" priority="3998" mode="M70">
    <xsl:choose>
      <xsl:when test="cda:asOrganizationPartOf" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'asOrganizationPartOf' tag is missing. Check all 'ext:asEmployment/ext:employerOrganization' tags to find the missing tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:asOrganizationPartOf</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:asOrganizationPartOf) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'asOrganizationPartOf' tag shall appear only once. Check all 'ext:asEmployment/ext:employerOrganization' tags to find the duplicate tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:asOrganizationPartOf) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'name' tag shall appear only once. Check all 'ext:asEmployment/ext:employerOrganization' tags to find the duplicate tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M70" />
  </xsl:template>
  <xsl:template match="ext:asEmployment/ext:employerOrganization/cda:name" priority="3997" mode="M70">
    <xsl:choose>
      <xsl:when test="normalize-space(.) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'name' tag shall contain a value. Check all 'ext:asEmployment/ext:employerOrganization/cda:name' tags to find the missing value. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">normalize-space(.) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M70" />
  </xsl:template>
  <xsl:template match="ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf" priority="3996" mode="M70">
    <xsl:choose>
      <xsl:when test="cda:wholeOrganization" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'wholeOrganization' tag is missing. Check all 'ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf' tags to find the missing tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:wholeOrganization</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:wholeOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'wholeOrganization' tag shall appear only once. Check all 'ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf' tags to find the duplicate tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:wholeOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M70" />
  </xsl:template>
  <xsl:template match="ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization" priority="3995" mode="M70">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'ext:asEntityIdentifier' tag is missing. Check all 'ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization' tags to find the missing tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'name' tag is missing. Check all 'ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization' tags to find the missing tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'name' tag shall appear only once. Check all 'ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization' tags to find the duplicate tag. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M70" />
  </xsl:template>
  <xsl:template match="ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/cda:name" priority="3994" mode="M70">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'name' tag 'nullFlavor' attribute shall not be present. Refer to requirements in NullFlavor Usage Clarification FAQ and section 8.8 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="normalize-space(.) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'name' tag shall contain a value. Check all 'ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/cda:name' tags to find the missing value. Refer to section 8.8 Employment of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">normalize-space(.) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@use and normalize-space(@use) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'name' tag 'use' attribute shall contain a value. Check all 'ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/cda:name' tags to find the incorrect tag. Refer to section 10.4 AS 4846-2006: Health Care Provider Organisation Name Usage of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@use and normalize-space(@use) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@use and not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Provider_Organisation_Name_Usage']/code                 [(@code = (current()/@use))                 or (@alternativeCode = (current()/@use))                 or (@hl7Code = (current()/@use))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 8.8 Employment - The 'name' tag 'use' attribute shall be coded as per AS 4846-2006: Health Care Provider Organisation Name Usage. Check all 'ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/cda:name' tags to find the incorrect tag. Refer to section 10.4 AS 4846-2006: Health Care Provider Organisation Name Usage of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@use and not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Provider_Organisation_Name_Usage']/code                 [(@code = (current()/@use))                 or (@alternativeCode = (current()/@use))                 or (@hl7Code = (current()/@use))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M70" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M70" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M71">
    <xsl:choose>
      <xsl:when test="cda:custodian" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian" - The 'custodian' tag is missing. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:custodian</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:custodian) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian" - The 'custodian' tag shall appear only once. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:custodian) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M71" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:custodian" priority="3999" mode="M71">
    <xsl:choose>
      <xsl:when test="cda:assignedCustodian" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian" - The 'assignedCustodian' tag is missing. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:assignedCustodian</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:assignedCustodian) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian" - The 'assignedCustodian' tag shall appear only once. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedCustodian) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M71" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:custodian/cda:assignedCustodian" priority="3998" mode="M71">
    <xsl:choose>
      <xsl:when test="cda:representedCustodianOrganization" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization" - The 'representedCustodianOrganization' tag is missing. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:representedCustodianOrganization</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:representedCustodianOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization" - The 'representedCustodianOrganization' tag shall appear only once. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:representedCustodianOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M71" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization" priority="3997" mode="M71">
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/id" - The 'id' tag is missing. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:telecom) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/Electronic Communication Detail" - The 'telecom' tag shall appear only once. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:telecom) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/name" - The 'name' tag shall appear only once. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:name) or normalize-space(cda:name) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/name" - The 'name' tag shall contain a value. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:name) or normalize-space(cda:name) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:addr) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/Address" - The 'addr' tag shall appear only once. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:addr) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M71" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/cda:id" priority="3996" mode="M71">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M71" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M71" />
  <xsl:template match="/cda:ClinicalDocument/cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization" priority="4000" mode="M72">
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.2 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/name" - The 'name' tag is missing. Refer to section 3.4.9 Custodian of the COMMON-ConformProfileClinDoc-v1.5 and section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.2 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 3.4.9 Custodian of the COMMON-ConformProfileClinDoc-v1.5 and section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M72" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:custodian/cda:assignedCustodian/cda:representedCustodianOrganization/ext:asEntityIdentifier/ext:id" priority="3999" mode="M72">
    <xsl:if test="@nullFlavor">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian/assignedCustodian/representedCustodianOrganization/Entity Identifier" - The 'id' tag 'nullFlavor' attribute shall not exist. Refer to section 3.4.9 Custodian of the COMMON-ConformProfileClinDoc-v1.5 and section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.0.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(starts-with(@root, '1.2.36.1.2001.1003.0.80036')) and not( (starts-with(@root, '1.2.36.1.2001.1003.0.800362')) or (starts-with(@root, '1.2.36.1.2001.1003.0.800363')) )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian / assignedCustodian / representedCustodianOrganization / Entity Identifier" - The 'id' tag 'root' attribute shall begin with either '1.2.36.1.2001.1003.0.800362' or '1.2.36.1.2001.1003.0.800363' if it begins with '1.2.36.1.2001.1003.0.80036'. Refer to section 3.4.9 Custodian of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(starts-with(@root, '1.2.36.1.2001.1003.0.80036')) and not( (starts-with(@root, '1.2.36.1.2001.1003.0.800362')) or (starts-with(@root, '1.2.36.1.2001.1003.0.800363')) )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(starts-with(@root, '1.2.36.1.2001.1007.1.80036')) and not(starts-with(@root, '1.2.36.1.2001.1007.1.800364'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian / assignedCustodian / representedCustodianOrganization / Entity Identifier" - The 'id' tag 'root' attribute shall begin with '1.2.36.1.2001.1007.1.800364' if it begins with '1.2.36.1.2001.1007.1.80036'. Refer to section 3.4.9 Custodian of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(starts-with(@root, '1.2.36.1.2001.1007.1.80036')) and not(starts-with(@root, '1.2.36.1.2001.1007.1.800364'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(starts-with(@root, '1.2.36.1.2001.1007.10.80036')) and not(starts-with(@root, '1.2.36.1.2001.1007.10.800364'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian / assignedCustodian / representedCustodianOrganization / Entity Identifier" - The 'id' tag 'root' attribute shall begin with '1.2.36.1.2001.1007.10.800364' if it begins with '1.2.36.1.2001.1007.10.80036'. Refer to section 3.4.9 Custodian of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(starts-with(@root, '1.2.36.1.2001.1007.10.80036')) and not(starts-with(@root, '1.2.36.1.2001.1007.10.800364'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(starts-with(@root, '1.2.36.1.2001.1007.20.80036')) and not(starts-with(@root, '1.2.36.1.2001.1007.20.800364'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.3 Custodian - "custodian / assignedCustodian / representedCustodianOrganization / Entity Identifier" - The 'id' tag 'root' attribute shall begin with '1.2.36.1.2001.1007.20.800364' if it begins with '1.2.36.1.2001.1007.20.80036'. Refer to section 3.4.9 Custodian of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(starts-with(@root, '1.2.36.1.2001.1007.20.80036')) and not(starts-with(@root, '1.2.36.1.2001.1007.20.800364'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M72" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M72" />
  <xsl:template match="cda:value[@xsi:type = 'BL' or substring-after(normalize-space(@xsi:type), ':') = 'BL']" priority="4000" mode="M73">
    <xsl:choose>
      <xsl:when test="@nullFlavor or @value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'nullFlavor' or 'value' attribute. Check all 'cda:value' tags with 'xsi:type=BL' attribute to find the missing 'nullFlavor' or 'value' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@nullFlavor or @value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@nullFlavor" - The 'value' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=BL' attribute to find the 'nullFlavor' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'value' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=BL' attribute to find the 'value' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 normalize-space(@value) != '' and                 @value != 'true' and                 @value != 'false'                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'value' attribute shall contain the value 'true' or 'false'. Check all 'cda:value' tags with 'xsi:type=BL' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 normalize-space(@value) != '' and                 @value != 'true' and                 @value != 'false'                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'CD' or substring-after(normalize-space(@xsi:type), ':') = 'CD' or                                  @xsi:type = 'CE' or substring-after(normalize-space(@xsi:type), ':') = 'CE']" priority="3999" mode="M73">
    <xsl:choose>
      <xsl:when test="                 cda:originalText or (@code and @codeSystem) or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'originalText' tag or the 'code and codeSystem' or the 'nullFlavor' attributes. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the missing tag or attribute(s). Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 cda:originalText or (@code and @codeSystem) or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystem and normalize-space(@codeSystem) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@codeSystem" attribute - The 'value' tag 'codeSystem' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'codeSystem' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystem and normalize-space(@codeSystem) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@codeSystem" attribute - The 'value' tag 'codeSystem' attribute shall contain an UUID or OID. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@codeSystem" attribute - The 'value' tag 'codeSystem' attribute shall be a valid UUID. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@codeSystem" attribute - The 'value' tag 'codeSystem' attribute shall be a valid OID. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@nullFlavor" - The 'value' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'nullFlavor' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and                 normalize-space(@nullFlavor) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Coded_DataType_NullFlavor']/code[(@code = current()/@nullFlavor)])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@nullFlavor" attribute - The 'code' tag 'nullFlavor' attribute shall be as per FAQ Representing Coding in CDA Documents CDA CD DataType nullFlavors. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'nullFlavor' attributes of incorrect value. Refer to the HL7 data types specification and section 2.1.1 of the FAQ Representing Coding in CDA Documents, and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and                 normalize-space(@nullFlavor) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Coded_DataType_NullFlavor']/code[(@code = current()/@nullFlavor)])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:originalText) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:originalText" - The 'originalText' tag shall appear only once. Check all 'cda:value' tag with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the duplicated 'originalText' child tag. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:originalText) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:originalText and normalize-space(cda:originalText) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:originalText" - The 'originalText' tag shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'originalText' child tag have value missing. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:originalText and normalize-space(cda:originalText) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@code" attribute - The 'value' tag 'code' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'code' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code != normalize-space(@code)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@code" attribute - The 'value' tag 'code' attribute shall not start or end with space. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'code' attribute with incorrect value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code != normalize-space(@code)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@codeSystem) and @code">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@code" attribute - The 'value' tag 'code' attribute shall not be present if the corresponding 'codeSystem' attribute is missing. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the incorrectly contained 'code' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@codeSystem) and @code</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@codeSystemName" attribute - The 'value' tag 'codeSystemName' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'codeSystemName' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemVersion and normalize-space(@codeSystemVersion) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@codeSystemVersion" attribute - The 'value' tag 'codeSystemVersion' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'codeSystemVersion' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemVersion and normalize-space(@codeSystemVersion) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@displayName" attribute - The 'value' tag 'displayName' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'displayName' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@displayName" attribute - The 'value' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:qualifier)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:qualifier" - The 'qualifier' tag shall not be present within 'value'. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the incorrect child 'qualifier' tag. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:qualifier)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'CD' or substring-after(normalize-space(@xsi:type), ':') = 'CD' or                                  @xsi:type = 'CE' or substring-after(normalize-space(@xsi:type), ':') = 'CE']/cda:translation" priority="3998" mode="M73">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute is missing. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with missing 'codeSystem' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag 'codeSystem' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain an UUID or OID. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall be a valid UUID. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall be a valid OID. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 not(parent::*/@codeSystem) or                 normalize-space(parent::*/@codeSystem) = '' or                 @codeSystem != parent::*/@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain a value different from the codeSystem it translates from. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 not(parent::*/@codeSystem) or                 normalize-space(parent::*/@codeSystem) = '' or                 @codeSystem != parent::*/@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@code or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation" attributes - The 'translation' tag shall have at least the 'code' or the 'nullFlavor' attributes. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with the missing attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@nullFlavor" attribute - The 'translation' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag 'nullFlavor' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'OTH'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@nullFlavor" attribute - The 'translation' tag 'nullFlavor' attribute shall contain the value 'OTH'. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag 'nullFlavor' attribute of incorrect value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'OTH'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:originalText)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation" - The 'originalText' tag shall not be present within 'translation' tag. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag containing 'originalText' tag. Refer to the HL7 data types specification and section 2.1.5 of the Implementation Guidance - Representing Coding in CDA Documents - Version 1.0 - 10 October 2011, and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:originalText)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation" - The 'translation' tag shall not be present within 'translation' tag. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with nested 'translation' tag. Refer to the HL7 data types specification and section 2.1.5 of the Implementation Guidance - Representing Coding in CDA Documents - Version 1.0 - 10 October 2011, and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall contain a value. Check all 'cda:value' with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag 'code' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code != normalize-space(@code)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall not start or end with space. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag 'code' attribute of incorrect value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code != normalize-space(@code)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@codeSystem) and @code">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall not be present if the corresponding 'codeSystem' attribute is missing. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with incorrectly contained 'code' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@codeSystem) and @code</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@codeSystemName" attribute - The 'translation' tag 'codeSystemName' attribute shall contain a value. Check all 'cda:value' with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag 'codeSystemName' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemVersion and normalize-space(@codeSystemVersion) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@codeSystemVersion" attribute - The 'translation' tag 'codeSystemVersion' attribute shall contain a value. Check all 'cda:value' with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag 'codeSystemVersion' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemVersion and normalize-space(@codeSystemVersion) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@displayName" attribute - The 'translation' tag 'displayName' attribute shall contain a value. Check all 'cda:value' with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag 'displayName' attribute of missing value. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/@displayName" attribute - The 'translation' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:qualifier)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:translation/cda:qualifier" - The 'qualifier' tag shall not be present within 'translation'. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'translation' child tag with the incorrect child 'qualifier' tag. Refer to the HL7 data types specification and sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:qualifier)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'CD' or substring-after(normalize-space(@xsi:type), ':') = 'CD' or                                  @xsi:type = 'CE' or substring-after(normalize-space(@xsi:type), ':') = 'CE']/cda:originalText" priority="3997" mode="M73">
    <xsl:if test="count(cda:reference) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:value/cda:originalText' tag - The 'reference' tag shall appear only once. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'originalText' child tag with the duplicated 'reference' tag. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:reference) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:reference and                 normalize-space(concat(text()[1], text()[2])) != '' and                 normalize-space(concat(text()[1], text()[2])) !=                 normalize-space(concat(ancestor::cda:component/cda:section/cda:text/text()[1],                                        ancestor::cda:component/cda:section/cda:text/text()[2]))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:value/cda:originalText' tag - The 'originalText' tag shall contain the value match to its corresponding narrative block text. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'originalText' child tag with the corresponding narrative text mismatch. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:reference and                 normalize-space(concat(text()[1], text()[2])) != '' and                 normalize-space(concat(text()[1], text()[2])) !=                 normalize-space(concat(ancestor::cda:component/cda:section/cda:text/text()[1],                                        ancestor::cda:component/cda:section/cda:text/text()[2]))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'CD' or substring-after(normalize-space(@xsi:type), ':') = 'CD' or                                  @xsi:type = 'CE' or substring-after(normalize-space(@xsi:type), ':') = 'CE']/cda:originalText/cda:reference" priority="3996" mode="M73">
    <xsl:choose>
      <xsl:when test="@value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:value/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute is missing. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'originalText/reference' child tag with the missing 'value' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or normalize-space(@value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:value/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'originalText/reference' child tag with the empty 'value' attribute. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or normalize-space(@value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value) or                 normalize-space(@value) = '' or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:value/cda:originalText/cda:reference' tag - The narrative 'text/content/@ID' attribute corresponding to the 'reference' tag 'value' attribute is missing. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'originalText/reference' child tag with the missing corresponding narrative. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value) or                 normalize-space(@value) = '' or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value) or                 normalize-space(@value) = '' or                 not(ancestor::cda:component/cda:section/cda:text) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content/@ID) or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID = @value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">&gt;Error: Specialist Letter - Global Clinical Document check for 'cda:value/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute shall contain the value match to its corresponding narrative block content 'ID' attribute. Check all 'cda:value' tags with 'xsi:type=CD' or 'xsi:type=CE' attribute to find the 'originalText/reference' child tag with the corresponding narrative content ID mismatch. Refer to the HL7 data types specification and section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value) or                 normalize-space(@value) = '' or                 not(ancestor::cda:component/cda:section/cda:text) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content/@ID) or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID = @value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'CS' or substring-after(normalize-space(@xsi:type), ':') = 'CS']" priority="3995" mode="M73">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'code' attribute is missing. Check all 'cda:value' tags with 'xsi:type=CS' attribute to find the missing 'code' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'code' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=CS' attribute to find the 'code' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'INT' or substring-after(normalize-space(@xsi:type), ':') = 'INT']" priority="3994" mode="M73">
    <xsl:choose>
      <xsl:when test="@nullFlavor or @value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'nullFlavor' or the 'value' attribute. Check all 'cda:value' tags with 'xsi:type=INT' attribute to find the missing 'nullFlavor' or 'value' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@nullFlavor or @value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@nullFlavor" - The 'value' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=INT' attribute to find the 'nullFlavor' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'value' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=INT' attribute to find the 'value' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 normalize-space(@value) != '' and                 number(@value) != floor(@value)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'value' attribute shall contain an integer value. Check all 'cda:value' tags with 'xsi:type=INT' attribute to find the 'value' attribute of incorrect datatype. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 normalize-space(@value) != '' and                 number(@value) != floor(@value)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'PN' or substring-after(normalize-space(@xsi:type), ':') = 'PN']" priority="3993" mode="M73">
    <xsl:choose>
      <xsl:when test="@nullFlavor or cda:family or cda:given" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'family' and/or 'given' name tag or the 'nullFlavor' attribute. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the missing 'nullFlavor' attribute or 'family and/or given' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@nullFlavor or cda:family or cda:given</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@nullFlavor" - The 'value' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the 'nullFlavor' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:delimiter and normalize-space(cda:delimiter ) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:delimiter" tag - The 'delimiter' tag shall contain a value. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the 'delimiter' child tag have value missing. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:delimiter and normalize-space(cda:delimiter ) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:family) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:family" - The 'family' tag shall appear only once. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the duplicate 'family' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:family) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:family) or normalize-space(cda:family) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:family" - The 'family' tag shall contain a value. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the 'family' child tag have value missing. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:family) or normalize-space(cda:family) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="cda:given and normalize-space(cda:given) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:given" - The 'given' tag shall contain a value. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the 'given' child tag have value missing. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:given and normalize-space(cda:given) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:prefix and normalize-space(cda:prefix ) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:prefix" tag - The 'prefix' tag shall contain a value. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the 'prefix' child tag have value missing. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:prefix and normalize-space(cda:prefix ) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:suffix and normalize-space(cda:suffix) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:suffix" tag - The 'suffix' tag shall contain a value. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the 'suffix' child tag have value missing. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:suffix and normalize-space(cda:suffix) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:validTime and not(cda:validTime/child::*)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/cda:validTime" - The child tag(s) of 'validTime' tag is missing. Check all 'cda:value' tags with 'xsi:type=PN' attribute to find the 'validTime' child tag have child tag missing. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:validTime and not(cda:validTime/child::*)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'PQ' or substring-after(normalize-space(@xsi:type), ':') = 'PQ']" priority="3992" mode="M73">
    <xsl:choose>
      <xsl:when test="@nullFlavor or @value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'nullFlavor' or the 'value' attribute. Check all 'cda:value' tags with 'xsi:type=PQ' attribute to find the missing 'nullFlavor' or 'value' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@nullFlavor or @value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@nullFlavor" - The 'value' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PQ' attribute to find the 'nullFlavor' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'value' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PQ' attribute to find the 'value' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@unit and normalize-space(@unit) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'unit' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PQ' attribute to find the 'unit' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@unit and normalize-space(@unit) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@unit and not(@value)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'value' attribute is missing for the existence of 'unit' attribute. Check all 'cda:value' tags with 'xsi:type=PQ' attribute to find the 'unit' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@unit and not(@value)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and not(@unit)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'unit' attribute is missing for the existence of 'value' attribute. Check all 'cda:value' tags with 'xsi:type=PQ' attribute to find the 'value' attribute of missing value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and not(@unit)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'IVL_PQ' or substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ']" priority="3991" mode="M73">
    <xsl:choose>
      <xsl:when test="cda:low or cda:high or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'nullFlavor' attribute or 'low' or 'high' child tag. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute to find the missing attribute(s) or child tag(s). Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:low or cda:high or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor)=''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor)=''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:low) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'low' tag shall appear only once. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute to find the duplicate 'low' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:low) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:high) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'high' tag shall appear only once. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute to find the duplicate 'high' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:high) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:center">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'center' tag shall not be present. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute to find the missing attribute(s) or child tag(s). Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:center</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:width">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'width' tag shall not be present. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute to find the missing attribute(s) or child tag(s). Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:width</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'IVL_PQ' or substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ']/cda:low |                         cda:value[@xsi:type = 'IVL_PQ' or substring-after(normalize-space(@xsi:type), ':') = 'IVL_PQ']/cda:high" priority="3990" mode="M73">
    <xsl:choose>
      <xsl:when test="@nullFlavor or @value or @unit" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag's child tag shall have at least the 'nullFlavor' or 'value' or 'unit' attribute. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute to find the missing attribute(s). Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@nullFlavor or @value or @unit</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor)=''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag's child tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor)=''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value)=''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag's child tag 'value' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value)=''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@unit and normalize-space(@unit)=''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag's child tag 'unit' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@unit and normalize-space(@unit)=''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@inclusive and normalize-space(@inclusive)=''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag's child tag 'inclusive' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=IVL_PQ' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@inclusive and normalize-space(@inclusive)=''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type = 'TS'      or substring-after(normalize-space(@xsi:type), ':') = 'TS']                           |                        cda:value[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:low               |                        cda:value[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:high              |                        cda:value[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:center            |                        cda:value[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:low    |                        cda:value[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:high   |                        cda:value[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:center" priority="3989" mode="M73">
    <xsl:if test="                 name() != 'value' and substring-after(name(), ':') != 'value' and                 @xsi:type and                 normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@xsi:type" - The 'value' tag 'xsi:type' attribute shall contain a value. Check all 'value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' to find the child tag having 'xsi:type' attribute of empty value. Refer to section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 name() != 'value' and substring-after(name(), ':') != 'value' and                 @xsi:type and                 normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 name() != 'value' and substring-after(name(), ':') != 'value' and                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'TS' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'TS')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@xsi:type" - The 'value' tag 'xsi:type' attribute shall contain the value 'TS'. Check all 'value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' to find the child tag having 'xsi:type' attribute of incorrect value. Refer to section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 name() != 'value' and substring-after(name(), ':') != 'value' and                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'TS' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'TS')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 @value or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'value' or 'nullFlavor' attribute. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the missing 'nullFlavor' or 'value' attribute. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 @value or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value/@nullFlavor" - The 'value' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'nullFlavor' attribute of empty value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'value' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of empty value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value                      and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for value datatype - The 'value' tag 'value' attribute shall contain a timezone value. "Any time that is more specific than a day SHALL include a timezone". Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of missing timezone value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value                      and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect fraction of second - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect fraction of second - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect TimeZone - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect TimeZone - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Year - The value for year must be more recent than 1900. The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Month - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Month - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Hour - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Minute - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Second - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' or 'xsi:type=TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type='IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS'] |                        cda:value[@xsi:type='PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase" priority="3988" mode="M73">
    <xsl:choose>
      <xsl:when test="                 @value or cda:center or cda:low or cda:high or cda:width or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'value' or 'nullFlavor' attribute or 'low' or 'high' or 'center' or 'width' child tag. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' attribute to find the missing 'nullFlavor' or 'value' attribute or 'low' or 'high' or 'center' or 'width' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 @value or cda:center or cda:low or cda:high or cda:width or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 name() != 'value' and substring-after(name(), ':') != 'value' and                 @xsi:type and                 normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value/phase' tag 'xsi:type' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the child 'phase' tag with 'xsi:type' attribute of empty value. Refer to section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 name() != 'value' and substring-after(name(), ':') != 'value' and                 @xsi:type and                 normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 name() != 'value' and substring-after(name(), ':') != 'value' and                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'IVL_TS' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value/phase' tag 'xsi:type' attribute shall contain the value 'IVL_TS'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the child 'phase' tag with 'xsi:type' attribute of incorrect value. Refer to section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 name() != 'value' and substring-after(name(), ':') != 'value' and                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'IVL_TS' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" tag - The 'value' or 'value/phase' tag 'value' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the missing attribute value. Refer to section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value                and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" tag - The 'value' or 'value/phase' tag 'value' attribute shall contain a timezone value. "Any time that is more specific than a day SHALL include a timezone". Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of missing timezone value. Refer to section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value                and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect fraction of second - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect fraction of second - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect TimeZone - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect TimeZone - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Year - The value for year must be more recent than 1900. The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Month - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Month - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Hour - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Minute - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Second - The 'value' or 'value/phase' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:low) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'low' tag shall appear only once. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the duplicate 'low' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:low) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:high) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'high' tag shall appear only once. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the duplicate 'high' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:high) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:center) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'center' tag shall appear only once. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the duplicate 'center' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:center) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:width) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'width' tag shall appear only once. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the duplicate 'width' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:width) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:center and (cda:low or cda:high)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'value' tag shall have 'center' or 'low and/or high' tag but not both. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the incorrect use of 'center' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:center and (cda:low or cda:high)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value,'.')           and                 contains(cda:high/@value, '.')         and                 contains(cda:low/@value,'+')           and                 contains(cda:high/@value, '+')         and                 (number(substring-before(cda:low/@value,'.')) +                 number(substring-after(substring-before(cda:low/@value,'+'),'.')) &gt;                 number(substring-before(cda:high/@value,'.')) +                 number(substring-after(substring-before(cda:high/@value,'+'),'.')))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'low' tag 'value' attribute shall be a value less than than the 'high' tag 'value' attribute. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'low' and 'high' child tags having incorrect attribute value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value,'.')           and                 contains(cda:high/@value, '.')         and                 contains(cda:low/@value,'+')           and                 contains(cda:high/@value, '+')         and                 (number(substring-before(cda:low/@value,'.')) +                 number(substring-after(substring-before(cda:low/@value,'+'),'.')) &gt;                 number(substring-before(cda:high/@value,'.')) +                 number(substring-after(substring-before(cda:high/@value,'+'),'.')))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value,'.')           and                 contains(cda:high/@value, '.')         and                 contains(cda:low/@value,'-')           and                 contains(cda:high/@value, '-')         and                 (number(substring-before(cda:low/@value,'.')) +                 number(substring-after(substring-before(cda:low/@value,'-'),'.')) &gt;                 number(substring-before(cda:high/@value,'.')) +                 number(substring-after(substring-before(cda:high/@value,'-'),'.')))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'low' tag 'value' attribute shall contain a value less than than the 'high' tag 'value' attribute. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'low' and 'high' child tags having incorrect attribute value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value,'.')           and                 contains(cda:high/@value, '.')         and                 contains(cda:low/@value,'-')           and                 contains(cda:high/@value, '-')         and                 (number(substring-before(cda:low/@value,'.')) +                 number(substring-after(substring-before(cda:low/@value,'-'),'.')) &gt;                 number(substring-before(cda:high/@value,'.')) +                 number(substring-after(substring-before(cda:high/@value,'-'),'.')))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value, '+')          and                 contains(cda:high/@value,'+')          and                 (number(substring-before(cda:low/@value,'+')) &gt; number(substring-before(cda:high/@value,'+')))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'low' tag 'value' attribute shall contain a value less than than the 'high' tag 'value' attribute. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'low' and 'high' child tags having incorrect attribute value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value, '+')          and                 contains(cda:high/@value,'+')          and                 (number(substring-before(cda:low/@value,'+')) &gt; number(substring-before(cda:high/@value,'+')))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value, '-')          and                 contains(cda:high/@value,'-')          and                 (number(substring-before(cda:low/@value,'-')) &gt; number(substring-before(cda:high/@value,'-')))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'low' tag 'value' attribute shall contain a value less than than the 'high' tag 'value' attribute. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'low' and 'high' child tags having incorrect attribute value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value, '-')          and                 contains(cda:high/@value,'-')          and                 (number(substring-before(cda:low/@value,'-')) &gt; number(substring-before(cda:high/@value,'-')))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 not(contains(cda:low/@value, '+'))     and                 not(contains(cda:high/@value,'+'))     and                 not(contains(cda:low/@value, '-'))     and                 not(contains(cda:high/@value,'-'))     and                 (number(cda:low/@value) &gt; number(cda:high/@value))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'low' tag 'value' attribute shall contain a value less than than the 'high' tag 'value' attribute. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute and 'phase' child tag, or 'cda:value' tags with 'xsi:type=IVL_TS' attribute, to find the 'low' and 'high' child tags having incorrect attribute value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 not(contains(cda:low/@value, '+'))     and                 not(contains(cda:high/@value,'+'))     and                 not(contains(cda:low/@value, '-'))     and                 not(contains(cda:high/@value,'-'))     and                 (number(cda:low/@value) &gt; number(cda:high/@value))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type='PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']" priority="3987" mode="M73">
    <xsl:choose>
      <xsl:when test="                 @value or @nullFlavor or cda:frequency or cda:period or cda:phase" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:value" - The 'value' tag shall have at least the 'value' or 'nullFlavor' attribute or 'frequency' or 'period' or 'phase' child tag. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the missing 'value' or 'nullFlavor' attribute, or frequency' or 'period' or 'phase' child tag. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 @value or @nullFlavor or cda:frequency or cda:period or cda:phase</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect fraction of second - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect fraction of second - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect TimeZone - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect TimeZone - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect DateTime - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Year - The value for year must be more recent than 1900. The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Month - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Month - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Date - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Hour - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Minute - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - Incorrect Second - The 'value' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' attribute to find the 'value' attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="cda:value[@xsi:type='IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:width                      |                        cda:value[@xsi:type='PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:width           |                        cda:value[@xsi:type='PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:period                    |                        cda:value[@xsi:type='PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:frequency/cda:numerator   |                        cda:value[@xsi:type='PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:frequency/cda:denominator" priority="3986" mode="M73">
    <xsl:if test="                 @xsi:type and                 normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'xsi:type' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' attribute to find child tags having attribute of empty value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and                 normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'PQ' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'PQ')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'xsi:type' attribute shall contain the value 'PQ'. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' attribute to find child tags having attribute of incorrect value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'PQ' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'PQ')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'value' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' attribute to find the 'width' or 'period' or 'numerator' or 'denominator' child tags that having 'value' attribute of empty value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@unit and normalize-space(@unit) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'value/width' tag 'unit' attribute shall contain a value. Check all 'cda:value' tags with 'xsi:type=PIVL_TS' or 'xsi:type=IVL_TS' attribute to find the 'width' or 'period' or numerator' or 'denominator' child tags that having 'value' attribute of empty value. Refer to sections of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@unit and normalize-space(@unit) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@unit) or (normalize-space(@unit) = '') or (@unit = 'd') or (@unit = 'wk') or (@unit = 'mo') or (@unit = 'a')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "value" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'unit' attribute shall be 'd' or 'wk' or 'mo' or 'a'. Check all 'value' tags to find the 'width' or 'period' or 'numerator' or 'denominator' child tags that have incorrect attribute value. Refer to section 0.0 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@unit) or (normalize-space(@unit) = '') or (@unit = 'd') or (@unit = 'wk') or (@unit = 'mo') or (@unit = 'a')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M73" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M73" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M74">
    <xsl:choose>
      <xsl:when test="cda:author" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author" - The 'author' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:author</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:author) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author" - The 'author' tag shall appear only once. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:author) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M74" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author" priority="3999" mode="M74">
    <xsl:if test="                 @typeCode and normalize-space(@typeCode) != '' and @typeCode != 'AUT'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author" - The 'author' tag 'typeCode' attribute shall contain the value 'AUT'. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @typeCode and normalize-space(@typeCode) != '' and @typeCode != 'AUT'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@typeCode and normalize-space(@typeCode) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author" - The 'author' tag 'typeCode' attribute shall contain a value. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@typeCode and normalize-space(@typeCode) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:assignedAuthor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Role" - The 'assignedAuthor' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:assignedAuthor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:assignedAuthor) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Role" - The 'assignedAuthor' tag shall appear only once. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedAuthor) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:time) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participation Period" - The 'time' tag shall appear only once. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:time) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:time" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participation Period" - The 'time' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:time</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M74" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:assignedAuthor" priority="3998" mode="M74">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Role" - The 'assignedAuthor' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Role" - The 'code' tag shall appear only once. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Role" - The 'code' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / id" - The 'id' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / id" - The 'id' tag shall appear only once. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:assignedPerson" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participant" - The 'assignedPerson' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:assignedPerson</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:assignedPerson) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participant" - The 'assignedPerson' tag shall appear only once. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedPerson) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:addr" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participant / Address" - The 'addr' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:addr</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:telecom" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participant / Electronic Communication Detail" - The 'telecom' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:telecom</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M74" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:code" priority="3997" mode="M74">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Role" - The 'code' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M74" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:id" priority="3996" mode="M74">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M74" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson" priority="3995" mode="M74">
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participant / Person or Organisation or Device / Person / Person Name" - The 'name' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:asEmployment" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participant / Person or Organisation or Device / Person / Employment Detail" - The 'asEmployment' tag is missing. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEmployment</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:asEmployment) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participant / Person or Organisation or Device / Person / Employment Detail" - The 'asEmployment' tag shall appear only once. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:asEmployment) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M74" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:time" priority="3994" mode="M74">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participation Period" - The 'time' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participation Period" - The 'time' tag 'value' attribute shall contain a value. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M74" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M74" />
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:addr" priority="4000" mode="M75">
    <xsl:choose>
      <xsl:when test="@nullFlavor or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 Document Author - "Document Author / Participant / Address / Australia or International Address / International Address / Country" - The 'country' tag shall contain the value 'Australia' or 'nullFlavor'. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@nullFlavor or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M75" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/cda:name" priority="3999" mode="M75">
    <xsl:choose>
      <xsl:when test="cda:family" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 Document Author - Participant / Person or Organisation or Device / Person / Person Name - The 'family' tag is missing. Refer to section section 6.1.2 and section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:family</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M75" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:time[@value]" priority="3998" mode="M75">
    <xsl:if test="(/cda:ClinicalDocument/cda:legalAuthenticator/cda:time[@value]) and (/cda:ClinicalDocument/cda:legalAuthenticator/cda:time/@value != /cda:ClinicalDocument/cda:author/cda:time/@value)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.2 DOCUMENT AUTHOR - "Document Author / Participation Period" - The 'time' tag 'value' attribute value shall be same as /cda:ClinicalDocument/cda:legalAuthenticator/cda:time/@value value. Refer to section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(/cda:ClinicalDocument/cda:legalAuthenticator/cda:time[@value]) and (/cda:ClinicalDocument/cda:legalAuthenticator/cda:time/@value != /cda:ClinicalDocument/cda:author/cda:time/@value)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M75" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M75" />
  <xsl:template match="ext:entitlement[(ext:code/@codeSystem = '1.2.36.1.2001.1001.101.104.16047') and ((ext:code/@code = '5') or (ext:code/@code = '6') or (ext:code/@code = '7'))]/ext:id" priority="4000" mode="M76">
    <xsl:choose>
      <xsl:when test="@root" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'root' attribute is missing. Check all related 'ext:id' tags to find the missing 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@root</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @root and                 normalize-space(@root) = ''                  ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'root' attribute shall contain a value. Check all related 'ext:id' tags to find the empty 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @root and                 normalize-space(@root) = ''                  </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @root and                 normalize-space(@root) != '' and                  @root != '2.16.840.1.113883.3.879.270091'                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'root' attribute shall contain the value '2.16.840.1.113883.3.879.270091'. Check all related 'ext:id' tags to find the incorrect 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @root and                 normalize-space(@root) != '' and                  @root != '2.16.840.1.113883.3.879.270091'                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @assigningAuthorityName and                 normalize-space(@assigningAuthorityName) = ''                  ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'assigningAuthorityName' attribute shall contain a value. Check all related 'ext:id' tags to find the empty 'assigningAuthorityName' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @assigningAuthorityName and                 normalize-space(@assigningAuthorityName) = ''                  </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@assigningAuthorityName) or normalize-space(@assigningAuthorityName) = '' or (contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'DVA')) or (contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'VETERAN'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'assigningAuthorityName' attribute shall contain "DVA" or "Veteran" as a part of its value. Check all related 'ext:id' tags to find the incorrect 'assigningAuthorityName' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@assigningAuthorityName) or normalize-space(@assigningAuthorityName) = '' or (contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'DVA')) or (contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'VETERAN'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@extension                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'extension' attribute is missing. Check all 'ext:id' tags to find the missing 'extension' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@extension                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@extension and normalize-space(@extension) = ''                  ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'extension' attribute shall contain a value. Check all related 'ext:id' tags to find the incorrect 'extension' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and normalize-space(@extension) = ''                  </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@extension and                 normalize-space(@extension) != '' and                 (string-length(@extension) != 8 and string-length(@extension) != 9)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'extension' attribute shall be a valid DVA file number. Check all related 'ext:id' tags to find the incorrect 'extension' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and                 normalize-space(@extension) != '' and                 (string-length(@extension) != 8 and string-length(@extension) != 9)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@extension and                 normalize-space(@extension) != '' and                 not(starts-with(@extension, 'N') or starts-with(@extension, 'V') or starts-with(@extension, 'Q') or starts-with(@extension, 'W') or starts-with(@extension, 'S') or starts-with(@extension, 'T'))                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'extension' attribute shall be a valid DVA file number. Check all related 'ext:id' tags to find the incorrect 'extension' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and                 normalize-space(@extension) != '' and                 not(starts-with(@extension, 'N') or starts-with(@extension, 'V') or starts-with(@extension, 'Q') or starts-with(@extension, 'W') or starts-with(@extension, 'S') or starts-with(@extension, 'T'))                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@extension and                 normalize-space(@extension) != '' and                  not(translate(substring(@extension,  2,  1), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwwxyz', '0000000000000000000000000000000000000000000000000000') = '0' and                    translate(substring(@extension,  3,  2), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwwxyz0123456789', '00000000000000000000000000000000000000000000000000000000000000') = '00' and                   translate(substring(@extension, 5, 4), '0123456789', '0000000000') = '0000')                  ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'extension' attribute shall be a valid DVA file number. Check all related 'ext:id' tags to find the incorrect 'extension' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and                 normalize-space(@extension) != '' and                  not(translate(substring(@extension,  2,  1), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwwxyz', '0000000000000000000000000000000000000000000000000000') = '0' and                    translate(substring(@extension,  3,  2), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwwxyz0123456789', '00000000000000000000000000000000000000000000000000000000000000') = '00' and                   translate(substring(@extension, 5, 4), '0123456789', '0000000000') = '0000')                  </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@extension and                 normalize-space(@extension) != '' and                 (string-length(@extension) = 9 and   not(translate(substring(@extension,  9,  1), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwwxyz', '0000000000000000000000000000000000000000000000000000') = '0'))                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'extension' attribute shall be a valid DVA file number. Check all related 'ext:id' tags to find the incorrect 'extension' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and                 normalize-space(@extension) != '' and                 (string-length(@extension) = 9 and   not(translate(substring(@extension,  9,  1), 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwwxyz', '0000000000000000000000000000000000000000000000000000') = '0'))                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@extension and                 normalize-space(@extension) != '' and                  substring(@extension,  2,  1) = '0'                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'extension' attribute shall be a valid DVA file number. Check all related 'ext:id' tags to find the incorrect 'extension' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and                 normalize-space(@extension) != '' and                  substring(@extension,  2,  1) = '0'                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@extension and                 normalize-space(@extension) != '' and                 (string-length(@extension) = 9 and  (substring(@extension,  9,  1) = '0'))                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Entitlement Number - check for "id" tag - The 'id' tag 'extension' attribute shall be a valid DVA file number. Check all related 'ext:id' tags to find the incorrect 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and                 normalize-space(@extension) != '' and                 (string-length(@extension) = 9 and  (substring(@extension,  9,  1) = '0'))                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M76" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M76" />
  <xsl:template match="cda:code | ext:code | cda:methodCode | ext:methodCode | ext:jobClassCode | ext:formCode | ext:completionCode | cda:confidentialityCode | cda:administrativeGenderCode" priority="4000" mode="M77">
    <xsl:choose>
      <xsl:when test="                 cda:originalText or (@code and @codeSystem) or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@code" attribute - The 'code' tag shall have at least the 'originalText' tag or the 'code and codeSystem' or the 'nullFlavor' attributes. Check all 'cda:code' tags to find the missing tag or attribute(s). Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 cda:originalText or (@code and @codeSystem) or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystem and normalize-space(@codeSystem) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@codeSystem" attribute - The 'code' tag 'codeSystem' attribute shall contain a value. Check all 'cda:code' tags to find the 'codeSystem' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystem and normalize-space(@codeSystem) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@codeSystem" attribute - The 'code' tag 'codeSystem' attribute shall contain an UUID or OID. Check all 'cda:code' tags to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@codeSystem" attribute - The 'code' tag 'codeSystem' attribute shall be a valid UUID. Check all 'cda:code' tags to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@codeSystem" attribute - The 'code' tag 'codeSystem' attribute shall be a valid OID. Check all 'cda:code' tags to find the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@nullFlavor" attribute - The 'code' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:code' tags 'nullFlavor' attributes to find the 'nullFlavor' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and                 normalize-space(@nullFlavor) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Coded_DataType_NullFlavor']/code[(@code = current()/@nullFlavor)])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@nullFlavor" attribute - The 'code' tag 'nullFlavor' attribute shall be as per FAQ Representing Coding in CDA Documents CDA CD DataType nullFlavors. Check all 'cda:code' tags to find the 'nullFlavor' attributes of incorrect value. Refer to the HL7 data types specification and section 2.1.1 of the FAQ Representing Coding in CDA Documents, and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and                 normalize-space(@nullFlavor) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Coded_DataType_NullFlavor']/code[(@code = current()/@nullFlavor)])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:originalText) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:originalText" - The 'originalText' tag shall appear only once. Check all 'cda:code' tags to find the duplicated 'originalText' child tag. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:originalText) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:originalText and normalize-space(cda:originalText) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:originalText" - The 'originalText' tag shall contain a value. Check all 'cda:code' tags to find the 'originalText' child tag have value missing. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:originalText and normalize-space(cda:originalText) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@code" attribute - The 'code' tag 'code' attribute shall contain a value. Check all 'cda:code' tags to find the 'code' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code != normalize-space(@code)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@code" attribute - The 'code' tag 'code' attribute shall not start or end with space. Check all 'cda:code' tags to find the 'code' attribute with incorrect value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code != normalize-space(@code)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@codeSystem) and @code">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@code" attribute - The 'code' tag 'code' attribute shall not be present if the corresponding 'codeSystem' attribute is missing. Check all 'cda:code' tags to find the incorrectly contained 'code' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@codeSystem) and @code</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@codeSystemName" attribute - The 'code' tag 'codeSystemName' attribute shall contain a value. Check all 'cda:code' tags to find the 'codeSystemName' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemVersion and normalize-space(@codeSystemVersion) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@codeSystemVersion" attribute - The 'code' tag 'codeSystemVersion' attribute shall contain a value. Check all 'cda:code' tags to find the 'codeSystemVersion' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemVersion and normalize-space(@codeSystemVersion) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@displayName" attribute - The 'code' tag 'displayName' attribute shall contain a value. Check all 'cda:code' tags to find the 'displayName' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/@displayName" attribute - The 'code' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:code' tags to find the incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:qualifier)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:qualifier" - The 'qualifier' tag shall not be present within 'code'. Check all 'cda:code' tags to find the incorrect child 'qualifier' tag. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:qualifier)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:code/cda:translation |                        ext:code/cda:translation |                        cda:methodCode/cda:translation |                        ext:methodCode/cda:translation |                        ext:jobClassCode/cda:translation" priority="3999" mode="M77">
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute is missing. Check all 'cda:code' tags to find the 'translation' child tag with missing 'codeSystem' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain a value. Check all 'cda:code' tags to find the 'translation' child tag 'codeSystem' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain an UUID or OID. Check all 'cda:code' tags to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 (contains(@codeSystem, '-') and not(contains(@codeSystem, '.'))) or                 (not(contains(@codeSystem, '-')) and contains(@codeSystem, '.'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall be a valid UUID. Check all 'cda:code' tags to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem, '-') and not(                 string-length(@codeSystem) = 36 and                 substring(@codeSystem,  9, 1) = '-' and substring(@codeSystem, 14, 1) = '-' and                 substring(@codeSystem, 19, 1) = '-' and substring(@codeSystem, 24, 1) = '-' and                 translate(substring(@codeSystem,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@codeSystem, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@codeSystem, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall be a valid OID. Check all 'cda:code' tags to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystem and                 normalize-space(@codeSystem) != '' and                 contains(@codeSystem,'.') and not(                 substring(@codeSystem, 1, 1) != '0' and                 substring(@codeSystem, 1, 1) != '.' and                 substring(@codeSystem, string-length(@codeSystem), 1) != '.' and                 number(translate(@codeSystem, '0123456789.', '00000000000')) = 0)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 not(parent::*/@codeSystem) or                 normalize-space(parent::*/@codeSystem) = '' or                 @codeSystem != parent::*/@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@codeSystem" attribute - The 'translation' tag 'codeSystem' attribute shall contain a value different from the codeSystem it translates from. Check all 'cda:code' tags to find the 'translation' child tag with the incorrect 'codeSystem' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or                 normalize-space(@codeSystem) = '' or                 not(parent::*/@codeSystem) or                 normalize-space(parent::*/@codeSystem) = '' or                 @codeSystem != parent::*/@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@code or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation" attributes - The 'translation' tag shall have at least the 'code' or the 'nullFlavor' attributes. Check all 'cda:code' tags to find the 'translation' child tag with the missing attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@nullFlavor" attribute - The 'translation' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:code' tags to find the 'translation' child tag 'nullFlavor' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'OTH'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@nullFlavor" attribute - The 'translation' tag 'nullFlavor' attribute shall contain the value 'OTH'. Check all 'cda:code' tags to find the 'translation' child tag 'nullFlavor' attribute of incorrect value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'OTH'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:originalText)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation" - The 'originalText' tag shall not be present within 'translation' tag. Check all 'cda:code' tags to find the 'translation' child tag containing 'originalText' tag. Refer to the HL7 data types specification and section 2.1.5 of the Implementation Guidance - Representing Coding in CDA Documents - Version 1.0 - 10 October 2011, and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:originalText)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation" - The 'translation' tag shall not be present within 'translation' tag. Check all 'cda:code' tags to find the 'translation' child tag with nested 'translation' tag. Refer to the HL7 data types specification and section 2.1.5 of the Implementation Guidance - Representing Coding in CDA Documents - Version 1.0 - 10 October 2011, and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@code and normalize-space(@code) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall contain a value. Check all 'cda:code' tags to find the 'translation' child tag 'code' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code != normalize-space(@code)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall not start or end with space. Check all 'cda:code' tags to find the 'translation' child tag 'code' attribute of incorrect value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code != normalize-space(@code)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@codeSystem) and @code">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@code" attribute - The 'translation' tag 'code' attribute shall not be present if the corresponding 'codeSystem' attribute is missing. Check all 'cda:code' tags to find the 'translation' child tag with incorrectly contained 'code' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@codeSystem) and @code</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@codeSystemName" attribute - The 'translation' tag 'codeSystemName' attribute shall contain a value. Check all 'cda:code' tags to find the 'translation' child tag 'codeSystemName' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@codeSystemVersion and normalize-space(@codeSystemVersion) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@codeSystemVersion" attribute - The 'translation' tag 'codeSystemVersion' attribute shall contain a value. Check all 'cda:code' tags to find the 'translation' child tag 'codeSystemVersion' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemVersion and normalize-space(@codeSystemVersion) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@displayName" attribute - The 'translation' tag 'displayName' attribute shall contain a value. Check all 'cda:code' tags to find the 'translation' child tag 'displayName' attribute of missing value. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="not(@code) and @displayName">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/@displayName" attribute - The 'translation' tag 'displayName' attribute shall not be present if the corresponding 'code' attribute is missing. Check all 'cda:code' tags to find the 'translation' child tag with incorrectly contained 'displayName' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">not(@code) and @displayName</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:qualifier)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "cda:code/cda:translation/cda:qualifier" - The 'qualifier' tag shall not be present within 'translation'. Check all 'cda:code' tags to find the 'translation' child tag with the incorrect child 'qualifier' tag. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:qualifier)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:code/cda:originalText |                        ext:code/cda:originalText |                        cda:methodCode/cda:originalText |                        ext:methodCode/cda:originalText |                        ext:jobClassCode/cda:originalText" priority="3998" mode="M77">
    <xsl:if test="count(cda:reference) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:code/cda:originalText' tag - The 'reference' tag shall appear only once. Check all 'cda:code/cda:originalText' tags to find the duplicated 'reference' tag. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:reference) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:reference and                 normalize-space(concat(text()[1], text()[2])) != '' and                 normalize-space(concat(text()[1], text()[2])) !=                 normalize-space(concat(ancestor::cda:component/cda:section/cda:text/text()[1],                                        ancestor::cda:component/cda:section/cda:text/text()[2]))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:code/cda:originalText' tag - The 'originalText' tag shall contain the value match to its corresponding narrative block text. Check all 'cda:code/cda:originalText' tags to find the corresponding narrative text mismatch. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:reference and                 normalize-space(concat(text()[1], text()[2])) != '' and                 normalize-space(concat(text()[1], text()[2])) !=                 normalize-space(concat(ancestor::cda:component/cda:section/cda:text/text()[1],                                        ancestor::cda:component/cda:section/cda:text/text()[2]))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:code/cda:originalText/cda:reference |                        ext:code/cda:originalText/cda:reference |                        cda:methodCode/cda:originalText/cda:reference |                        ext:methodCode/cda:originalText/cda:reference |                        ext:jobClassCode/cda:originalText/cda:reference" priority="3997" mode="M77">
    <xsl:choose>
      <xsl:when test="@value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:code/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute is missing. Check all 'cda:code/cda:originalText/cda:reference' tags to find the missing 'value' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or normalize-space(@value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:code/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute shall contain a value. Check all 'cda:code/cda:originalText/cda:reference' tags to find the empty 'value' attribute. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or normalize-space(@value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value) or                 normalize-space(@value) = '' or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:code/cda:originalText/cda:reference' tag - The narrative 'text/content/@ID' attribute corresponding to the 'reference' tag 'value' attribute is missing. Check all 'cda:code/cda:originalText/cda:reference' tags to find the missing corresponding narrative. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value) or                 normalize-space(@value) = '' or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value) or                 normalize-space(@value) = '' or                 not(ancestor::cda:component/cda:section/cda:text) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content/@ID) or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID = @value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">&gt;Error: Specialist Letter - Global Clinical Document check for 'cda:code/cda:originalText/cda:reference' tag - The 'reference' tag 'value' attribute shall contain the value match to its corresponding narrative block content 'ID' attribute. Check all 'cda:code/cda:originalText/cda:reference' tags to find the corresponding narrative content ID mismatch. Refer to the HL7 data types specification and section 8.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value) or                 normalize-space(@value) = '' or                 not(ancestor::cda:component/cda:section/cda:text) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content) or                 not(ancestor::cda:component/cda:section/cda:text//cda:content/@ID) or                 ancestor::cda:component/cda:section/cda:text//cda:content/@ID = @value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:component" priority="3996" mode="M77">
    <xsl:if test="cda:nonXMLBody">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - The 'nonXMLBody' tag shall not exist. Refer to section 3.4.2.1 of the Common_Conformance_Profile_for_Clinical_Documents.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:nonXMLBody</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:id | ext:id | cda:setId" priority="3995" mode="M77">
    <xsl:choose>
      <xsl:when test="@root or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag shall have at least 'root' or 'nullFlavor' attributes. Check all 'cda:id' tags to find the missing 'root' or 'nullFlavor' attributes. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@root or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@root and normalize-space(@root) =  ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute shall contain a value. Check all 'cda:id' tags 'root' attribute to find the missing value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@root and normalize-space(@root) =  ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 normalize-space(@root) = '' or                 (contains(@root, '-') and not(contains(@root, '.'))) or                 (not(contains(@root, '-')) and contains(@root, '.'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute shall contain an UUID or OID. Check all 'cda:id' tags to find the incorrect 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 normalize-space(@root) = '' or                 (contains(@root, '-') and not(contains(@root, '.'))) or                 (not(contains(@root, '-')) and contains(@root, '.'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @root and                 normalize-space(@root) != '' and                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute shall be a valid UUID. Check all 'cda:id' tags to find the incorrect 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @root and                 normalize-space(@root) != '' and                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @root and                 normalize-space(@root) != '' and                 contains(@root, '-') and                  (                 contains(@root, 'a') or                 contains(@root, 'b') or                 contains(@root, 'c') or                 contains(@root, 'd') or                 contains(@root, 'e') or                 contains(@root, 'f')                  ) and                 (                 contains(@root, 'A') or                 contains(@root, 'B') or                 contains(@root, 'C') or                 contains(@root, 'D') or                 contains(@root, 'E') or                 contains(@root, 'F')                  )                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute shall be a valid UUID. Check all 'cda:id' tags to find the incorrect 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @root and                 normalize-space(@root) != '' and                 contains(@root, '-') and                  (                 contains(@root, 'a') or                 contains(@root, 'b') or                 contains(@root, 'c') or                 contains(@root, 'd') or                 contains(@root, 'e') or                 contains(@root, 'f')                  ) and                 (                 contains(@root, 'A') or                 contains(@root, 'B') or                 contains(@root, 'C') or                 contains(@root, 'D') or                 contains(@root, 'E') or                 contains(@root, 'F')                  )                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @root and                 normalize-space(@root) != '' and                 contains(@root,'.') and                 substring(@root, 1, 1) != '.' and substring(@root, string-length(@root), 1) != '.' and                 number(translate(@root, '0123456789.', '00000000000')) = 0  and                 (contains(@root,'.00') or contains(@root,'.01') or contains(@root,'.02') or contains(@root,'.03') or contains(@root,'.04') or contains(@root,'.05') or contains(@root,'.06') or contains(@root,'.07') or contains(@root,'.08') or contains(@root,'.09'))                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute shall be a valid OID. Check all 'cda:id' tags to find the incorrect 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @root and                 normalize-space(@root) != '' and                 contains(@root,'.') and                 substring(@root, 1, 1) != '.' and substring(@root, string-length(@root), 1) != '.' and                 number(translate(@root, '0123456789.', '00000000000')) = 0  and                 (contains(@root,'.00') or contains(@root,'.01') or contains(@root,'.02') or contains(@root,'.03') or contains(@root,'.04') or contains(@root,'.05') or contains(@root,'.06') or contains(@root,'.07') or contains(@root,'.08') or contains(@root,'.09'))                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @root and                 normalize-space(@root) != '' and                 contains(@root,'.') and not(                 substring(@root, 1, 1) = '0' or substring(@root, 1, 1) = '1' or substring(@root, 1, 1) = '2')                  ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute shall be a valid OID. Check all 'cda:id' tags to find the incorrect 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @root and                 normalize-space(@root) != '' and                 contains(@root,'.') and not(                 substring(@root, 1, 1) = '0' or substring(@root, 1, 1) = '1' or substring(@root, 1, 1) = '2')                  </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @root and                 normalize-space(@root) != '' and                 contains(@root,'.') and (substring(@root, 1, 1) = '0' or substring(@root, 1, 1) = '1') and                 not(                 substring(@root, 2, 1) = '.' and                 substring(@root, string-length(@root), 1) != '.' and                 number(translate(@root, '0123456789.', '00000000000')) = 0 and                 number(translate(substring(@root, 3, 2), '0123456789', '0000000000')) = 0 and                 number(substring(@root, 3, 2)) &lt; 40 and                 (substring(@root, 4, 1) = '.'  or substring(@root, 5, 1) = '.'))                  ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute shall be a valid OID. Check all 'cda:id' tags to find the incorrect 'root' attribute. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @root and                 normalize-space(@root) != '' and                 contains(@root,'.') and (substring(@root, 1, 1) = '0' or substring(@root, 1, 1) = '1') and                 not(                 substring(@root, 2, 1) = '.' and                 substring(@root, string-length(@root), 1) != '.' and                 number(translate(@root, '0123456789.', '00000000000')) = 0 and                 number(translate(substring(@root, 3, 2), '0123456789', '0000000000')) = 0 and                 number(substring(@root, 3, 2)) &lt; 40 and                 (substring(@root, 4, 1) = '.'  or substring(@root, 5, 1) = '.'))                  </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 substring(@root, string-length(@root), 1) = '.' or                 number(translate(@root, '0123456789.', '00000000000')) != 0 or                 not(starts-with(@root, '1.2.36.1.2001.1003.0.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.1.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.10.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.20.80036')                 ) or (                     not(contains(substring-after(@root, '80036'), '.')) and                     string-length('80036') + string-length(substring-after(@root, '80036')) = 16                 ) or (                     contains(substring-after(@root, '80036'), '.') and                     string-length('80036') + string-length(substring-before(substring-after(@root, '80036'), '.')) = 16                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'root' attribute shall contain an OID for Health Identifier, which should be ended with a national 16 digits unique identification number. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 substring(@root, string-length(@root), 1) = '.' or                 number(translate(@root, '0123456789.', '00000000000')) != 0 or                 not(starts-with(@root, '1.2.36.1.2001.1003.0.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.1.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.10.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.20.80036')                 ) or (                     not(contains(substring-after(@root, '80036'), '.')) and                     string-length('80036') + string-length(substring-after(@root, '80036')) = 16                 ) or (                     contains(substring-after(@root, '80036'), '.') and                     string-length('80036') + string-length(substring-before(substring-after(@root, '80036'), '.')) = 16                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 substring(@root, string-length(@root), 1) = '.' or                 number(translate(@root, '0123456789.', '00000000000')) != 0 or                 not(starts-with(@root, '1.2.36.1.2001.1007.11.80036')) or                 (                     contains(substring-after(@root, '80036'), '.') and                     string-length('80036') + string-length(substring-before(substring-after(@root, '80036'), '.')) = 16                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'root' attribute shall contain an OID for repository, which should be ended with a national 16 digits unique identification number, followed by a '.' and 1 or more digits or additional nodes. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 substring(@root, string-length(@root), 1) = '.' or                 number(translate(@root, '0123456789.', '00000000000')) != 0 or                 not(starts-with(@root, '1.2.36.1.2001.1007.11.80036')) or                 (                     contains(substring-after(@root, '80036'), '.') and                     string-length('80036') + string-length(substring-before(substring-after(@root, '80036'), '.')) = 16                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 number(translate(@root, '0123456789.', '00000000000')) != 0 or                 not(starts-with(@root, '1.2.36.1.2001.1003.0.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.1.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.10.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.20.80036')                 ) or (                     not(contains(substring-after(@root, '80036'), '.')) and                     not(string-length('80036') + string-length(substring-after(@root, '80036')) = 16)                 ) or (                     contains(substring-after(@root, '80036'), '.') and (                     not(string-length(substring-after(substring-after(@root, '80036'), '.')) &gt; 0) or                     not(string-length('80036') + string-length(substring-before(substring-after(@root, '80036'), '.')) = 16))                 ) or (                 (                     number(substring(string(2 * 8), 1, 1)) + number(substring(string(2 * 8), 2, 1)) +                     0 +                     2 * 0 +                     3 +                     number(substring(string(2 * 6), 1, 1)) + number(substring(string(2 * 6), 2, 1)) +                     number(substring(substring-after(@root, '80036'), 1, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 2, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 2, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 2, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 3, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 4, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 4, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 4, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 5, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 6, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 6, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 6, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 7, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 8, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 8, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 8, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 9, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'),10, 1)), string-length(string(2 * substring(substring-after(@root, '80036'),10, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'),10, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 11, 1))                 ) mod 10 = 0)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'root' attribute shall have a valid Luhn check digit in the OID for Health Identifier. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 number(translate(@root, '0123456789.', '00000000000')) != 0 or                 not(starts-with(@root, '1.2.36.1.2001.1003.0.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.1.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.10.80036') or                     starts-with(@root, '1.2.36.1.2001.1007.20.80036')                 ) or (                     not(contains(substring-after(@root, '80036'), '.')) and                     not(string-length('80036') + string-length(substring-after(@root, '80036')) = 16)                 ) or (                     contains(substring-after(@root, '80036'), '.') and (                     not(string-length(substring-after(substring-after(@root, '80036'), '.')) &gt; 0) or                     not(string-length('80036') + string-length(substring-before(substring-after(@root, '80036'), '.')) = 16))                 ) or (                 (                     number(substring(string(2 * 8), 1, 1)) + number(substring(string(2 * 8), 2, 1)) +                     0 +                     2 * 0 +                     3 +                     number(substring(string(2 * 6), 1, 1)) + number(substring(string(2 * 6), 2, 1)) +                     number(substring(substring-after(@root, '80036'), 1, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 2, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 2, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 2, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 3, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 4, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 4, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 4, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 5, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 6, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 6, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 6, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 7, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 8, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 8, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 8, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 9, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'),10, 1)), string-length(string(2 * substring(substring-after(@root, '80036'),10, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'),10, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 11, 1))                 ) mod 10 = 0)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 number(translate(@root, '0123456789.', '00000000000')) != 0 or                 not(starts-with(@root, '1.2.36.1.2001.1007.11.80036')) or                 not(contains(substring-after(@root, '80036'), '.')                 ) or (                     contains(substring-after(@root, '80036'), '.') and (                     not(string-length(substring-after(substring-after(@root, '80036'), '.')) &gt; 0) or                     not(string-length('80036') + string-length(substring-before(substring-after(@root, '80036'), '.')) = 16))                 ) or (                 (                     number(substring(string(2 * 8), 1, 1)) + number(substring(string(2 * 8), 2, 1)) +                     0 +                     2 * 0 +                     3 +                     number(substring(string(2 * 6), 1, 1)) + number(substring(string(2 * 6), 2, 1)) +                     number(substring(substring-after(@root, '80036'), 1, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 2, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 2, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 2, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 3, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 4, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 4, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 4, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 5, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 6, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 6, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 6, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 7, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 8, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 8, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 8, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 9, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'),10, 1)), string-length(string(2 * substring(substring-after(@root, '80036'),10, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'),10, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 11, 1))                 ) mod 10 = 0)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'root' attribute shall have a valid Luhn check digit in the OID for Health Identifier. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 number(translate(@root, '0123456789.', '00000000000')) != 0 or                 not(starts-with(@root, '1.2.36.1.2001.1007.11.80036')) or                 not(contains(substring-after(@root, '80036'), '.')                 ) or (                     contains(substring-after(@root, '80036'), '.') and (                     not(string-length(substring-after(substring-after(@root, '80036'), '.')) &gt; 0) or                     not(string-length('80036') + string-length(substring-before(substring-after(@root, '80036'), '.')) = 16))                 ) or (                 (                     number(substring(string(2 * 8), 1, 1)) + number(substring(string(2 * 8), 2, 1)) +                     0 +                     2 * 0 +                     3 +                     number(substring(string(2 * 6), 1, 1)) + number(substring(string(2 * 6), 2, 1)) +                     number(substring(substring-after(@root, '80036'), 1, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 2, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 2, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 2, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 3, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 4, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 4, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 4, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 5, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 6, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 6, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 6, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 7, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'), 8, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 8, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'), 8, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 9, 1)) +                     number(substring(string(2 * substring(substring-after(@root, '80036'),10, 1)), string-length(string(2 * substring(substring-after(@root, '80036'),10, 1))), 1)) +                     number(substring(string(number(substring(substring-after(@root, '80036'),10, 1)) div 5), 1, 1)) +                     number(substring(substring-after(@root, '80036'), 11, 1))                 ) mod 10 = 0)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@root and                 substring(@root, string-length(@root), 1) != '.' and                 (                     (                         @root = '1.2.36.1.2001.1003.0' or (                         starts-with(@root, '1.2.36.1.2001.1003.0') and                         substring(@root, string-length('1.2.36.1.2001.1003.0') + 1, 1) = '.')                     ) or (                         @root = '1.2.36.1.2001.1007.1' or (                         starts-with(@root, '1.2.36.1.2001.1007.1') and                         substring(@root, string-length('1.2.36.1.2001.1007.1') + 1, 1) = '.')                     ) or (                         @root = '1.2.36.1.2001.1007.10' or (                         starts-with(@root, '1.2.36.1.2001.1007.10') and                         substring(@root, string-length('1.2.36.1.2001.1007.10') + 1, 1) = '.')                     ) or (                         @root = '1.2.36.1.2001.1007.20' or (                         starts-with(@root, '1.2.36.1.2001.1007.20') and                         substring(@root, string-length('1.2.36.1.2001.1007.20') + 1, 1) = '.')                     ) or (                         @root = '1.2.36.1.2001.1007.11' or (                         starts-with(@root, '1.2.36.1.2001.1007.11') and                         substring(@root, string-length('1.2.36.1.2001.1007.11') + 1, 1) = '.')                     )                 ) and                 @extension">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'extension' attribute shall not be present for HI or Repository identifiers. Check all 'cda:id' tags 'extension' attribute to find the prohibited extension attribute. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@root and                 substring(@root, string-length(@root), 1) != '.' and                 (                     (                         @root = '1.2.36.1.2001.1003.0' or (                         starts-with(@root, '1.2.36.1.2001.1003.0') and                         substring(@root, string-length('1.2.36.1.2001.1003.0') + 1, 1) = '.')                     ) or (                         @root = '1.2.36.1.2001.1007.1' or (                         starts-with(@root, '1.2.36.1.2001.1007.1') and                         substring(@root, string-length('1.2.36.1.2001.1007.1') + 1, 1) = '.')                     ) or (                         @root = '1.2.36.1.2001.1007.10' or (                         starts-with(@root, '1.2.36.1.2001.1007.10') and                         substring(@root, string-length('1.2.36.1.2001.1007.10') + 1, 1) = '.')                     ) or (                         @root = '1.2.36.1.2001.1007.20' or (                         starts-with(@root, '1.2.36.1.2001.1007.20') and                         substring(@root, string-length('1.2.36.1.2001.1007.20') + 1, 1) = '.')                     ) or (                         @root = '1.2.36.1.2001.1007.11' or (                         starts-with(@root, '1.2.36.1.2001.1007.11') and                         substring(@root, string-length('1.2.36.1.2001.1007.11') + 1, 1) = '.')                     )                 ) and                 @extension</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:id' tags 'nullFlavor' attribute to find the missing value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@extension and not(@root or @nullFlavor)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' OR 'nullFlavor' attribute is missing for the existence of 'extension' attribute. Check all 'cda:id' tags to find the 'extension' without 'root' OR 'nullFlavor' attributes. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and not(@root or @nullFlavor)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@extension and normalize-space(@extension) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'extension' attribute shall contain a value. Check all 'cda:id' tags 'extension' attribute to find the missing value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@extension and normalize-space(@extension) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@assigningAuthorityName and not(@root)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute is missing for the existence of 'assigningAuthorityName' attribute. Check all 'cda:id' tags to find the 'assigningAuthorityName' without 'root' attributes. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@assigningAuthorityName and not(@root)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@assigningAuthorityName and normalize-space(@assigningAuthorityName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'assigningAuthorityName' attribute shall contain a value. Check all 'cda:id' tags 'assigningAuthorityName' attribute to find the missing value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@assigningAuthorityName and normalize-space(@assigningAuthorityName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayable and not(@root)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'root' attribute is missing for the existence of 'displayable' attribute. Check all 'cda:id' tags to find the 'displayable' without 'root' attributes. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayable and not(@root)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayable and normalize-space(@displayable) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'displayable' attribute shall contain a value. Check all 'cda:id' tags 'displayable' attribute to find the missing value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayable and normalize-space(@displayable) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayable and                 normalize-space(@displayable) != '' and                 not(@displayable = 'true' or @displayable = 'false')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "id" tag - The 'id' tag 'displayable' attribute shall contain the value 'true' or 'false'. Check all 'cda:id' tags 'displayable' attribute to find the incorrect value. Refer to section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayable and                 normalize-space(@displayable) != '' and                 not(@displayable = 'true' or @displayable = 'false')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(starts-with(@root, '1.2.36.1.5001.1.0.7.1')) or                 (                     not( contains(substring-after(@root, '1.2.36.1.5001.1.0.7.1'), '.'))                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'root' attribute shall be '1.2.36.1.5001.1.0.7.1' OID for Medicare Card Number, with 'extension' attribute shall be a numeric 10 digits unique Medicare Card Number. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(starts-with(@root, '1.2.36.1.5001.1.0.7.1')) or                 (                     not( contains(substring-after(@root, '1.2.36.1.5001.1.0.7.1'), '.'))                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root='1.2.36.1.5001.1.0.7.1') or                 (                     number(@extension) = floor(@extension) and                     string-length(@extension) = 10                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall be a numeric 10 digits unique Medicare Card Number. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root='1.2.36.1.5001.1.0.7.1') or                 (                     number(@extension) = floor(@extension) and                     string-length(@extension) = 10                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root='1.2.36.1.5001.1.0.7.1') or                 (                     not(number(@extension) = floor(@extension)) or                     not(string-length(@extension) = 10)                 ) or                 (                 (@extension = '0000000000') or                 (@extension = '9999999999') or                 (@extension = '8888888888')                 ) or                 (                    ((1 *  number(substring(@extension, 1, 1))) +                     (3 *  number(substring(@extension, 2, 1))) +                     (7 *  number(substring(@extension, 3, 1))) +                     (9 *  number(substring(@extension, 4, 1))) +                     (1 *  number(substring(@extension, 5, 1))) +                     (3 *  number(substring(@extension, 6, 1))) +                     (7 *  number(substring(@extension, 7, 1))) +                     (9 *  number(substring(@extension, 8, 1)))                     ) mod 10 =                     (     number(substring(@extension, 9, 1)))                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall have a valid check digit in the Medicare Card Number. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root='1.2.36.1.5001.1.0.7.1') or                 (                     not(number(@extension) = floor(@extension)) or                     not(string-length(@extension) = 10)                 ) or                 (                 (@extension = '0000000000') or                 (@extension = '9999999999') or                 (@extension = '8888888888')                 ) or                 (                    ((1 *  number(substring(@extension, 1, 1))) +                     (3 *  number(substring(@extension, 2, 1))) +                     (7 *  number(substring(@extension, 3, 1))) +                     (9 *  number(substring(@extension, 4, 1))) +                     (1 *  number(substring(@extension, 5, 1))) +                     (3 *  number(substring(@extension, 6, 1))) +                     (7 *  number(substring(@extension, 7, 1))) +                     (9 *  number(substring(@extension, 8, 1)))                     ) mod 10 =                     (     number(substring(@extension, 9, 1)))                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                    (starts-with(@root, '1.2.36.1.5001.1.0.7.1')) or                 not(starts-with(@root, '1.2.36.1.5001.1.0.7'  )) or                 (                     not( contains(substring-after(@root, '1.2.36.1.5001.1.0.7'), '.'))                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'root' attribute shall be either '1.2.36.1.5001.1.0.7' (Individual Medicare Card Number) or '1.2.36.1.5001.1.0.7.1' (Medicare Card Number) OID, with 'extension' attribute shall be either a numeric 11 digits (Individual Medicare Card Number) or 10 digits (Medicare Card Number). Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                    (starts-with(@root, '1.2.36.1.5001.1.0.7.1')) or                 not(starts-with(@root, '1.2.36.1.5001.1.0.7'  )) or                 (                     not( contains(substring-after(@root, '1.2.36.1.5001.1.0.7'), '.'))                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root = '1.2.36.1.5001.1.0.7') or                 (                     number(@extension) = floor(@extension) and                     string-length(@extension) = 11                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall be a numeric 11 digits unique Individual Medicare Card Number. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root = '1.2.36.1.5001.1.0.7') or                 (                     number(@extension) = floor(@extension) and                     string-length(@extension) = 11                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root = '1.2.36.1.5001.1.0.7') or                 (                     not(number(@extension)) or                     not(string-length(@extension) = 11)                 ) or                 (                 (@extension = '00000000000') or                 (@extension = '00000000009') or                 (@extension = '99999999999') or                 (@extension = '88888888888')                 ) or                 (                    ((1 *  number(substring(@extension, 1, 1))) +                     (3 *  number(substring(@extension, 2, 1))) +                     (7 *  number(substring(@extension, 3, 1))) +                     (9 *  number(substring(@extension, 4, 1))) +                     (1 *  number(substring(@extension, 5, 1))) +                     (3 *  number(substring(@extension, 6, 1))) +                     (7 *  number(substring(@extension, 7, 1))) +                     (9 *  number(substring(@extension, 8, 1)))                     ) mod 10 =                     (     number(substring(@extension, 9, 1)))                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall have a valid check digit in the Individual Medicare Card Number. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root = '1.2.36.1.5001.1.0.7') or                 (                     not(number(@extension)) or                     not(string-length(@extension) = 11)                 ) or                 (                 (@extension = '00000000000') or                 (@extension = '00000000009') or                 (@extension = '99999999999') or                 (@extension = '88888888888')                 ) or                 (                    ((1 *  number(substring(@extension, 1, 1))) +                     (3 *  number(substring(@extension, 2, 1))) +                     (7 *  number(substring(@extension, 3, 1))) +                     (9 *  number(substring(@extension, 4, 1))) +                     (1 *  number(substring(@extension, 5, 1))) +                     (3 *  number(substring(@extension, 6, 1))) +                     (7 *  number(substring(@extension, 7, 1))) +                     (9 *  number(substring(@extension, 8, 1)))                     ) mod 10 =                     (     number(substring(@extension, 9, 1)))                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(starts-with(@root, '1.2.36.174030967.0.2')) or                 substring(substring-after(@root, '1.2.36.174030967.0.2'), 1, 1) = ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'root' attribute shall be an OID for prefix of Medicare Provider Number '1.2.36.174030967.0.2'. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(starts-with(@root, '1.2.36.174030967.0.2')) or                 substring(substring-after(@root, '1.2.36.174030967.0.2'), 1, 1) = ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root = '1.2.36.174030967.0.2') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                     string-length(@extension) = 8 and                     number(substring(@extension, 1, 6)) = floor(substring(@extension, 1, 6)) and                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Practice_Location']/code[@displayName = substring(current()/@extension, 7, 1)] and                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Check_Digit']/code[@displayName = substring(current()/@extension, 8, 1)]                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall be a Medicare Provider Number, which is a numeric 6 digits, right justified, zero filled Number, plus a PLV character, and a check digit character, issued by Medicare. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root = '1.2.36.174030967.0.2') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                     string-length(@extension) = 8 and                     number(substring(@extension, 1, 6)) = floor(substring(@extension, 1, 6)) and                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Practice_Location']/code[@displayName = substring(current()/@extension, 7, 1)] and                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Check_Digit']/code[@displayName = substring(current()/@extension, 8, 1)]                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root='1.2.36.174030967.0.2') or                 not(                     string-length(@extension) = 8 and                     number(substring(@extension, 1, 6)) = floor(substring(@extension, 1, 6)) and                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Practice_Location']/code[@displayName = substring(current()/@extension, 7, 1)] and                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Check_Digit']/code[@displayName = substring(current()/@extension, 8, 1)]                 ) or                 (                    ((number(substring(@extension, 1, 1)) * 3) +                     (number(substring(@extension, 2, 1)) * 5) +                     (number(substring(@extension, 3, 1)) * 8) +                     (number(substring(@extension, 4, 1)) * 4) +                     (number(substring(@extension, 5, 1)) * 2) +                     (number(substring(@extension, 6, 1)) * 1) +                     (number(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Practice_Location']/code[@displayName = substring(current()/@extension, 7, 1)]/@code) * 6)                     ) mod 11 =                     (number(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Check_Digit']/code[@displayName = substring(current()/@extension, 8, 1)]/@code))                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall have a valid check digit in the Medicare Provider Number. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root='1.2.36.174030967.0.2') or                 not(                     string-length(@extension) = 8 and                     number(substring(@extension, 1, 6)) = floor(substring(@extension, 1, 6)) and                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Practice_Location']/code[@displayName = substring(current()/@extension, 7, 1)] and                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Check_Digit']/code[@displayName = substring(current()/@extension, 8, 1)]                 ) or                 (                    ((number(substring(@extension, 1, 1)) * 3) +                     (number(substring(@extension, 2, 1)) * 5) +                     (number(substring(@extension, 3, 1)) * 8) +                     (number(substring(@extension, 4, 1)) * 4) +                     (number(substring(@extension, 5, 1)) * 2) +                     (number(substring(@extension, 6, 1)) * 1) +                     (number(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Practice_Location']/code[@displayName = substring(current()/@extension, 7, 1)]/@code) * 6)                     ) mod 11 =                     (number(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Medicare_Provider_Number_Check_Digit']/code[@displayName = substring(current()/@extension, 8, 1)]/@code))                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(starts-with(@root, '1.2.36.174030967.0.3')) or                 substring(substring-after(@root, '1.2.36.174030967.0.3'), 1, 1) = ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'root' attribute shall be an OID for prefix of Medicare Prescriber Number '1.2.36.174030967.0.3'. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(starts-with(@root, '1.2.36.174030967.0.3')) or                 substring(substring-after(@root, '1.2.36.174030967.0.3'), 1, 1) = ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root = '1.2.36.174030967.0.3') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                     string-length(normalize-space(@extension)) = 8                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall be a Medicare Prescriber Number, a numeric and alpha 8 characters issued by Medicare. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root = '1.2.36.174030967.0.3') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                     string-length(normalize-space(@extension)) = 8                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root = '1.2.36.174030967.0.3') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                 number(translate(substring(@extension, 1, 6),'0123456789', '00000000000')) = 0                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall be a Medicare Prescriber Number, starts with 6 numberic numbers. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root = '1.2.36.174030967.0.3') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                 number(translate(substring(@extension, 1, 6),'0123456789', '00000000000')) = 0                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root = '1.2.36.174030967.0.3') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                 number(translate(substring(@extension, 7, 1),'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '000000000000000000000000000000000000000000000000000000000000000')) = 0                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall be a Medicare Prescriber Number, the 7th character of @extension shall be either alpha or numeric. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root = '1.2.36.174030967.0.3') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                 number(translate(substring(@extension, 7, 1),'0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '000000000000000000000000000000000000000000000000000000000000000')) = 0                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root = '1.2.36.174030967.0.3') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                 number(translate(substring(@extension, 8, 1),'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '00000000000000000000000000000000000000000000000000000')) = 0                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall be a Medicare Prescriber Number, the 8th character of @extension shall be alpha. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root = '1.2.36.174030967.0.3') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                 number(translate(substring(@extension, 8, 1),'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', '00000000000000000000000000000000000000000000000000000')) = 0                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@root) or                 not(@root = '2.16.840.1.113883.3.879.270098') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                 string-length(@extension) = 10 and                 number(substring(@extension, 1, 9)) = floor(substring(@extension, 1, 9)) and                 normalize-space(translate(substring(@extension, 10, 1), 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')) = 'a'                 )" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'id' tag - The 'id' tag 'extension' attribute shall be a Centrelink customer reference number, shall be 10 character length, the first nine characters shall be numeric and the tenth character shall be alphaetical. Check all 'cda:id' or 'ext:id' tags to find the incorrect value. Refer to FAQ Vendor advice regarding OIDs in HL7 CDA documents, and section 8.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@root) or                 not(@root = '2.16.840.1.113883.3.879.270098') or                 not(@extension) or                 normalize-space(@extension) = '' or                 (                 string-length(@extension) = 10 and                 number(substring(@extension, 1, 9)) = floor(substring(@extension, 1, 9)) and                 normalize-space(translate(substring(@extension, 10, 1), 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ', 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa')) = 'a'                 )</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 (                 (@root = '1.2.36.1.5001.1.0.7') or                 (@root = '1.2.36.1.5001.1.0.7.1') or                 (@root = '1.2.36.1.5001.1.0.7.2') or                 (@root = '1.2.36.1.5001.1.0.7.3')                 ) and                  (@assigningAuthorityName) and                  not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'MEDICARE'))                                       ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:id' or 'ext:id' or 'cda:setId' tag - The 'cda:id' or 'ext:id' or 'cda:setId' tag 'assigningAuthorityName' attribute shall contain 'Medicare' as a part of its value if the 'root' attribute is '1.2.36.1.5001.1.0.7' or '1.2.36.1.5001.1.0.7.1' or '1.2.36.1.5001.1.0.7.2' or '1.2.36.1.5001.1.0.7.3'. Check all 'cda:id' or 'ext:id' or 'cda:setId' tag to find the incorrect attribute value. Refer to section 8.2 id of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (                 (@root = '1.2.36.1.5001.1.0.7') or                 (@root = '1.2.36.1.5001.1.0.7.1') or                 (@root = '1.2.36.1.5001.1.0.7.2') or                 (@root = '1.2.36.1.5001.1.0.7.3')                 ) and                  (@assigningAuthorityName) and                  not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'MEDICARE'))                                       </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (@root = '2.16.840.1.113883.3.879.270091') and                  (@assigningAuthorityName) and                 (not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'DVA')) and not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'), 'VETERAN')))                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:id' or 'ext:id' or 'cda:setId' tag - The 'cda:id' or 'ext:id' or 'cda:setId' tag 'assigningAuthorityName' attribute shall contain 'DVA' or 'Veteran' as a part of its value if the 'root' attribute is '2.16.840.1.113883.3.879.270091'. Check all 'cda:id' or 'ext:id' or 'cda:setId' tag to find the incorrect attribute value. Refer to section 8.2 id of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (@root = '2.16.840.1.113883.3.879.270091') and                  (@assigningAuthorityName) and                 (not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'DVA')) and not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'), 'VETERAN')))                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (@root = '2.16.840.1.113883.3.879.270098') and                  (@assigningAuthorityName) and                 not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'CENTRELINK'))                  ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:id' or 'ext:id' or 'cda:setId' tag - The 'cda:id' or 'ext:id' or 'cda:setId' tag 'assigningAuthorityName' attribute shall contain 'Centrelink' as a part of its value if the 'root' attribute is '2.16.840.1.113883.3.879.270098'. Check all 'cda:id' or 'ext:id' or 'cda:setId' tag to find the incorrect attribute value. Refer to section 8.2 id of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (@root = '2.16.840.1.113883.3.879.270098') and                  (@assigningAuthorityName) and                 not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'CENTRELINK'))                  </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (@root = '1.2.36.174030967.0.3') and                  (@assigningAuthorityName) and                  not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'PRESCRIBER'))                                       ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:id' or 'ext:id' or 'cda:setId' tag - The 'cda:id' or 'ext:id' or 'cda:setId' tag 'assigningAuthorityName' attribute shall contain 'prescriber' as a part of its value if the 'root' attribute is '1.2.36.174030967.0.3'. Check all 'cda:id' or 'ext:id' or 'cda:setId' tag to find the incorrect attribute value. Refer to section 8.2 id of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (@root = '1.2.36.174030967.0.3') and                  (@assigningAuthorityName) and                  not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'PRESCRIBER'))                                       </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (@root = '1.2.36.174030967.1.3.2.1') and                  (@assigningAuthorityName) and                  not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'PHARMACY'))                                       ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:id' or 'ext:id' or 'cda:setId' tag - The 'cda:id' or 'ext:id' or 'cda:setId' tag 'assigningAuthorityName' attribute shall contain 'pharmacy' as a part of its value if the 'root' attribute is '1.2.36.174030967.1.3.2.1'. Check all 'cda:id' or 'ext:id' or 'cda:setId' tag to find the incorrect attribute value. Refer to section 8.2 id of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (@root = '1.2.36.174030967.1.3.2.1') and                  (@assigningAuthorityName) and                  not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'PHARMACY'))                                       </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (@root = '1.2.36.174030967.0.2') and                  (@assigningAuthorityName) and                  not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'PROVIDER'))                                       ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:id' or 'ext:id' or 'cda:setId' tag - The 'cda:id' or 'ext:id' or 'cda:setId' tag 'assigningAuthorityName' attribute shall contain 'provider' as a part of its value if the 'root' attribute is '1.2.36.174030967.0.2'. Check all 'cda:id' or 'ext:id' or 'cda:setId' tag to find the incorrect attribute value. Refer to section 8.2 id of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (@root = '1.2.36.174030967.0.2') and                  (@assigningAuthorityName) and                  not(contains(translate(@assigningAuthorityName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'),'PROVIDER'))                                       </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="ext:time                                                                  |                        cda:birthTime                                                             |                        ext:birthTime                                                             |                        cda:deceasedTime                                                          |                        ext:deceasedTime                                                          |                         cda:effectiveTime[@xsi:type = 'TS'      or substring-after(normalize-space(@xsi:type), ':') = 'TS']                                         |                        cda:effectiveTime[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:low                             |                        cda:effectiveTime[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:high                            |                        cda:effectiveTime[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:center                          |                        cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:low                  |                        cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:high                 |                        cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:center               |                         cda:effectiveTime[parent::cda:act]/cda:low                                |                        cda:effectiveTime[parent::cda:act]/cda:high                               |                        cda:effectiveTime[parent::cda:act]/cda:center                             |                        cda:effectiveTime[parent::cda:encompassingEncounter]/cda:low              |                        cda:effectiveTime[parent::cda:encompassingEncounter]/cda:high             |                        cda:effectiveTime[parent::cda:encompassingEncounter]/cda:center           |                        cda:effectiveTime[parent::cda:encounter]/cda:low                          |                        cda:effectiveTime[parent::cda:encounter]/cda:high                         |                        cda:effectiveTime[parent::cda:encounter]/cda:center                       |                        ext:effectiveTime[parent::ext:entitlement]/cda:low                        |                        ext:effectiveTime[parent::ext:entitlement]/cda:high                       |                        ext:effectiveTime[parent::ext:entitlement]/cda:center                     |                        cda:effectiveTime[parent::cda:observation]/cda:low                        |                        cda:effectiveTime[parent::cda:observation]/cda:high                       |                        cda:effectiveTime[parent::cda:observation]/cda:center                     |                        cda:effectiveTime[parent::cda:procedure]/cda:low                          |                        cda:effectiveTime[parent::cda:procedure]/cda:high                         |                        cda:effectiveTime[parent::cda:procedure]/cda:center                       |                         cda:effectiveTime[not(@xsi:type) and parent::cda:substanceAdministration] |                        cda:effectiveTime[not(@xsi:type) and parent::cda:supply]                  |                        cda:effectiveTime[not(@xsi:type) and parent::cda:ClinicalDocument]        |                         cda:time[@xsi:type = 'TS'      or substring-after(normalize-space(@xsi:type), ':') = 'TS']                                                  |                        cda:time[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:low                                      |                        cda:time[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:high                                     |                        cda:time[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:center                                   |                        cda:time[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:low                           |                        cda:time[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:high                          |                        cda:time[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:center                        |                         cda:time[parent::cda:encounterParticipant]/cda:low                        |                        cda:time[parent::cda:encounterParticipant]/cda:high                       |                        cda:time[parent::cda:encounterParticipant]/cda:center                     |                        cda:time[parent::cda:participant]/cda:low                                 |                        cda:time[parent::cda:participant]/cda:high                                |                        cda:time[parent::cda:participant]/cda:center                              |                        cda:time[parent::cda:performer]/cda:low                                   |                        cda:time[parent::cda:performer]/cda:high                                  |                        cda:time[parent::cda:performer]/cda:center                                |                         cda:time[not(@xsi:type) and parent::cda:author]                           |                        cda:time[not(@xsi:type) and parent::cda:legalAuthenticator]               |                        cda:copyTime" priority="3994" mode="M77">
    <xsl:if test="                 name() != 'time' and substring-after(name(), ':') != 'time' and                 name() != 'effectiveTime' and substring-after(name(), ':') != 'effectiveTime' and                 @xsi:type and                 normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - The 'time' tag 'xsi:type' attribute shall contain a value. Check all 'time' tags to find the attribute of empty value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 name() != 'time' and substring-after(name(), ':') != 'time' and                 name() != 'effectiveTime' and substring-after(name(), ':') != 'effectiveTime' and                 @xsi:type and                 normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 name() != 'time' and substring-after(name(), ':') != 'time' and                 name() != 'effectiveTime' and substring-after(name(), ':') != 'effectiveTime' and                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'TS' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'TS')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - The 'time' tag 'xsi:type' attribute shall contain the value 'TS'. Check all 'time' tags to find the attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 name() != 'time' and substring-after(name(), ':') != 'time' and                 name() != 'effectiveTime' and substring-after(name(), ':') != 'effectiveTime' and                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'TS' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'TS')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 @value or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - The 'time' tag shall have at least the 'value' or 'nullFlavor' attribute. Check all 'time' tags to find the missing 'nullFlavor' or 'value' attribute. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 @value or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - The 'time' tag 'nullFlavor' attribute shall contain a value. Check all 'time' tags to find the 'nullFlavor' attribute of missing value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - The 'time' tag 'value' attribute shall contain a value. Check all 'time' tags to find the 'value' attribute of missing value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value                      and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - The 'time' tag 'value' attribute shall contain a timezone value. "Any time that is more specific than a day SHALL include a timezone". Check all 'time' tags to find the 'value' attribute of missing timezone value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value                      and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect DateTime - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect fraction of second - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect fraction of second - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect DateTime - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect DateTime - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect TimeZone - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect TimeZone - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect DateTime - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Year - The value for year must be more recent than 1900. The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Month - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Date - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Month - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Date - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Date - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Hour - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Minute - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Second - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:effectiveTime[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']                                     |                        cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase                          |                         cda:effectiveTime[not(@xsi:type) and parent::cda:act]                     |                        cda:effectiveTime[not(@xsi:type) and parent::cda:encompassingEncounter]   |                        cda:effectiveTime[not(@xsi:type) and parent::cda:encounter]               |                        ext:effectiveTime[not(@xsi:type) and parent::ext:entitlement]             |                        cda:effectiveTime[not(@xsi:type) and parent::cda:observation]             |                        cda:effectiveTime[not(@xsi:type) and parent::cda:procedure]               |                         cda:time[not(@xsi:type) and parent::cda:encounterParticipant]             |                        cda:time[not(@xsi:type) and parent::cda:participant]                      |                        cda:time[not(@xsi:type) and parent::cda:performer]" priority="3993" mode="M77">
    <xsl:choose>
      <xsl:when test="                 @value or cda:center or cda:low or cda:high or cda:width or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'effectiveTime' tag shall have at least the 'value' or 'nullFlavor' attribute or 'low' or 'high' or 'center' or 'width' child tag. Check all 'effectiveTime' tags to find the missing 'nullFlavor' or 'value' attribute or 'low' or 'high' or 'center' or 'width' child tag. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 @value or cda:center or cda:low or cda:high or cda:width or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 name() != 'effectiveTime' and substring-after(name(), ':') != 'effectiveTime' and                 @xsi:type and                 normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'effectiveTime' tag 'xsi:type' attribute shall contain a value. Check all 'effectiveTime' tags to find the attribute of empty value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 name() != 'effectiveTime' and substring-after(name(), ':') != 'effectiveTime' and                 @xsi:type and                 normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 name() != 'effectiveTime' and substring-after(name(), ':') != 'effectiveTime' and                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'IVL_TS' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'effectiveTime' tag 'xsi:type' attribute shall contain the value 'IVL_TS'. Check all 'effectiveTime' tags to find the attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 name() != 'effectiveTime' and substring-after(name(), ':') != 'effectiveTime' and                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'IVL_TS' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'effectiveTime' tag 'value' attribute shall contain a value. Check all 'effectiveTime' tags to find the missing attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value                and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'effectiveTime' tag 'value' attribute shall contain a timezone value. "Any time that is more specific than a day SHALL include a timezone". Check all 'effectiveTime' tags to find the 'value' attribute of missing timezone value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value                and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect DateTime - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect fraction of second - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect fraction of second - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect DateTime - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect DateTime - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect TimeZone - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect TimeZone - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect DateTime - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Year - The value for year must be more recent than 1900. The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Month - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Date - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Month - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Date - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Date - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Hour - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Minute - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - Incorrect Second - The 'effectiveTime' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'effectiveTime' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:low) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'low' tag shall appear only once. Check all 'effectiveTime' tags to find the duplicate 'low' child tag. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:low) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:high) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'high' tag shall appear only once. Check all 'effectiveTime' tags to find the duplicate 'high' child tag. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:high) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:center) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'center' tag shall appear only once. Check all 'effectiveTime' tags to find the duplicate 'center' child tag. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:center) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:width) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'width' tag shall appear only once. Check all 'effectiveTime' tags to find the duplicate 'width' child tag. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:width) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:center and (cda:low or cda:high)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'effectiveTime' tag shall have 'center' or 'low and/or high' tag but not both. Check all 'effectiveTime' tags to find the incorrect use of 'center' child tag. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:center and (cda:low or cda:high)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value,'.')           and                 contains(cda:high/@value, '.')         and                 contains(cda:low/@value,'+')           and                 contains(cda:high/@value, '+')         and                 (number(substring-before(cda:low/@value,'.')) +                 number(substring-after(substring-before(cda:low/@value,'+'),'.')) &gt;                 number(substring-before(cda:high/@value,'.')) +                 number(substring-after(substring-before(cda:high/@value,'+'),'.')))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'low' tag 'value' attribute shall be a value less than than the 'high' tag 'value' attribute. Check all 'effectiveTime' tags to find the 'low' and 'high' child tags having incorrect attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value,'.')           and                 contains(cda:high/@value, '.')         and                 contains(cda:low/@value,'+')           and                 contains(cda:high/@value, '+')         and                 (number(substring-before(cda:low/@value,'.')) +                 number(substring-after(substring-before(cda:low/@value,'+'),'.')) &gt;                 number(substring-before(cda:high/@value,'.')) +                 number(substring-after(substring-before(cda:high/@value,'+'),'.')))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value,'.')           and                 contains(cda:high/@value, '.')         and                 contains(cda:low/@value,'-')           and                 contains(cda:high/@value, '-')         and                 (number(substring-before(cda:low/@value,'.')) +                 number(substring-after(substring-before(cda:low/@value,'-'),'.')) &gt;                 number(substring-before(cda:high/@value,'.')) +                 number(substring-after(substring-before(cda:high/@value,'-'),'.')))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'low' tag 'value' attribute shall contain a value less than than the 'high' tag 'value' attribute. Check all 'effectiveTime' tags to find the 'low' and 'high' child tags having incorrect attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value,'.')           and                 contains(cda:high/@value, '.')         and                 contains(cda:low/@value,'-')           and                 contains(cda:high/@value, '-')         and                 (number(substring-before(cda:low/@value,'.')) +                 number(substring-after(substring-before(cda:low/@value,'-'),'.')) &gt;                 number(substring-before(cda:high/@value,'.')) +                 number(substring-after(substring-before(cda:high/@value,'-'),'.')))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value, '+')          and                 contains(cda:high/@value,'+')          and                 (number(substring-before(cda:low/@value,'+')) &gt; number(substring-before(cda:high/@value,'+')))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'low' tag 'value' attribute shall contain a value less than than the 'high' tag 'value' attribute. Check all 'effectiveTime' tags to find the 'low' and 'high' child tags having incorrect attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value, '+')          and                 contains(cda:high/@value,'+')          and                 (number(substring-before(cda:low/@value,'+')) &gt; number(substring-before(cda:high/@value,'+')))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value, '-')          and                 contains(cda:high/@value,'-')          and                 (number(substring-before(cda:low/@value,'-')) &gt; number(substring-before(cda:high/@value,'-')))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'low' tag 'value' attribute shall contain a value less than than the 'high' tag 'value' attribute. Check all 'effectiveTime' tags to find the 'low' and 'high' child tags having incorrect attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 contains(cda:low/@value, '-')          and                 contains(cda:high/@value,'-')          and                 (number(substring-before(cda:low/@value,'-')) &gt; number(substring-before(cda:high/@value,'-')))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 not(contains(cda:low/@value, '+'))     and                 not(contains(cda:high/@value,'+'))     and                 not(contains(cda:low/@value, '-'))     and                 not(contains(cda:high/@value,'-'))     and                 (number(cda:low/@value) &gt; number(cda:high/@value))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'low' tag 'value' attribute shall contain a value less than than the 'high' tag 'value' attribute. Check all 'effectiveTime' tags to find the 'low' and 'high' child tags having incorrect attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:low  and cda:low/@value            and                 cda:high and cda:high/@value           and                 normalize-space(cda:low/@value)  != '' and                 normalize-space(cda:high/@value) != '' and                 not(contains(cda:low/@value, '+'))     and                 not(contains(cda:high/@value,'+'))     and                 not(contains(cda:low/@value, '-'))     and                 not(contains(cda:high/@value,'-'))     and                 (number(cda:low/@value) &gt; number(cda:high/@value))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']" priority="3992" mode="M77">
    <xsl:choose>
      <xsl:when test="                 @value or @nullFlavor or cda:frequency or cda:period or cda:phase" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - The 'time' tag shall have at least the 'value' or 'nullFlavor' attribute or 'frequency' or 'period' or 'phase' child tag. Check all 'time' tags, or frequency' or 'period' or 'phase' child tag. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 @value or @nullFlavor or cda:frequency or cda:period or cda:phase</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'effectiveTime' tag 'value' attribute shall contain a value. Check all 'effectiveTime' tags to find the missing attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value                and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'effectiveTime' tag 'value' attribute shall contain a timezone value. "Any time that is more specific than a day SHALL include a timezone". Check all 'effectiveTime' tags to find the 'value' attribute of missing timezone value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value                and                 string-length(@value) &gt; 8   and                 not(contains(@value,'+'))   and not(contains(@value,'-'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect DateTime - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(@value,'.'))) != string(number(@value))) and                 (string-length(substring-before(@value,'.')) = 14))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect fraction of second - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'+'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'+')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect fraction of second - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 not(contains(@value,'.'))    or                 ((string(number(substring-before(substring-after(@value,'.'),'-'))) != string(number(@value))) and                 (string-length(substring-before(substring-after(@value,'.'),'-')) = 4))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect DateTime - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'+'))    or                 ((string(number(substring-before(@value,'+'))) != string(number(@value))) and                 (string-length(substring-before(@value,'+')) &gt; 11) and                 (string-length(substring-before(@value,'+')) &lt; 15) and                 (string-length(substring-before(@value,'+')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect DateTime - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 not(contains(@value,'-'))    or                 ((string(number(substring-before(@value,'-'))) != string(number(@value))) and                 (string-length(substring-before(@value,'-')) &gt; 11) and                 (string-length(substring-before(@value,'-')) &lt; 15) and                 (string-length(substring-before(@value,'-')) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect TimeZone - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'+'))    or                 ((string(number(substring-after(@value,'+'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'+')) = 2) or (string-length(substring-after(@value,'+')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect TimeZone - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 not(contains(@value,'-'))    or                 ((string(number(substring-after(@value,'-'))) != string(number(@value))) and                 ((string-length(substring-after(@value,'-')) = 2) or (string-length(substring-after(@value,'-')) = 4)))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect DateTime - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 contains(@value,'.')         or                 contains(@value,'+')         or                 contains(@value,'-')         or                 ((string(number(@value)) != string(number('a'))) and                 (string-length(@value) &gt;= 4) and                 (string-length(@value) mod 2 = 0))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Year - The value for year must be more recent than 1900. The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 number(substring(@value,1,2)) &gt;= 19                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Month - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(@value) &lt; 5 or                 ((number(substring(@value,5,2)) &gt;= 1) and                 (number(substring(@value,5,2)) &lt; 13))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Date - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 32))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Month - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 2     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 31))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Date - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) != 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 30))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Date - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                           or                 normalize-space(@value) = ''          or                 string-length(@value) &lt; 7          or                 number(substring(@value,5,2)) = 1     or                 number(substring(@value,5,2)) = 3     or                 number(substring(@value,5,2)) = 4     or                 number(substring(@value,5,2)) = 5     or                 number(substring(@value,5,2)) = 6     or                 number(substring(@value,5,2)) = 7     or                 number(substring(@value,5,2)) = 8     or                 number(substring(@value,5,2)) = 9     or                 number(substring(@value,5,2)) = 10    or                 number(substring(@value,5,2)) = 11    or                 number(substring(@value,5,2)) = 12    or                 number(substring(@value,5,2)) &gt; 12    or                 (number(substring(@value,1,4)) mod 4) = 0 or                 ((number(substring(@value,7,2)) &gt;= 1) and                 (number(substring(@value,7,2)) &lt; 29))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Hour - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 9 or                 ((number(substring(@value,9,2)) &gt;= 0) and                 (number(substring(@value,9,2)) &lt; 24))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Minute - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 11 or                 ((number(substring(@value,11,2)) &gt;= 0) and                 (number(substring(@value,11,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "time" tag - Incorrect Second - The 'time' tag 'value' attribute shall be a number formatted as 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Check all 'time' tags to find the 'value' attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value)                  or                 normalize-space(@value) = '' or                 string-length(substring-before(translate(@value, '-', '+'),'+')) &lt; 13 or                 ((number(substring(@value,13,2)) &gt;= 0) and                 (number(substring(@value,13,2)) &lt; 60))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:effectiveTime[@xsi:type = 'IVL_TS'  or substring-after(normalize-space(@xsi:type), ':') = 'IVL_TS']/cda:width                          |                        cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:phase/cda:width               |                        cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:period                        |                        cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:frequency/cda:numerator       |                        cda:effectiveTime[@xsi:type = 'PIVL_TS' or substring-after(normalize-space(@xsi:type), ':') = 'PIVL_TS']/cda:frequency/cda:denominator     |                         cda:effectiveTime[parent::cda:act]/cda:width                             |                        cda:effectiveTime[parent::cda:encompassingEncounter]/cda:width           |                        cda:effectiveTime[parent::cda:encounter]/cda:width                       |                        ext:effectiveTime[parent::ext:entitlement]/cda:width                     |                        cda:effectiveTime[parent::cda:observation]/cda:width                     |                        cda:effectiveTime[parent::cda:procedure]/cda:width                       |                         cda:time[parent::cda:encounterParticipant]/cda:width                     |                        cda:time[parent::cda:participant]/cda:width                              |                        cda:time[parent::cda:performer]/cda:width" priority="3991" mode="M77">
    <xsl:if test="                 @xsi:type and                 normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'xsi:type' attribute shall contain a value. Check all 'effectiveTime' tags to find child tags having attribute of empty value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and                 normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'PQ' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'PQ')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'xsi:type' attribute shall contain the value 'PQ'. Check all 'effectiveTime' tags to find child tags having attribute of incorrect value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @xsi:type and                 normalize-space(@xsi:type) != '' and                 normalize-space(@xsi:type) != 'PQ' and                 not(substring-after(normalize-space(@xsi:type), ':') = 'PQ')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and normalize-space(@value) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'value' attribute shall contain a value. Check all 'effectiveTime' tags to find the 'width' or 'period' or 'numerator' or 'denominator' child tags that have empty attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@unit and normalize-space(@unit) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'unit' attribute shall contain a value. Check all 'effectiveTime' tags to find the 'width' or 'period' or 'numerator' or 'denominator' child tags that have empty attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@unit and normalize-space(@unit) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@unit) or (normalize-space(@unit) = '') or (@unit = 'd') or (@unit = 'wk') or (@unit = 'mo') or (@unit = 'a')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "effectiveTime" tag - The 'width' or 'period' or 'numerator' or 'denominator' tag 'unit' attribute shall be 'd' or 'wk' or 'mo' or 'a'. Check all 'effectiveTime' tags to find the 'width' or 'period' or 'numerator' or 'denominator' child tags that have incorrect attribute value. Refer to section 8.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@unit) or (normalize-space(@unit) = '') or (@unit = 'd') or (@unit = 'wk') or (@unit = 'mo') or (@unit = 'a')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="ext:asEntityIdentifier" priority="3990" mode="M77">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier" tag - The 'ext:asEntityIdentifier' tag 'classCode' attribute is missing. Check all 'ext:asEntityIdentifier' tags to find the missing 'classCode' attribute. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier" tag - The 'ext:asEntityIdentifier' tag 'classCode' attribute shall contain a value. Check all 'ext:asEntityIdentifier' tags to find the missing 'classCode' attribute. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or                 normalize-space(@classCode) = '' or                 @classCode='IDENT'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier" tag - The 'ext:asEntityIdentifier' tag 'classCode' attribute shall be 'IDENT'. Check all 'ext:asEntityIdentifier' tags to find the incorrect 'classCode' attribute. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or                 normalize-space(@classCode) = '' or                 @classCode='IDENT'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier/ext:id" tag - The 'ext:id' tag is missing. Check all "ext:asEntityIdentifier' tags to find the missing 'id' tag. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'ext:asEntityIdentifier/ext:id' tag - The 'id' tag shall appear only once. Check all 'ext:asEntityIdentifier' tags to find the duplicate 'id' tag. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 ext:id and                 ext:id/@root and                 normalize-space(ext:id/@root) != '' and                 not(contains(ext:id/@root,'.'))                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier/ext:id" tag - The 'id' tag 'root' attribute shall be a valid OID. Check all 'ext:asEntityIdentifier/ext:id' tags to find the incorrect 'root' attribute. Refer to section 8.4 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 ext:id and                 ext:id/@root and                 normalize-space(ext:id/@root) != '' and                 not(contains(ext:id/@root,'.'))                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'ext:asEntityIdentifier/ext:code' tag - The 'ext:code' tag shall appear only once. Check all 'ext:asEntityIdentifier' tag to find the duplicate 'code' tag. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:assigningGeographicArea) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'ext:asEntityIdentifier/ext:assigningGeographicArea' tag - The 'assigningGeographicArea' tag shall appear only once. Check all 'ext:assigningGeographicArea' tags to find the duplicate 'assigningGeographicArea' tag. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:assigningGeographicArea) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="ext:asEntityIdentifier/ext:assigningGeographicArea" priority="3989" mode="M77">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier/ext:assigningGeographicArea" tag - The 'assigningGeographicArea' tag 'classCode' attribute is missing. Check all 'ext:asEntityIdentifier/ext:assigningGeographicArea' tags to find the missing 'classCode' attribute. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier/ext:assigningGeographicArea" tag - The 'assigningGeographicArea' tag 'classCode' attribute shall contain a value. Check all 'ext:asEntityIdentifier/ext:assigningGeographicArea' tags to find the missing 'classCode' attribute. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or                 normalize-space(@classCode) = '' or                 @classCode='PLC'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier/ext:assigningGeographicArea" tag - The 'assigningGeographicArea' tag 'classCode' attribute shall be 'PLC'. Check all 'ext:asEntityIdentifier/ext:assigningGeographicArea' tags to find the incorrect 'classCode' attribute. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or                 normalize-space(@classCode) = '' or                 @classCode='PLC'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="ext:name and normalize-space(ext:name) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier/ext:assigningGeographicArea" tag - The 'name' tag shall contain a value. Check all 'ext:name' tag to find the missing value. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">ext:name and normalize-space(ext:name) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 ext:name and                 normalize-space(ext:name) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'AS_5017-2006_Health_Care_Client_Identifier_Geographic_Area']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/ext:name, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "ext:asEntityIdentifier/ext:assigningGeographicArea" tag - The 'name' tag shall be as per AS 5017-2006: Health Care Client Identifier Geographic Area. It shall be the range and extent that the identifier applies to the object with which it is associated that is populated directly from the geographic area. This shall NOT be used for machine readability purposes. Check all 'ext:name' tag to find the incorrect value. Refer to section 8.4 Entity Identifier of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 ext:name and                 normalize-space(ext:name) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'AS_5017-2006_Health_Care_Client_Identifier_Geographic_Area']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/ext:name, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:name[not(                       ancestor::cda:manufacturedMaterial or                       ancestor::cda:product or                       ancestor::cda:receivedOrganization or                       ancestor::cda:representedOrganization or                       ancestor::cda:representedCustodianOrganization or                       ancestor::cda:scopingOrganization or                       ancestor::cda:serviceProviderOrganization or                       ancestor::cda:targetSiteCode or                       ancestor::ext:employerOrganization)]" priority="3988" mode="M77">
    <xsl:if test="count(cda:family) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'family' tag shall appear only once. Check all 'cda:name' tags to find the duplicate 'family' child tag. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:family) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:family and not(cda:family[@nullFlavor]) and normalize-space(cda:family) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'family' tag shall contain a value or 'nullFlavor' attribute. Check all 'cda:name/cda:family' tags to find the missing value. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:family and not(cda:family[@nullFlavor]) and normalize-space(cda:family) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:family and normalize-space(cda:family) != '' and cda:family[@nullFlavor]">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'family' tag shall contain a value or 'nullFlavor' attribute but not both. Check all 'cda:name/cda:family' tags to find the missing value. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:family and normalize-space(cda:family) != '' and cda:family[@nullFlavor]</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:family and normalize-space(cda:family) = '' and cda:family[@nullFlavor] and cda:family[normalize-space(@nullFlavor) = '']">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'family' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:name/cda:family' tags to find the missing value. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:family and normalize-space(cda:family) = '' and cda:family[@nullFlavor] and cda:family[normalize-space(@nullFlavor) = '']</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:prefix and normalize-space(cda:prefix ) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'prefix' tag shall contain a value. Check all 'cda:name/cda:prefix' tags to find the missing value. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:prefix and normalize-space(cda:prefix ) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:given and normalize-space(cda:given) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'given' tag shall contain a value. Check all 'cda:name/cda:given' tags to find the missing value. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:given and normalize-space(cda:given) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:suffix and normalize-space(cda:suffix) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'suffix' tag shall contain a value. Check all 'cda:name/cda:suffix' tags to find the missing value. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:suffix and normalize-space(cda:suffix) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@use and                 normalize-space(@use) != '' and                 not(contains(@use, ' ')) and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                     (@code = (current()/@use)) or                     (@alternativeCode = (current()/@use)) or                     (@hl7Code  = (current()/@use))                 ])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'name' tag 'use' attribute shall be coded as per AS 5017-2006: Health Care Client Name Usage. Check all 'cda:name' tags to find the incorrect 'use' attribute. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@use and                 normalize-space(@use) != '' and                 not(contains(@use, ' ')) and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                     (@code = (current()/@use)) or                     (@alternativeCode = (current()/@use)) or                     (@hl7Code  = (current()/@use))                 ])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and                 normalize-space(@use) != '' and                 contains(@use, ' ') and                 not(contains(substring-after(@use, ' '), ' ')) and (                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-before(current()/@use,' ')) or                         (@alternativeCode = substring-before(current()/@use,' ')) or                         (@hl7Code = substring-before(current()/@use,' '))                     ]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-after(current()/@use,' ')) or                         (@alternativeCode = substring-after(current()/@use,' ')) or                         (@hl7Code = substring-after(current()/@use,' '))                     ])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'name' tag 'use' attribute shall be coded as per AS 5017-2006: Health Care Client Name Usage. Check all 'cda:name' tags to find the incorrect 'use' attribute. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and                 normalize-space(@use) != '' and                 contains(@use, ' ') and                 not(contains(substring-after(@use, ' '), ' ')) and (                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-before(current()/@use,' ')) or                         (@alternativeCode = substring-before(current()/@use,' ')) or                         (@hl7Code = substring-before(current()/@use,' '))                     ]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-after(current()/@use,' ')) or                         (@alternativeCode = substring-after(current()/@use,' ')) or                         (@hl7Code = substring-after(current()/@use,' '))                     ])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and                 normalize-space(@use) != '' and                 contains(@use, ' ') and                 not(contains(substring-after(substring-after(@use, ' '), ' '), ' ')) and (                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-before(current()/@use,' ')) or                         (@alternativeCode = substring-before(current()/@use,' ')) or                         (@hl7Code = substring-before(current()/@use,' '))                     ]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-before(substring-after(current()/@use,' '),' ')) or                         (@alternativeCode = substring-before(substring-after(current()/@use,' '),' ')) or                         (@hl7Code = substring-before(substring-after(current()/@use,' '),' '))                     ]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-after(substring-after(current()/@use,' '),' ')) or                         (@alternativeCode = substring-after(substring-after(current()/@use,' '),' ')) or                         (@hl7Code = substring-after(substring-after(current()/@use,' '),' '))                     ])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'name' tag 'use' attribute shall be coded as per AS 5017-2006: Health Care Client Name Usage. Check all 'cda:name' tags to find the incorrect 'use' attribute. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and                 normalize-space(@use) != '' and                 contains(@use, ' ') and                 not(contains(substring-after(substring-after(@use, ' '), ' '), ' ')) and (                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-before(current()/@use,' ')) or                         (@alternativeCode = substring-before(current()/@use,' ')) or                         (@hl7Code = substring-before(current()/@use,' '))                     ]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-before(substring-after(current()/@use,' '),' ')) or                         (@alternativeCode = substring-before(substring-after(current()/@use,' '),' ')) or                         (@hl7Code = substring-before(substring-after(current()/@use,' '),' '))                     ]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Name_Usage']/code[                         (@code = substring-after(substring-after(current()/@use,' '),' ')) or                         (@alternativeCode = substring-after(substring-after(current()/@use,' '),' ')) or                         (@hl7Code = substring-after(substring-after(current()/@use,' '),' '))                     ])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:addr[not(ancestor::cda:birthplace)] | ext:addr" priority="3987" mode="M77">
    <xsl:choose>
      <xsl:when test="                 normalize-space(concat(text()[1], text()[2], text()[3], text()[4], text()[5],                                        text()[6], text()[7], text()[8], text()[9], text()[10],                                        text()[11], text()[12], text()[13], text()[14])) = ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - The 'addr' tag shall not contain an immediate text value. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect tag. Refer to section 8.6 Address of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 normalize-space(concat(text()[1], text()[2], text()[3], text()[4], text()[5],                                        text()[6], text()[7], text()[8], text()[9], text()[10],                                        text()[11], text()[12], text()[13], text()[14])) = ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="child::* and @nullFlavor">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - The 'addr' tag shall not have both child tags or the 'nullFlavor' attribute. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect tag. Refer to section 8.6 Address of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">child::* and @nullFlavor</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 @nullFlavor             or                 cda:streetAddressLine   or                 cda:unitType            or                 cda:unitID              or                 cda:additionalLocator   or                 cda:houseNumber         or                 cda:streetName          or                 cda:streetNameType      or                 cda:direction           or                 cda:deliveryAddressLine or                 cda:city                or                 cda:state               or                 cda:postalCode          or                 cda:country" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "addr" tag - The 'addr' tag shall have 'nullFlavor' attribute or 'streetAddressLine' or 'unitType' or 'unitID' or 'additionalLocator' or 'houseNumber' or 'streetName' or 'streetNameType' or 'direction' or 'deliveryAddressLine' or 'city' or 'state' or 'postalCode' or 'country' child tags. Check all 'cda:addr' and/or 'ext:addr' tag to find the missing tag or attribute. Refer to section 8.6 Address of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 @nullFlavor             or                 cda:streetAddressLine   or                 cda:unitType            or                 cda:unitID              or                 cda:additionalLocator   or                 cda:houseNumber         or                 cda:streetName          or                 cda:streetNameType      or                 cda:direction           or                 cda:deliveryAddressLine or                 cda:city                or                 cda:state               or                 cda:postalCode          or                 cda:country</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="cda:streetAddressLine and normalize-space(cda:streetAddressLine) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Unstructured Australian Address Line" or "Address / Australian or International Address / International Address / International Address Line" - The 'streetAddressLine' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'streetAddressLine' tag. Refer to section 8.6 Address of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:streetAddressLine and normalize-space(cda:streetAddressLine) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:unitType) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Unit Type" - The 'unitType' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'unitType' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:unitType) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:unitType and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Unit_Type']/code[@code = current()/cda:unitType])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Unit Type" - The 'unitType' tag shall contain values coded as per 'AS 4846-2006' - Healthcare Provider Identification: Australian Unit Type. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'unitType' tag value. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:unitType and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Unit_Type']/code[@code = current()/cda:unitType])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:unitID) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Unit Number" - The 'unitID' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'unitID' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:unitID) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:unitID and normalize-space(cda:unitID) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Unit Number" - The 'unitID' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'unitID' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:unitID and normalize-space(cda:unitID) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:additionalLocator) &gt; 5">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Address Site Name" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Level Type" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Level Number" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Lot Number" and/or "Address / Australian or International Address / Australian Address / Australian Delivery Point Identifier". The 'additionalLocator' tag shall appear only 5 times. Check all 'cda:addr' and/or 'ext:addr' tags to find the extra 'additionalLocator' tag(s). Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:additionalLocator) &gt; 5</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:additionalLocator and normalize-space(cda:additionalLocator) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Address Site Name" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Level Type" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Level Number" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Lot Number" and/or "Address / Australian or International Address / Australian Address / Australian Delivery Point Identifier". The 'additionalLocator' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'additionalLocator' tag(s). Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:additionalLocator and normalize-space(cda:additionalLocator) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:houseNumber) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Street Number" - The 'houseNumber' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'houseNumber' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:houseNumber) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:houseNumber and normalize-space(cda:houseNumber) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Street Number" - The 'houseNumber' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'houseNumber' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:houseNumber and normalize-space(cda:houseNumber) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:streetName) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Street Name" - The 'streetName' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'streetName' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:streetName) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:streetName and normalize-space(cda:streetName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Street Name" - The 'streetName' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'streetName' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:streetName and normalize-space(cda:streetName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:streetNameType) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Street Type" - The 'streetNameType' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'streetNameType' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:streetNameType) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:streetNameType and normalize-space(cda:streetNameType) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Street Type" - The 'streetNameType' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'streetNameType' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:streetNameType and normalize-space(cda:streetNameType) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:direction) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Street Suffix" - The 'direction' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'direction' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:direction) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:direction and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Street_Suffix_Code']/code[@code = current()/cda:direction])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Street Suffix" - The 'direction' tag shall contain values coded as per 'AS 4846-2006' - Healthcare Client Identification: Australian Street Suffix. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'direction' tag value. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:direction and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Street_Suffix_Code']/code[@code = current()/cda:direction])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:deliveryAddressLine) &gt; 2">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Postal Delivery Type" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Postal Delivery Number" - The 'deliveryAddressLine' tag shall appear only twice. Check all 'cda:addr' and/or 'ext:addr' tags to find the excessive 'deliveryAddressLine' tag(s). Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:deliveryAddressLine) &gt; 2</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:deliveryAddressLine and normalize-space(cda:deliveryAddressLine[1]) = '' or                 count(cda:deliveryAddressLine) &gt; 1 and normalize-space(cda:deliveryAddressLine[2]) = ''                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Postal Delivery Type" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Postal Delivery Number" - The 'deliveryAddressLine' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'deliveryAddressLine' tag(s). Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:deliveryAddressLine and normalize-space(cda:deliveryAddressLine[1]) = '' or                 count(cda:deliveryAddressLine) &gt; 1 and normalize-space(cda:deliveryAddressLine[2]) = ''                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:deliveryAddressLine and                 normalize-space(cda:deliveryAddressLine) != '' and                 count(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Postal_Delivery_Type_Code']/code[@code = current()/cda:deliveryAddressLine]) != 1                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Postal Delivery Type" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Postal Delivery Number" - The 'deliveryAddressLine' tag shall contain values coded as per 'AS 5017-2006' - Healthcare Client Identification: Australian Postal Delivery Type Code. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'deliveryAddressLine' tag(s) value. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:deliveryAddressLine and                 normalize-space(cda:deliveryAddressLine) != '' and                 count(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Postal_Delivery_Type_Code']/code[@code = current()/cda:deliveryAddressLine]) != 1                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:deliveryAddressLine and                 normalize-space(cda:deliveryAddressLine) != '' and                 count(cda:deliveryAddressLine) = 1 and                 count(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Postal_Delivery_Type_Code']/code[@code = current()/cda:deliveryAddressLine]) = 1 and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Postal_Delivery_Number']/code[@code = current()/cda:deliveryAddressLine])                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Postal Delivery Type" and/or "Address / Australian or International Address / Australian Address / Structured Australian Address Line / Australian Postal Delivery Number" - The 'deliveryAddressLine(Australian_Postal_Delivery_Number)' tag is missing for the given 'deliveryAddressLine(Australian_Postal_Delivery_Type_Code)'. The 'deliveryAddressLine' tag(s) shall contain values coded as per 'AS 5017-2006' - Healthcare Client Identification: Australian Postal Delivery Type Code. Check all 'cda:addr' and/or 'ext:addr' tags to find the non-conforming 'devliveryAddressLine' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:deliveryAddressLine and                 normalize-space(cda:deliveryAddressLine) != '' and                 count(cda:deliveryAddressLine) = 1 and                 count(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Postal_Delivery_Type_Code']/code[@code = current()/cda:deliveryAddressLine]) = 1 and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_Postal_Delivery_Number']/code[@code = current()/cda:deliveryAddressLine])                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:city) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address/ Australian or International Address / Australian Address / Australian Suburb/Town/Locality" - The 'city' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'city' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:city) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:city and normalize-space(cda:city) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address/ Australian or International Address / Australian Address / Australian Suburb/Town/Locality" - The 'city' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'city' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:city and normalize-space(cda:city) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:state) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Australian State/Territory" - The 'state' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'state' tag. Refer to section 8.6 and 10.10 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:state) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:state and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_State_Territory_Identifier_-_Postal']/code[@code = current()/cda:state])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / Australian Address / Australian State/Territory" - The 'state' tag shall be as per 'AS 5017-2006' - Australian State/Territory Identifier - Postal. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'state' tag value. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:state and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_State_Territory_Identifier_-_Postal']/code[@code = current()/cda:state])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:state and                 normalize-space(cda:state) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / International Address / International State/Province" - The 'state' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'state' tag(s). Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:state and                 normalize-space(cda:state) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:postalCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address/ Australian or International Address / Australian Address / Australian Postcode" - The 'postalCode' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'postalCode' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:postalCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:postalCode and normalize-space(cda:postalCode) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address/ Australian or International Address / Australian Address / Australian Postcode" - The 'postalCode' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'postalCode' tag. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:postalCode and normalize-space(cda:postalCode) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:country) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / International Address / Country" - The 'country' tag shall appear only once. Check all 'cda:addr' and/or 'ext:addr' tags to find the duplicate 'country' tag. Refer to section 8.6 Address of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:country) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:country and normalize-space(cda:country) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / International Address / Country" - The 'country' tag shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'country' tag. Refer to section 8.6 Address of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:country and normalize-space(cda:country) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="cda:country and not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Australian or International Address / International Address / Country" - The 'country' tag shall contain values coded as per Australia Bureau of Statistics, Standard Australian Classification of Countries (SACC) Cat. No. 1269. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'country' tag value. Refer to section 8.6 Address of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:country and not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']                 /code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                 translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Address Purpose" and "Address / No Fixed Address Indicator" - The 'addr' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:addr' and/or 'ext:addr' tags to find the empty 'nullFlavor' attribute value. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and                 normalize-space(@use) != '' and                 contains(@use, '  ')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Address Purpose" - The 'addr' tag 'use' attribute shall be coded as per 'AS 5017-2006' - Health Care Client Identifier Address Purpose. Single space delimited. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'use' attribute value. Refer to section 8.6 and 10.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and                 normalize-space(@use) != '' and                 contains(@use, '  ')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and                 normalize-space(@use) != '' and                 not(contains(@use, ' ')) and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = current()/@use) or                 (@alternativeCode = current()/@use) or                 (@hl7Code         = current()/@use)])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Address Purpose" - The 'addr' tag 'use' attribute shall be coded as per 'AS 5017-2006' - Health Care Client Identifier Address Purpose. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'use' attribute value. Refer to section 8.6 and 10.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and                 normalize-space(@use) != '' and                 not(contains(@use, ' ')) and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = current()/@use) or                 (@alternativeCode = current()/@use) or                 (@hl7Code         = current()/@use)])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and                 normalize-space(@use) != '' and                 contains(@use, ' ') and                 not(contains(substring-after(@use, ' '), ' ')) and (                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(current()/@use,' ')) or                 (@alternativeCode = substring-before(current()/@use,' ')) or                 (@hl7Code         = substring-before(current()/@use,' '))])     or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-after(current()/@use,' ')) or                 (@alternativeCode = substring-after(current()/@use,' ')) or                 (@hl7Code         = substring-after(current()/@use,' '))])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Address Purpose" - The 'addr' tag 'use' attribute shall be coded as per 'AS 5017-2006' - Health Care Client Identifier Address Purpose. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'use' attribute value. Refer to section 8.6 and 10.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and                 normalize-space(@use) != '' and                 contains(@use, ' ') and                 not(contains(substring-after(@use, ' '), ' ')) and (                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(current()/@use,' ')) or                 (@alternativeCode = substring-before(current()/@use,' ')) or                 (@hl7Code         = substring-before(current()/@use,' '))])     or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-after(current()/@use,' ')) or                 (@alternativeCode = substring-after(current()/@use,' ')) or                 (@hl7Code         = substring-after(current()/@use,' '))])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and                 normalize-space(@use) != '' and                 contains(substring-after(@use, ' '), ' ') and                 not(contains(substring-after(substring-after(@use, ' '), ' '), ' ')) and (                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(current()/@use,' ')) or                 (@alternativeCode = substring-before(current()/@use,' ')) or                 (@hl7Code         = substring-before(current()/@use,' '))])     or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(current()/@use, ' '), ' '))])      or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-after(substring-after(current()/@use, ' '), ' ')) or                 (@alternativeCode = substring-after(substring-after(current()/@use, ' '), ' ')) or                 (@hl7Code         = substring-after(substring-after(current()/@use, ' '), ' '))])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Address Purpose" - The 'addr' tag 'use' attribute shall be coded as per 'AS 5017-2006' - Health Care Client Identifier Address Purpose. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'use' attribute value. Refer to section 8.6 and 10.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and                 normalize-space(@use) != '' and                 contains(substring-after(@use, ' '), ' ') and                 not(contains(substring-after(substring-after(@use, ' '), ' '), ' ')) and (                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(current()/@use,' ')) or                 (@alternativeCode = substring-before(current()/@use,' ')) or                 (@hl7Code         = substring-before(current()/@use,' '))])     or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(current()/@use, ' '), ' '))])      or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-after(substring-after(current()/@use, ' '), ' ')) or                 (@alternativeCode = substring-after(substring-after(current()/@use, ' '), ' ')) or                 (@hl7Code         = substring-after(substring-after(current()/@use, ' '), ' '))])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and                 normalize-space(@use) != '' and                 contains(substring-after(substring-after(@use, ' '), ' '), ' ') and                 not(contains(substring-after(substring-after(substring-after(@use, ' '), ' '), ' '), ' ')) and (                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(current()/@use,' ')) or                 (@alternativeCode = substring-before(current()/@use,' ')) or                 (@hl7Code         = substring-before(current()/@use,' '))])     or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(current()/@use, ' '), ' '))])      or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' '))])       or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@alternativeCode = substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@hl7Code         = substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' '))])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Address Purpose" - The 'addr' tag 'use' attribute shall be coded as per 'AS 5017-2006' - Health Care Client Identifier Address Purpose. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'use' attribute value. Refer to section 8.6 and 10.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and                 normalize-space(@use) != '' and                 contains(substring-after(substring-after(@use, ' '), ' '), ' ') and                 not(contains(substring-after(substring-after(substring-after(@use, ' '), ' '), ' '), ' ')) and (                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(current()/@use,' ')) or                 (@alternativeCode = substring-before(current()/@use,' ')) or                 (@hl7Code         = substring-before(current()/@use,' '))])     or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(current()/@use, ' '), ' '))])      or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' '))])       or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@alternativeCode = substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@hl7Code         = substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' '))])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and                 normalize-space(@use) != '' and                 contains(substring-after(substring-after(substring-after(@use, ' '), ' '), ' '), ' ') and (                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(current()/@use,' ')) or                 (@alternativeCode = substring-before(current()/@use,' ')) or                 (@hl7Code         = substring-before(current()/@use,' '))])     or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(current()/@use, ' '), ' '))])      or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' '))])       or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' '), ' '))])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Address Purpose" - The 'addr' tag 'use' attribute shall be coded as per 'AS 5017-2006' - Health Care Client Identifier Address Purpose. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'use' attribute value. Refer to section 8.6 and 10.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and                 normalize-space(@use) != '' and                 contains(substring-after(substring-after(substring-after(@use, ' '), ' '), ' '), ' ') and (                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(current()/@use,' ')) or                 (@alternativeCode = substring-before(current()/@use,' ')) or                 (@hl7Code         = substring-before(current()/@use,' '))])     or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(current()/@use, ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(current()/@use, ' '), ' '))])      or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(substring-after(current()/@use, ' '), ' '), ' '))])       or                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Identifier_Address_Purpose']/code[                 (@code            = substring-before(substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' '), ' ')) or                 (@alternativeCode = substring-before(substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' '), ' ')) or                 (@hl7Code         = substring-before(substring-after(substring-after(substring-after(current()/@use, ' '), ' '), ' '), ' '))])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:telecom | ext:telecom" priority="3986" mode="M77">
    <xsl:choose>
      <xsl:when test="@value or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Medium or Electronic Communication Address" - The 'telecom' tag shall have 'value' or 'nullFlavor' attribute. Check all 'cda:telecom' and/or 'ext:telecom' tags 'value' or 'nullFlavor' attributes to find the missing value. Refer to section 8.7 Electronic Communication Detail of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or normalize-space(@value) !=''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Medium or Electronic Communication Address" - The 'telecom' tag 'value' attribute shall contain a value. Check all 'cda:telecom' and/or 'ext:telecom' tags 'value' attributes to find the missing value. Refer to 8.7 Electronic Communication Detail of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or normalize-space(@value) !=''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor) or normalize-space(@nullFlavor) !=''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Medium or Electronic Communication Address" - The 'telecom' tag 'nullFlavor' attribute shall contain a value. Check all 'cda:telecom' and/or 'ext:telecom' tags 'nullFlavor' attributes to find the missing value. Refer to 8.7 Electronic Communication Detail of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor) or normalize-space(@nullFlavor) !=''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or contains(@value,':')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Medium or Electronic Communication Address" - The 'telecom' tag 'value' attribute shall contain a ":". Check all 'cda:telecom' and/or 'ext:telecom' tags 'value' attributes to find the incorrect value. Refer to 8.7 Electronic Communication Detail of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or contains(@value,':')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@value) or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':')) or                     (@hl7Code         = substring-before(current()/@value,':'))                 ]                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Medium or Electronic Communication Address" - The 'telecom' tag 'value' attribute shall be as per AS 5017-2006: Health Care Client Electronic Communication Medium. Check all 'cda:telecom' and/or 'ext:telecom' tags 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@value) or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':')) or                     (@hl7Code         = substring-before(current()/@value,':'))                 ]                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="                 @use and normalize-space(@use) != '' and                 not(contains(normalize-space(@use), ' ')) and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = normalize-space(current()/@use))])                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag 'use' attribute shall be as per HL7 v3: TelecommunicationAddressUse. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and normalize-space(@use) != '' and                 not(contains(normalize-space(@use), ' ')) and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = normalize-space(current()/@use))])                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 not(contains(substring-after(normalize-space(@use), ' '), ' ')) and (                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-before(normalize-space(current()/@use),' '))]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-after(normalize-space(current()/@use),' '))])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag 'use' attribute shall be as per HL7 v3: TelecommunicationAddressUse. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 not(contains(substring-after(normalize-space(@use), ' '), ' ')) and (                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-before(normalize-space(current()/@use),' '))]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-after(normalize-space(current()/@use),' '))])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 contains(substring-after(normalize-space(@use), ' '), ' ') and (                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-before(normalize-space(current()/@use),' '))]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-before(substring-after(normalize-space(current()/@use),' '),' '))]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-before(substring-after(substring-after(concat(normalize-space(current()/@use),' ZZ'),' '),' '),' '))])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag 'use' attribute shall be as per HL7 v3: TelecommunicationAddressUse. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 contains(substring-after(normalize-space(@use), ' '), ' ') and (                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-before(normalize-space(current()/@use),' '))]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-before(substring-after(normalize-space(current()/@use),' '),' '))]) or                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'TelecommunicationAddressUse']/code[(@code = substring-before(substring-after(substring-after(concat(normalize-space(current()/@use),' ZZ'),' '),' '),' '))])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'M')                 and not (@use)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag shall have 'value' and 'use' attributes with 'use' attribute as 'MC' when 'value' attribute is 'Mobile'. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use and 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'M')                 and not (@use)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'P')                 and not(@use)                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag shall have 'value' and 'use' attributes with 'use' attribute as 'PG' when 'value' attribute is 'Pager'. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use and 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'P')                 and not(@use)                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 @use and normalize-space(@use) != '' and                 not(contains(normalize-space(@use), ' ')) and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'M') and                 (@use != 'MC')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag shall have 'value' and 'use' attributes with 'use' attribute as 'MC' when 'value' attribute is 'Mobile'. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use and 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 @use and normalize-space(@use) != '' and                 not(contains(normalize-space(@use), ' ')) and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'M') and                 (@use != 'MC')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 @use and normalize-space(@use) != '' and                 not(contains(normalize-space(@use), ' ')) and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'P') and                 (@use != 'PG')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag shall have 'value' and 'use' attributes with 'use' attribute as 'PG' when 'value' attribute is 'Pager'. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use and 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 @use and normalize-space(@use) != '' and                 not(contains(normalize-space(@use), ' ')) and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'P') and                 (@use != 'PG')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 not(contains(substring-after(@use, ' '), ' ')) and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'M') and                 (substring-before(normalize-space(@use), ' ') != 'MC') and                 (substring-after (normalize-space(@use), ' ') != 'MC')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag shall have 'value' and 'use' attributes with 'use' attribute as 'MC' when 'value' attribute is 'Mobile'. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use and 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 not(contains(substring-after(@use, ' '), ' ')) and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'M') and                 (substring-before(normalize-space(@use), ' ') != 'MC') and                 (substring-after (normalize-space(@use), ' ') != 'MC')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 not(contains(substring-after(@use, ' '), ' ')) and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'P') and                 (substring-before(normalize-space(@use), ' ') != 'PG') and                 (substring-after (normalize-space(@use), ' ') != 'PG')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag shall have 'value' and 'use' attributes with 'use' attribute as 'PG' when 'value' attribute is 'Pager'. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use and 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 not(contains(substring-after(@use, ' '), ' ')) and                 (document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                     (@code            = substring-before(current()/@value,':')) or                     (@alternativeCode = substring-before(current()/@value,':'))                 ]/@alternativeCode = 'P') and                 (substring-before(normalize-space(@use), ' ') != 'PG') and                 (substring-after (normalize-space(@use), ' ') != 'PG')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 contains(substring-after(normalize-space(@use), ' '), ' ') and                 (                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                         (@code            = substring-before(current()/@value,':')) or                         (@alternativeCode = substring-before(current()/@value,':'))                     ]/@alternativeCode = 'M'                 ) and                 (substring-before(normalize-space(@use), ' ') != 'MC') and                 (substring-before(substring-after(normalize-space(@use), ' '), ' ') != 'MC') and                 (substring-before(substring-after(substring-after(concat(normalize-space(@use), ' ZZ'), ' '), ' '), ' ') != 'MC')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag shall have 'value' and 'use' attributes with 'use' attribute as 'MC' when 'value' attribute is 'Mobile'. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use and 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 contains(substring-after(normalize-space(@use), ' '), ' ') and                 (                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                         (@code            = substring-before(current()/@value,':')) or                         (@alternativeCode = substring-before(current()/@value,':'))                     ]/@alternativeCode = 'M'                 ) and                 (substring-before(normalize-space(@use), ' ') != 'MC') and                 (substring-before(substring-after(normalize-space(@use), ' '), ' ') != 'MC') and                 (substring-before(substring-after(substring-after(concat(normalize-space(@use), ' ZZ'), ' '), ' '), ' ') != 'MC')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @value and                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 contains(substring-after(normalize-space(@use), ' '), ' ') and                 (                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                         (@code            = substring-before(current()/@value,':')) or                         (@alternativeCode = substring-before(current()/@value,':'))                     ]/@alternativeCode = 'P'                 ) and                 (substring-before(normalize-space(@use), ' ') != 'PG') and                 (substring-before(substring-after(normalize-space(@use), ' '), ' ') != 'PG') and                 (substring-before(substring-after(substring-after(concat(normalize-space(@use), ' ZZ'), ' '), ' '), ' ') != 'PG')                 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'cda:telecom' and/or 'ext:telecom' - "Electronic Communication Usage Code" - The 'telecom' tag shall have 'value' and 'use' attributes with 'use' attribute as 'PG' when 'value' attribute is 'Pager'. Check all 'cda:telecom' and/or 'ext:telecom' tags 'use and 'value' attributes to find the incorrect value. Refer to section 8.7 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @value and                 @use and normalize-space(@use) != '' and                 contains(normalize-space(@use), ' ') and                 contains(substring-after(normalize-space(@use), ' '), ' ') and                 (                     document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Client_Electronic_Communication_Medium']/code[                         (@code            = substring-before(current()/@value,':')) or                         (@alternativeCode = substring-before(current()/@value,':'))                     ]/@alternativeCode = 'P'                 ) and                 (substring-before(normalize-space(@use), ' ') != 'PG') and                 (substring-before(substring-after(normalize-space(@use), ' '), ' ') != 'PG') and                 (substring-before(substring-after(substring-after(concat(normalize-space(@use), ' ZZ'), ' '), ' '), ' ') != 'PG')                 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:component/cda:section[not(descendant::cda:component/cda:section) and                                                        descendant::cda:observationMedia and                                                        descendant::cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')!='LOGO']]" priority="3985" mode="M77">
    <xsl:choose>
      <xsl:when test="cda:title" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'title' tag is missing for 'narrative' block of 'observationMedia'. Check all 'cda:observationMedia' tags to find the missing 'narrative ' block 'title' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:title</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:title) or normalize-space(cda:title) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'title' tag for 'narrative' block of 'observationMedia' shall contain a value. Check all 'cda:observationMedia' tags to find the empty 'narrative ' block 'title' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:title) or normalize-space(cda:title) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:title) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'title' tag shall appear only once for 'narrative' block of 'observationMedia'. Check all 'cda:observationMedia' tags to find the duplicated 'narrative ' block 'title' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:title) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:text" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'text' tag is missing for 'narrative' block of 'observationMedia'. Check all 'cda:observationMedia' tags to find the missing 'narrative ' block 'text' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:text</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:text) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'text' tag shall appear only once for 'narrative' block of 'observationMedia'. Check all 'cda:observationMedia' tags to find the duplicated 'narrative ' block 'text' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:text) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:component/cda:section[not(descendant::cda:component/cda:section) and                                                        descendant::cda:observationMedia and                                                        descendant::cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')!='LOGO']]/                          cda:text" priority="3984" mode="M77">
    <xsl:if test="@mediaType and normalize-space(@mediaType) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'text' tag 'mediaType' attribute for 'narrative' block of 'observationMedia' shall contain a value. Check all 'cda:observationMedia' tags to find the empty 'mediaType' attribute for 'narrative ' block 'text' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@mediaType and normalize-space(@mediaType) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@mediaType and                 normalize-space(@mediaType) != '' and                 @mediaType != 'text/x-hl7-text+xml'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'text' tag 'mediaType' attribute for 'narrative' block of 'observationMedia' shall be 'text/x-hl7-text+xml'. Check all 'cda:observationMedia' tags to find the incorrect 'mediaType' attribute for 'narrative ' block 'text' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@mediaType and                 normalize-space(@mediaType) != '' and                 @mediaType != 'text/x-hl7-text+xml'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:component/cda:section[not(descendant::cda:component/cda:section) and                                                        descendant::cda:observationMedia and                                                        descendant::cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')!='LOGO']]/                          cda:text//cda:renderMultiMedia" priority="3983" mode="M77">
    <xsl:choose>
      <xsl:when test="@referencedObject" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'renderMultiMedia' tag - The 'renderMultiMedia' tag 'referencedObject' attribute is missing. Check all 'cda:renderMultiMedia' tags to find the missing 'referencedObject' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@referencedObject</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@referencedObject) or normalize-space(@referencedObject) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'renderMultiMedia' tag - The 'renderMultiMedia' tag 'referencedObject' attribute shall contain a value. Check all 'cda:renderMultiMedia' tags to find the empty 'referencedObject' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@referencedObject) or normalize-space(@referencedObject) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(starts-with(ancestor::cda:section//cda:observationMedia[@ID = current()/@referencedObject]/cda:value/cda:reference/@value, '#'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'renderMultiMedia' tag - The 'reference' tag 'value' attribute shall not contain the value '#' in the begining. Check all 'cda:observationMedia' tags to find the 'cda:value/cda:reference' child tag with the incorrect 'value' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(starts-with(ancestor::cda:section//cda:observationMedia[@ID = current()/@referencedObject]/cda:value/cda:reference/@value, '#'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:observation/cda:text |                          cda:observation/cda:value" priority="3982" mode="M77">
    <xsl:if test="@xsi:type and normalize-space(@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observation/text' or 'observation/value' tag - The 'text' or 'value' tag 'xsi:type' attribute shall contain a value. Check all 'cda:observation/cda:text' or 'cda:observation/cda:value' tags to find the 'text' or 'value' with blank 'xsi:type' attribute value. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@xsi:type and normalize-space(@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:reference) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observation/value' tag - The 'reference' tag shall appear only once. Check all 'cda:observation/cda:value' tags to find the duplicated 'reference' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:reference) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="                 not(@xsi:type) or                 normalize-space(@xsi:type) = '' or                 not(normalize-space(@xsi:type) = 'ED' or                     (substring-before(normalize-space(@xsi:type), ':') != '' and                      substring-after(normalize-space(@xsi:type), ':') = 'ED')) or                 not(cda:reference) or                 @mediaType" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observation/text' or 'observation/value' tag - The 'text' or 'value' tag 'mediaType' attribute is missing for having attachment. Check all 'cda:observation/cda:text' or 'cda:observation/cda:value' tags to find the 'observation/text' or 'observation/value' tag with 'mediaType' attribute missing. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@xsi:type) or                 normalize-space(@xsi:type) = '' or                 not(normalize-space(@xsi:type) = 'ED' or                     (substring-before(normalize-space(@xsi:type), ':') != '' and                      substring-after(normalize-space(@xsi:type), ':') = 'ED')) or                 not(cda:reference) or                 @mediaType</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@mediaType and normalize-space(@mediaType) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observation/value' tag - The 'mediaType' attribute shall contain a value. Check all 'cda:observation/cda:value' tags to find the 'mediaType' attribute of missing value. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@mediaType and normalize-space(@mediaType) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:reference and                 cda:reference/@value and                 not(starts-with(cda:reference/@value, '#')) and                 @mediaType and                 normalize-space(@mediaType) != '' and (                     not (contains(@mediaType, ';')) and                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA_MIME_Type']/code[@displayName = (current()/@mediaType)])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observation/text' or 'observation/value' tag - The 'text' or 'value' tag 'mediaType' attribute shall be as per CDA Limitation MIME Type defined inside "Common Conformance Profile for Clinical Documents". Check all 'cda:observation/cda:text' or 'cda:observation/cda:value' tags to find the incorrect 'mediaType' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:reference and                 cda:reference/@value and                 not(starts-with(cda:reference/@value, '#')) and                 @mediaType and                 normalize-space(@mediaType) != '' and (                     not (contains(@mediaType, ';')) and                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA_MIME_Type']/code[@displayName = (current()/@mediaType)])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 cda:reference and                 cda:reference/@value and                 not(starts-with(cda:reference/@value, '#')) and                 @mediaType and                 normalize-space(@mediaType) != '' and (                     contains(@mediaType, ';') and                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA_MIME_Type']/code[@displayName = substring-before(current()/@mediaType, ';')])                 )">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observation/text' or 'observation/value' tag - The 'text' or 'value' tag 'mediaType' attribute shall be as per CDA Limitation MIME Type defined inside "Common Conformance Profile for Clinical Documents". Check all 'cda:observation/cda:text' or 'cda:observation/cda:value' tags to find the incorrect 'mediaType' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 cda:reference and                 cda:reference/@value and                 not(starts-with(cda:reference/@value, '#')) and                 @mediaType and                 normalize-space(@mediaType) != '' and (                     contains(@mediaType, ';') and                     not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA_MIME_Type']/code[@displayName = substring-before(current()/@mediaType, ';')])                 )</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:observation/cda:text[@mediaType]/cda:reference |                          cda:observation/cda:value[@mediaType]/cda:reference |                          cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')!='LOGO']/cda:value[@mediaType]/cda:reference" priority="3981" mode="M77">
    <xsl:choose>
      <xsl:when test="@value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observation/text', 'observation/value' and 'observationMedia/value' tag - The 'reference' tag 'value' attribute is missing. Check all 'cda:observation/cda:text/cda:reference', 'cda:observation/cda:value/cda:reference' and 'cda:observationMedia/cda:value/cda:reference' tags to find the missing 'value' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or normalize-space(@value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observation/text', 'observation/value' and 'observationMedia/value' tag - The 'reference' tag 'value' attribute shall contain a value. Check all 'cda:observation/cda:text/cda:reference', 'cda:observation/cda:value/cda:reference' and 'cda:observationMedia/cda:value/cda:reference' tags to find the empty 'value' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or normalize-space(@value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')!='LOGO']" priority="3980" mode="M77">
    <xsl:choose>
      <xsl:when test="ancestor::cda:component[cda:section]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'narrative' block of 'observationMedia' tag is missing. Check all 'cda:observationMedia' tags to find the missing 'narrative ' block. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ancestor::cda:component[cda:section]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 parent::cda:entry or                 parent::cda:entryRelationship" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The parent tag of 'observationMedia' tag shall have a name of 'entry' or 'entryRelationship'. Check all 'cda:observationMedia' tags to find the incorrect 'observationMedia' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 parent::cda:entry or                 parent::cda:entryRelationship</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@ID" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'observationMedia' tag 'ID' attribute is missing. Check all 'cda:observationMedia' tags to find the missing 'ID' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@ID</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@ID) or normalize-space(@ID) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'observationMedia' tag 'ID' attribute shall contain a value. Check all 'cda:observationMedia' tags to find the empty 'ID' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@ID) or normalize-space(@ID) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@ID) or                 not(ancestor::cda:component/cda:section/cda:text) or                 not(ancestor::cda:component/cda:section/cda:text//cda:renderMultiMedia) or                 not(ancestor::cda:component/cda:section/cda:text//cda:renderMultiMedia/@referencedObject) or                 ancestor::cda:component/cda:section/cda:text//cda:renderMultiMedia/@referencedObject = @ID" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">&gt;Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The value of 'ID' attribute and the value of 'referencedObject' attribute inside 'narrative' block of 'observationMedia' shall be matched as per 'Common Conformance Requirements - Conformance Levels - CDA Level 1A'. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@ID) or                 not(ancestor::cda:component/cda:section/cda:text) or                 not(ancestor::cda:component/cda:section/cda:text//cda:renderMultiMedia) or                 not(ancestor::cda:component/cda:section/cda:text//cda:renderMultiMedia/@referencedObject) or                 ancestor::cda:component/cda:section/cda:text//cda:renderMultiMedia/@referencedObject = @ID</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag is missing. Check all 'cda:observationMedia' tags to find the missing 'value ' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:value) or cda:value[@mediaType]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag 'mediaType' attribute is missing. Check all 'cda:observationMedia/cda:value' tags to find the missing 'mediaType ' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:value) or cda:value[@mediaType]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag shall appear only once. Check all 'cda:observationMedia' tags to find the duplicated 'value ' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')='LOGO']" priority="3979" mode="M77">
    <xsl:choose>
      <xsl:when test="normalize-space(@ID) = 'LOGO'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - The 'observationMedia' tag 'id' attribute shall be 'LOGO'. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">normalize-space(@ID) = 'LOGO'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:entry/cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'LOGO']" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - The '/ClinicalDocument/component/structuredBody/component/cda:section/entry/observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'LOGO']' path - 1 or more tags are missing. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section/cda:entry/cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'LOGO']</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag is missing. Check all 'cda:observationMedia' tags with 'ID=LOGO' attribute to find the missing 'value ' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:value) or cda:value[@mediaType]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag 'mediaType' attribute is missing. Check all 'cda:observationMedia/with 'ID=LOGO' attribute cda:value' tags to find the missing 'mediaType ' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:value) or cda:value[@mediaType]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:value) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag shall appear only once. Check all 'cda:observationMedia' tags with 'ID=LOGO' attribute to find the duplicated 'value ' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:value) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:value) and (cda:value/@xsi:type) and normalize-space(cda:value/@xsi:type) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag 'xsi:type' attribute shall contain a value. Check all 'cda:observationMedia' tags with 'ID=LOGO' attribute to find the 'cda:value' child tag with the empty 'xsi:type' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:value) and (cda:value/@xsi:type) and normalize-space(cda:value/@xsi:type) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:value) and (cda:value/@xsi:type) and                 normalize-space(cda:value/@xsi:type) != '' and                 normalize-space(cda:value/@xsi:type) != 'ED' and                 not(substring-before(normalize-space(cda:value/@xsi:type), ':') != '' and                 substring-after(normalize-space(cda:value/@xsi:type), ':') = 'ED')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag 'xsi:type' attribute shall contain the value 'ED' Check all 'cda:observationMedia' tags with 'ID=LOGO' attribute to find the 'cda:value' child tag with the incorrect 'xsi:type' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:value) and (cda:value/@xsi:type) and                 normalize-space(cda:value/@xsi:type) != '' and                 normalize-space(cda:value/@xsi:type) != 'ED' and                 not(substring-before(normalize-space(cda:value/@xsi:type), ':') != '' and                 substring-after(normalize-space(cda:value/@xsi:type), ':') = 'ED')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:value) and (cda:value/@integrityCheckAlgorithm) and normalize-space(cda:value/@integrityCheckAlgorithm) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag 'integrityCheckAlgorithm' attribute shall contain a value'. Check all 'cda:observationMedia' with 'ID=LOGO' attribute to find the 'cda:value' child tag with the empty 'integrityCheckAlgorithm' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:value) and (cda:value/@integrityCheckAlgorithm) and normalize-space(cda:value/@integrityCheckAlgorithm) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:value) and (cda:value/@integrityCheckAlgorithm) and normalize-space(cda:value/@integrityCheckAlgorithm) != '' and (cda:value/@integrityCheckAlgorithm != 'SHA-1')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag 'integrityCheckAlgorithm' attribute shall contain the value 'SHA-1'. Check all 'cda:observationMedia' with 'ID=LOGO' attribute to find the 'cda:value' child tag with the incorrect 'integrityCheckAlgorithm' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:value) and (cda:value/@integrityCheckAlgorithm) and normalize-space(cda:value/@integrityCheckAlgorithm) != '' and (cda:value/@integrityCheckAlgorithm != 'SHA-1')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:value) and (cda:value/@integrityCheck) and normalize-space(cda:value/@integrityCheck) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'value' tag 'integrityCheck' attribute shall contain a value. Check all 'cda:observationMedia' with 'ID=LOGO' attribute to find the 'cda:value' child tag with the empty 'integrityCheck' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:value) and (cda:value/@integrityCheck) and normalize-space(cda:value/@integrityCheck) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:value) or (cda:value/cda:reference)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'cda:reference' tag is missing. Check all 'cda:observationMedia' with 'ID=LOGO' attribute to find the 'cda:value' child tag with the missing 'reference' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:value) or (cda:value/cda:reference)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(cda:value) and count(cda:value/cda:reference) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'cda:reference' tag shall appear only once. Check all 'cda:observationMedia' with 'ID=LOGO' attribute to find the 'cda:value' child tag with the duplicate 'reference' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:value) and count(cda:value/cda:reference) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:value) and (cda:value/@representation) and normalize-space(cda:value/@representation)='B64'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'value' tag 'representation' attribute shall not contain the value 'B64'. Authoring Systems SHALL ensure that all attachments referenced in 'renderMultimedia' narrative block elements or used for a branding logo, are not inlined in their associated observationMedia entries. Check all 'cda:observationMedia/cda:value' tags to find the incorrect 'representation' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 4.2.1 of the CDA_Rendering_Specification_v1.0.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:value) and (cda:value/@representation) and normalize-space(cda:value/@representation)='B64'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:observationMedia[translate(@ID, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')='LOGO']/cda:value/cda:reference" priority="3978" mode="M77">
    <xsl:choose>
      <xsl:when test="@value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'reference' tag 'value' attribute is missing. Check all 'cda:observationMedia' with 'ID=LOGO' attribute to find the 'cda:value/cda:reference' child tag with the missing 'value' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or normalize-space(@value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'reference' tag 'value' attribute shall contain a value. Check all 'cda:observationMedia' with 'ID=LOGO' attribute to find the 'cda:value/cda:reference' child tag with the empty 'value' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or normalize-space(@value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(starts-with(@value, '#'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'reference' tag 'value' attribute shall not contain the value '#' in the begining. Check all 'cda:observationMedia' with 'ID=LOGO' attribute to find the 'cda:value/cda:reference' child tag with the incorrect 'value' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(starts-with(@value, '#'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="cda:observationMedia/cda:value" priority="3977" mode="M77">
    <xsl:choose>
      <xsl:when test="not(@mediaType) or                 normalize-space(@mediaType) = '' or                 contains(@mediaType, ';') or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA_MIME_Type']/code[@displayName = (current()/@mediaType)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'text' tag 'mediaType' attribute shall be as per CDA Limitation MIME Type defined inside "Common_Conformance_Profile_for_Clinical_Documents_v1.5". NOTE: This restriction shall be applied to PCEHR message only. Ignore this error for non-PCEHR messages. Check all 'cda:observationMedia/cda:value' tags to find the incorrect 'mediaType' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@mediaType) or                 normalize-space(@mediaType) = '' or                 contains(@mediaType, ';') or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA_MIME_Type']/code[@displayName = (current()/@mediaType)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@mediaType) or                 normalize-space(@mediaType) = '' or                 not(contains(@mediaType, ';')) or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA_MIME_Type']/code[@displayName = substring-before(current()/@mediaType, ';')]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'text' tag 'mediaType' attribute shall be as per CDA Limitation MIME Type defined inside "Common_Conformance_Profile_for_Clinical_Documents_v1.5". NOTE: This restriction shall be applied to PCEHR message only. Ignore this error for non-PCEHR messages. Check all 'cda:observationMedia/cda:value' tags to find the incorrect 'mediaType' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@mediaType) or                 normalize-space(@mediaType) = '' or                 not(contains(@mediaType, ';')) or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'CDA_MIME_Type']/code[@displayName = substring-before(current()/@mediaType, ';')]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(@mediaType) and (@integrityCheckAlgorithm) and (normalize-space(@integrityCheckAlgorithm) = '')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'integrityCheckAlgorithm' attribute shall contain a value. Check all 'cda:observationMedia' tags to find the 'cda:value' child tags with the empty 'integrityCheckAlgorithm' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@mediaType) and (@integrityCheckAlgorithm) and (normalize-space(@integrityCheckAlgorithm) = '')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@mediaType) and                 (@integrityCheckAlgorithm) and                 normalize-space(@integrityCheckAlgorithm) != '' and                 (@integrityCheckAlgorithm != 'SHA-1')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'integrityCheckAlgorithm' attribute shall contain the value 'SHA-1'. Check all 'cda:observationMedia' tags to find the 'cda:value' child tags with the incorrect 'integrityCheckAlgorithm' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@mediaType) and                 (@integrityCheckAlgorithm) and                 normalize-space(@integrityCheckAlgorithm) != '' and                 (@integrityCheckAlgorithm != 'SHA-1')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@mediaType) or (@integrityCheck)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'value' tag 'integrityCheck' attribute is missing. Check all 'cda:observationMedia' tags to find the 'cda:value' child tags with the missing 'integrityCheck' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@mediaType) or (@integrityCheck)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="(not(@mediaType) and not(@integrityCheck)) or normalize-space(@integrityCheck) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'integrityCheck' attribute shall contain a value. Check all 'cda:observationMedia' tags to find the 'cda:value' child tags with the empty 'integrityCheck' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">(not(@mediaType) and not(@integrityCheck)) or normalize-space(@integrityCheck) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@mediaType) or (cda:reference)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'reference' tag is missing. Check all 'cda:observationMedia/cda:value' tags to find the missing 'reference' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@mediaType) or (cda:reference)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(@mediaType) and (count(cda:reference) &gt; 1)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'reference' tag shall appear only once. Check all 'cda:observationMedia/cda:value' tags to find the duplicated 'reference' tag. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@mediaType) and (count(cda:reference) &gt; 1)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@mediaType) and (@representation) and normalize-space(@representation)='B64'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'value' tag 'representation' attribute shall not contain the value 'B64'. Authoring Systems SHALL ensure that all attachments referenced in 'renderMultimedia' narrative block elements or used for a branding logo, are not inlined in their associated observationMedia entries. Check all 'cda:observationMedia/cda:value' tags to find the incorrect 'representation' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 4.2.1 of the CDA_Rendering_Specification_v1.0.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@mediaType) and (@representation) and normalize-space(@representation)='B64'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:reference/@value) or (normalize-space(cda:reference/@value) = '') or not(@mediaType) or (normalize-space(@mediaType) = '') or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.gif') and (@mediaType = 'image/gif')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 4), 5)='.jpeg') and (@mediaType = 'image/jpeg')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.jpg') and (@mediaType = 'image/jpeg')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.pdf') and (@mediaType = 'application/pdf')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.png') and (@mediaType = 'image/png')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.tif') and (@mediaType = 'image/tiff'))or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 4), 5)='.tiff') and (@mediaType = 'image/tiff'))                 " />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia/value' tag - The 'value' tag 'mediaType' attribute shall be either 'image/gif' or 'image/jpeg' or 'application/pdf' or 'image/png' or 'image/tiff' and 'reference' tag 'value' attribute shall be having filetype extension of 'GIF' or 'JPEG' or 'JPG' or 'PDF' or 'PNG' or 'TIF' or 'TIFF' and also the 'mediaType' attribute and the 'value' attribute shall correspond with each other. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.2.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:reference/@value) or (normalize-space(cda:reference/@value) = '') or not(@mediaType) or (normalize-space(@mediaType) = '') or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.gif') and (@mediaType = 'image/gif')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 4), 5)='.jpeg') and (@mediaType = 'image/jpeg')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.jpg') and (@mediaType = 'image/jpeg')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.pdf') and (@mediaType = 'application/pdf')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.png') and (@mediaType = 'image/png')) or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 3), 4)='.tif') and (@mediaType = 'image/tiff'))or                 ((substring(cda:reference/@value, ((string-length(cda:reference/@value)) - 4), 5)='.tiff') and (@mediaType = 'image/tiff'))                 </xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:reference/@value) or not(starts-with(cda:reference/@value, '#'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'reference' tag 'value' attribute shall not contain a value starting with '#'. Check all 'cda:observationMedia' tags to find the 'cda:value/cda:reference' child tag with the incorrect 'value' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.1 and 4.4.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:reference/@value) or not(starts-with(cda:reference/@value, '#'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(cda:reference/@value) and (normalize-space(cda:reference/@value) = '')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'reference' tag 'value' attribute shall contain a value. Check all 'cda:observationMedia' tags to find the 'cda:value/cda:reference' child tag with the incorrect 'value' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.2.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:reference/@value) and (normalize-space(cda:reference/@value) = '')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@mediaType) and (normalize-space(@mediaType) = '')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'observationMedia' tag - The 'observationMedia' tag 'mediaType' attribute shall contain a value. Check all 'cda:observationMedia' tags to find the incorrect 'mediaType' attribute. Refer to Specialist_Letter_CDA_Implementation_Guide_v1.3 and section 3.4.2.1 of the Common_Conformance_Profile_for_Clinical_Documents_v1.5.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@mediaType) and (normalize-space(@mediaType) = '')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M77" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M77" />
  <xsl:template match="cda:name[not(                 ancestor::cda:manufacturedMaterial or                 ancestor::cda:product or                 ancestor::cda:receivedOrganization or                 ancestor::cda:representedOrganization or                 ancestor::cda:representedCustodianOrganization or                 ancestor::cda:scopingOrganization or                 ancestor::cda:serviceProviderOrganization or                 ancestor::cda:targetSiteCode or                 ancestor::ext:employerOrganization)]" priority="4000" mode="M78">
    <xsl:choose>
      <xsl:when test="                 (child::* and normalize-space(concat(text()[1], text()[2], text()[3], text()[4], text()[5])) = '') or                 (not(child::*) and normalize-space(.) != '')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'name' tag shall have either a 'structured name' or an 'unstructured name' to be present but not both. Check all 'cda:name' tags to find the incorrect 'name' tag. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 (child::* and normalize-space(concat(text()[1], text()[2], text()[3], text()[4], text()[5])) = '') or                 (not(child::*) and normalize-space(.) != '')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:family or normalize-space(concat(text()[1], text()[2], text()[3], text()[4], text()[5])) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for "name" tag - The 'name' tag shall have either a 'structured name' or an 'unstructured name'. If it is a structured name, it shall have a 'family' tag. Check all 'cda:name' tags to find the incorrect 'name' tag. Refer to section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:family or normalize-space(concat(text()[1], text()[2], text()[3], text()[4], text()[5])) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M78" />
  </xsl:template>
  <xsl:template match="cda:addr[not(ancestor::cda:birthplace or ancestor::cda:recordTarget)] | ext:addr" priority="3999" mode="M78">
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'NA'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - Global Clinical Document check for 'addr' tag - "Address / Address Purpose" and "Address / No Fixed Address Indicator" - The 'addr' tag 'nullFlavor' attribute shall contain the value 'NA'. Check all 'cda:addr' and/or 'ext:addr' tags to find the incorrect 'nullFlavor' attribute value. Refer to section 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'NA'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M78" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:addr" priority="3998" mode="M78">
    <xsl:if test="@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'NA' and @nullFlavor != 'UNK' and @nullFlavor != 'MSK'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'addr' tag 'nullFlavor' attribute shall contain the value 'NA' or 'UNK' or 'MSK'. Refer to section 6.1.1 and 8.6 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor and normalize-space(@nullFlavor) != '' and @nullFlavor != 'NA' and @nullFlavor != 'UNK' and @nullFlavor != 'MSK'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M78" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M78" />
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson |             /cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson |             /cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson |             /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson" priority="4000" mode="M79">
    <xsl:if test="count(ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800361')]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'asEntityIdentifier' tag with a HPI-I shall not exist more than once. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800361')]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M79" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier |             /cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/ext:asEntityIdentifier |             /cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier |             /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier" priority="3999" mode="M79">
    <xsl:if test="(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800361')]) and (ext:code/@codeSystem = '2.16.840.1.113883.12.203')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'asEntityIdentifier' tag shall have a National Identifier or a Local Identifier but not both. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800361')]) and (ext:code/@codeSystem = '2.16.840.1.113883.12.203')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360') or starts-with(@root, '1.2.36.1.2001.1005.29.') or (@root = '1.2.36.1.2001.1005.29')])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'asEntityIdentifier' tag shall not have an IHI or the local identifier of the consumer. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360') or starts-with(@root, '1.2.36.1.2001.1005.29.') or (@root = '1.2.36.1.2001.1005.29')])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:code/@codeSystem = '2.16.840.1.113883.12.203') and (ext:id/@assigningAuthorityName) and normalize-space(ext:id/@assigningAuthorityName) != '' and (((ext:id/@assigningAuthorityName) = 'IHI') or ((ext:id/@assigningAuthorityName) = 'HPI-I')                  or ((ext:id/@assigningAuthorityName) = 'HPI-O') or ((ext:id/@assigningAuthorityName) = 'PAI-D') or ((ext:id/@assigningAuthorityName) = 'PAI-O') or ((ext:id/@assigningAuthorityName) = 'PAI-R'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id/@assigningAuthorityName' attribute where 'asEntityIdentifier' tag is having a Local Identifier shall not have National Identifier values. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:code/@codeSystem = '2.16.840.1.113883.12.203') and (ext:id/@assigningAuthorityName) and normalize-space(ext:id/@assigningAuthorityName) != '' and (((ext:id/@assigningAuthorityName) = 'IHI') or ((ext:id/@assigningAuthorityName) = 'HPI-I')                  or ((ext:id/@assigningAuthorityName) = 'HPI-O') or ((ext:id/@assigningAuthorityName) = 'PAI-D') or ((ext:id/@assigningAuthorityName) = 'PAI-O') or ((ext:id/@assigningAuthorityName) = 'PAI-R'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M79" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier/ext:id |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier/ext:id" priority="3998" mode="M79">
    <xsl:if test="(@nullFlavor) and (@nullFlavor!='UNK')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) - The 'id' tag 'nullFlavor' attribute shall contain the value 'UNK'. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@nullFlavor) and (@nullFlavor!='UNK')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(starts-with(@root, '1.2.36.1.2001.1003.0.')) and not(starts-with(@root, '1.2.36.1.2001.1003.0.800361'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) - The 'asEntityIdentifier' tag shall not have a National Identifier other than an HPI-I. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(starts-with(@root, '1.2.36.1.2001.1003.0.')) and not(starts-with(@root, '1.2.36.1.2001.1003.0.800361'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root = '1.2.36.1.2001.1003.0') and not(starts-with(@root, '1.2.36.1.2001.1003.0.800361'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) - The 'asEntityIdentifier' tag shall not have a National Identifier other than an HPI-I. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root = '1.2.36.1.2001.1003.0') and not(starts-with(@root, '1.2.36.1.2001.1003.0.800361'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) - The 'id' tag shall not have both a nullFlavor attribute and the root attribute for a Local Identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) - The 'id' tag shall not have both a nullFlavor attribute and the root attribute for a National Identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M79" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier/ext:id |             /cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/ext:asEntityIdentifier/ext:id |             /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier/ext:id |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier/ext:id" priority="3997" mode="M79">
    <xsl:if test="@nullFlavor">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.4.1 Usual GP Person and 7.1.5.3.1.1 Service Provider Person - The 'id' tag 'nullFlavor' attribute shall not exist. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.4.1 Usual GP Person and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(starts-with(@root, '1.2.36.1.2001.1003.0.')) and not(starts-with(@root, '1.2.36.1.2001.1003.0.800361'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.4.1 Usual GP Person and 7.1.5.3.1.1 Service Provider Person - The 'asEntityIdentifier' tag shall not have a National Identifier other than an HPI-I. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.4.1 Usual GP Person and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(starts-with(@root, '1.2.36.1.2001.1003.0.')) and not(starts-with(@root, '1.2.36.1.2001.1003.0.800361'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root = '1.2.36.1.2001.1003.0') and not(starts-with(@root, '1.2.36.1.2001.1003.0.800361'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.4.1 Usual GP Person and 7.1.5.3.1.1 Service Provider Person - The 'asEntityIdentifier' tag shall not have a National Identifier other than an HPI-I. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.4.1 Usual GP Person and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root = '1.2.36.1.2001.1003.0') and not(starts-with(@root, '1.2.36.1.2001.1003.0.800361'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.4.1 Usual GP Person and 7.1.5.3.1.1 Service Provider Person - The 'id' tag shall not have both a nullFlavor attribute and the root attribute for a Local Identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.4.1 Usual GP Person and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.4.1 Usual GP Person and 7.1.5.3.1.1 Service Provider Person - The 'id' tag shall not have both a nullFlavor attribute and the root attribute for a National Identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.4.1 Usual GP Person and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M79" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')]]/ext:code |             /cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/ext:asEntityIdentifier[ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')]]/ext:code |             /cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier[ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')]]/ext:code |             /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier[ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')]]/ext:code |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')]]/ext:code |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')]]/ext:code" priority="3996" mode="M79">
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or (@code='EI')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:code' tag 'code' attribute shall contain the value 'EI'. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or (@code='EI')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M79" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M79" />
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')] |             /cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')] |             /cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')] |             /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')] |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')] |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')]" priority="4000" mode="M80">
    <xsl:choose>
      <xsl:when test="not(@root) or (starts-with(@root, '1.2.36.1.2001.1005.41.800362'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.41 followed by the national healthcare identifier of the organisation that maintains the local identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@root) or (starts-with(@root, '1.2.36.1.2001.1005.41.800362'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(@root) and (starts-with(@root, '1.2.36.1.2001.1005.41.800362')) and not(string-length(@root) &gt;= 38)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.41 followed by the national healthcare identifier of the organisation that maintains the local identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (starts-with(@root, '1.2.36.1.2001.1005.41.800362')) and not(string-length(@root) &gt;= 38)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (starts-with(@root, '1.2.36.1.2001.1005.41.800362')) and (string-length(@root) &gt;= 38) and contains(substring(@root, 23, 16), '.')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.41 followed by the national healthcare identifier of the organisation that maintains the local identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (starts-with(@root, '1.2.36.1.2001.1005.41.800362')) and (string-length(@root) &gt;= 38) and contains(substring(@root, 23, 16), '.')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (substring(@root, string-length(@root), 1) = '.')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.41 followed by the national healthcare identifier of the organisation that maintains the local identifier and SHALL NOT end with a dot (.). Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (substring(@root, string-length(@root), 1) = '.')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (starts-with(@root, '1.2.36.1.2001.1005.41.800362')) and (string-length(@root) &gt; 38) and substring(@root, 39, 1) != '.'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.41 followed by the national healthcare identifier of the organisation that maintains the local identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (starts-with(@root, '1.2.36.1.2001.1005.41.800362')) and (string-length(@root) &gt; 38) and substring(@root, 39, 1) != '.'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (number(translate(@root, '0123456789.', '00000000000')) != 0)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'root' attribute SHALL be a valid OID. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (number(translate(@root, '0123456789.', '00000000000')) != 0)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (starts-with(@root, '1.2.36.1.2001.1005.41.800362')) and not(                 (                 number(substring(string(2 * 8), 1, 1)) + number(substring(string(2 * 8), 2, 1)) +                 0 +                 2 * 0 +                 3 +                 number(substring(string(2 * 6), 1, 1)) + number(substring(string(2 * 6), 2, 1)) +                 number(substring(substring-after(@root, '80036'), 1, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'), 2, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 2, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'), 2, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 3, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'), 4, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 4, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'), 4, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 5, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'), 6, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 6, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'), 6, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 7, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'), 8, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 8, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'), 8, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 9, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'),10, 1)), string-length(string(2 * substring(substring-after(@root, '80036'),10, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'),10, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 11, 1))                 ) mod 10 = 0)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'root' attribute having the OID 1.2.36.1.2001.1005.41 followed by the national healthcare identifier of the organisation that maintains the local identifier SHALL have a valid Luhn check digit. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (starts-with(@root, '1.2.36.1.2001.1005.41.800362')) and not(                 (                 number(substring(string(2 * 8), 1, 1)) + number(substring(string(2 * 8), 2, 1)) +                 0 +                 2 * 0 +                 3 +                 number(substring(string(2 * 6), 1, 1)) + number(substring(string(2 * 6), 2, 1)) +                 number(substring(substring-after(@root, '80036'), 1, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'), 2, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 2, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'), 2, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 3, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'), 4, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 4, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'), 4, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 5, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'), 6, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 6, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'), 6, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 7, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'), 8, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 8, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'), 8, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 9, 1)) +                 number(substring(string(2 * substring(substring-after(@root, '80036'),10, 1)), string-length(string(2 * substring(substring-after(@root, '80036'),10, 1))), 1)) +                 number(substring(string(number(substring(substring-after(@root, '80036'),10, 1)) div 5), 1, 1)) +                 number(substring(substring-after(@root, '80036'), 11, 1))                 ) mod 10 = 0)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M80" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:code |             /cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:code |             /cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:code |             /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:code |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:code |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:code" priority="3999" mode="M80">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:code' tag 'code' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:code' tag 'codeSystem' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) = '' or (@codeSystem='2.16.840.1.113883.12.203')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.12.203'. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) = '' or (@codeSystem='2.16.840.1.113883.12.203')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:code' tag 'codeSystemName' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemName) or normalize-space(@codeSystemName) = '' or (@codeSystemName='Identifier Type (HL7)')" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:code' tag 'codeSystemName' attribute shall contain the value 'Identifier Type (HL7)'. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemName) or normalize-space(@codeSystemName) = '' or (@codeSystemName='Identifier Type (HL7)')</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M80" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M80" />
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])] |             /cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])] |             /cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0') or (@nullFlavor)])] |             /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])] |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0') or (@nullFlavor)])] |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]" priority="4000" mode="M81">
    <xsl:choose>
      <xsl:when test="ext:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:code' tag is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M81" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:id |             /cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:id |             /cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0') or (@nullFlavor)])]/ext:id |             /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:id |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0') or (@nullFlavor)])]/ext:id |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode = 'ACT']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:id" priority="3999" mode="M81">
    <xsl:choose>
      <xsl:when test="@extension" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'extension' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@extension</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@assigningAuthorityName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 Legal Authenticator and 6.1.2 Document Author and 6.1.3 Referrer and 6.1.4.1 Usual GP Person and 7.1.2.1.1.1 Addressee (Person) and 7.1.5.3.1.1 Service Provider Person - The 'ext:id' tag 'assigningAuthorityName' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 Legal Authenticator and section 6.1.2 Document Author and section 6.1.3 Referrer and section 6.1.4.1 Usual GP Person and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.5.3.1.1 Service Provider Person of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@assigningAuthorityName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M81" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M81" />
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson |             /cda:ClinicalDocument/cda:participant[translate(@typeCode, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = 'PART']/cda:associatedEntity/cda:associatedPerson |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode='ACT']/cda:performer[@typeCode='PRF']/cda:assignedEntity/cda:assignedPerson             " priority="4000" mode="M82">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800361')]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 Document Author and 6.1.4.1 Usual GP (Person) and 7.1.5.3.1.1 Service Provider (Person) - The 'asEntityIdentifier' tag with a HPI-I is missing. Refer to 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and 6.1.2 Document Author or 6.1.4.1 Usual GP (Person) or 7.1.5.3.1.1 Service Provider (Person) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800361')]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M82" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M82" />
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity/cda:associatedPerson/ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/ext:asEntityIdentifier/ext:id |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity/cda:assignedPerson/ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/ext:asEntityIdentifier/ext:id |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.16606']/cda:entry/cda:act[cda:code/@code = '102.20016']/cda:performer/cda:assignedEntity[cda:representedOrganization]/cda:representedOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/ext:asEntityIdentifier/ext:id" priority="4000" mode="M83">
    <xsl:if test="(@root) and starts-with(@root, '1.2.36.1.2001.1003.0.') and not(starts-with(@root, '1.2.36.1.2001.1003.0.800362'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) and 7.1.2.1.1.2 Addressee (Organisation) - The 'asEntityIdentifier' tag shall not have a National Identifier other than an HPI-O. Refer to Specialist Letter PCEHR Conformance Profile and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.2.1.1.2 Addressee (Organisation) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and starts-with(@root, '1.2.36.1.2001.1003.0.') and not(starts-with(@root, '1.2.36.1.2001.1003.0.800362'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root = '1.2.36.1.2001.1003.0') and not(starts-with(@root, '1.2.36.1.2001.1003.0.800362'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) and 7.1.2.1.1.2 Addressee (Organisation) - The 'asEntityIdentifier' tag shall not have a National Identifier other than an HPI-O. Refer to Specialist Letter PCEHR Conformance Profile and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.2.1.1.2 Addressee (Organisation) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root = '1.2.36.1.2001.1003.0') and not(starts-with(@root, '1.2.36.1.2001.1003.0.800362'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@nullFlavor) and (@nullFlavor!='UNK')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) and 7.1.2.1.1.2 Addressee (Organisation) - The 'id' tag 'nullFlavor' attribute shall contain the value 'UNK'. Refer to Specialist Letter PCEHR Conformance Profile and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.2.1.1.2 Addressee (Organisation) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@nullFlavor) and (@nullFlavor!='UNK')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 Referrer and 7.1.2.1.1.1 Addressee (Person) and 7.1.2.1.1.2 Addressee (Organisation) - The 'id' tag shall not have both a nullFlavor attribute and the root attribute for a National Identifier. Refer to Specialist Letter PCEHR Conformance Profile and section 6.1.3 Referrer and section 7.1.2.1.1.1 Addressee (Person) and section 7.1.2.1.1.2 Addressee (Organisation) of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@nullFlavor) and (starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M83" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:author/cda:assignedAuthor/cda:assignedPerson/ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization |                        /cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity/cda:associatedPerson/ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization |             /cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode='ACT']/cda:performer/cda:assignedEntity/cda:associatedPerson/ext:asEmployment/ext:employerOrganization/cda:asOrganizationPartOf/cda:wholeOrganization" priority="3999" mode="M83">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800362')]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.2 Document Author and_or 6.1.4.1 USUAL GP PERSON and_or 7.1.5.3.1.1 SERVICE PROVIDER - PERSON - The 'HPI-O asEntityIdentifier' tag is missing. "The value of one Entity Identifier SHALL be an Australian HPI-O." although there could be multiple Entity Identifiers. Refer to section 6.1.2 Document Author and_or 6.1.4.1 USUAL GP PERSON and_or 7.1.5.3.1.1 SERVICE PROVIDER - PERSON of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800362')]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M83" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M83" />
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:asEntityIdentifier" priority="4000" mode="M84">
    <xsl:choose>
      <xsl:when test="not(ext:id) or (ext:id/@root)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "ext:asEntityIdentifier/ext:id" tag - The 'ext:id' tag 'root' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(ext:id) or (ext:id/@root)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360')]) and (ext:code/@codeSystem='2.16.840.1.113883.12.203')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'asEntityIdentifier' tag shall have a National Identifier or a Local Identifier but not both. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360')]) and (ext:code/@codeSystem='2.16.840.1.113883.12.203')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.')]) and not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360')])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'asEntityIdentifier' tag shall not have a National Identifier other than an IHI. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.')]) and not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360')])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:id[@root = '1.2.36.1.2001.1003.0']) and not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360')])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'asEntityIdentifier' tag shall not have a National Identifier other than an IHI. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:id[@root = '1.2.36.1.2001.1003.0']) and not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360')])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'asEntityIdentifier' tag for Subject of Care shall not have the local identifier of the Healthcare Provider Individual or Legal Authenticator. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:id[starts-with(@root, '1.2.36.1.2001.1005.41.') or (@root = '1.2.36.1.2001.1005.41')])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:code/@codeSystem='2.16.840.1.113883.12.203') and (ext:id/@assigningAuthorityName) and normalize-space(ext:id/@assigningAuthorityName) != '' and (((ext:id/@assigningAuthorityName) = 'IHI')                  or ((ext:id/@assigningAuthorityName) = 'HPI-I') or ((ext:id/@assigningAuthorityName) = 'HPI-O') or ((ext:id/@assigningAuthorityName) = 'PAI-D') or ((ext:id/@assigningAuthorityName) = 'PAI-O')                  or ((ext:id/@assigningAuthorityName) = 'PAI-R'))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id/@assigningAuthorityName' attribute where 'asEntityIdentifier' tag is having a Local Identifier shall not have National Identifier values. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:code/@codeSystem='2.16.840.1.113883.12.203') and (ext:id/@assigningAuthorityName) and normalize-space(ext:id/@assigningAuthorityName) != '' and (((ext:id/@assigningAuthorityName) = 'IHI')                  or ((ext:id/@assigningAuthorityName) = 'HPI-I') or ((ext:id/@assigningAuthorityName) = 'HPI-O') or ((ext:id/@assigningAuthorityName) = 'PAI-D') or ((ext:id/@assigningAuthorityName) = 'PAI-O')                  or ((ext:id/@assigningAuthorityName) = 'PAI-R'))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M84" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1005.29.') or (@root = '1.2.36.1.2001.1005.29')]" priority="3999" mode="M84">
    <xsl:choose>
      <xsl:when test="not(@root) or (starts-with(@root, '1.2.36.1.2001.1005.29.800362'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.29 followed by the national healthcare identifier of the organisation that maintains the local identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@root) or (starts-with(@root, '1.2.36.1.2001.1005.29.800362'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(@root) and (starts-with(@root, '1.2.36.1.2001.1005.29.800362')) and not(string-length(@root) &gt;= 38)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.29 followed by the national healthcare identifier of the organisation that maintains the local identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (starts-with(@root, '1.2.36.1.2001.1005.29.800362')) and not(string-length(@root) &gt;= 38)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (starts-with(@root, '1.2.36.1.2001.1005.29.800362')) and (string-length(@root) &gt;= 38) and contains(substring(@root, 23, 16), '.')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.29 followed by the national healthcare identifier of the organisation that maintains the local identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (starts-with(@root, '1.2.36.1.2001.1005.29.800362')) and (string-length(@root) &gt;= 38) and contains(substring(@root, 23, 16), '.')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (substring(@root, string-length(@root), 1) = '.')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.29 followed by the national healthcare identifier of the organisation that maintains the local identifier and SHALL NOT end with a dot (.). Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (substring(@root, string-length(@root), 1) = '.')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (starts-with(@root, '1.2.36.1.2001.1005.29.800362')) and (string-length(@root) &gt; 38) and substring(@root, 39, 1) != '.'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'root' attribute SHALL be the OID 1.2.36.1.2001.1005.29 followed by the national healthcare identifier of the organisation that maintains the local identifier. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (starts-with(@root, '1.2.36.1.2001.1005.29.800362')) and (string-length(@root) &gt; 38) and substring(@root, 39, 1) != '.'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (number(translate(@root, '0123456789.', '00000000000')) != 0)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'root' attribute SHALL be a valid OID. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (number(translate(@root, '0123456789.', '00000000000')) != 0)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(@root) and (starts-with(@root, '1.2.36.1.2001.1005.29.800362')) and not(         (         number(substring(string(2 * 8), 1, 1)) + number(substring(string(2 * 8), 2, 1)) +         0 +         2 * 0 +         3 +         number(substring(string(2 * 6), 1, 1)) + number(substring(string(2 * 6), 2, 1)) +         number(substring(substring-after(@root, '80036'), 1, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'), 2, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 2, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'), 2, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 3, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'), 4, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 4, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'), 4, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 5, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'), 6, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 6, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'), 6, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 7, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'), 8, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 8, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'), 8, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 9, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'),10, 1)), string-length(string(2 * substring(substring-after(@root, '80036'),10, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'),10, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 11, 1))         ) mod 10 = 0)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'root' attribute having the OID 1.2.36.1.2001.1005.29 followed by the national healthcare identifier of the organisation that maintains the local identifier SHALL have a valid Luhn check digit. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@root) and (starts-with(@root, '1.2.36.1.2001.1005.29.800362')) and not(         (         number(substring(string(2 * 8), 1, 1)) + number(substring(string(2 * 8), 2, 1)) +         0 +         2 * 0 +         3 +         number(substring(string(2 * 6), 1, 1)) + number(substring(string(2 * 6), 2, 1)) +         number(substring(substring-after(@root, '80036'), 1, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'), 2, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 2, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'), 2, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 3, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'), 4, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 4, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'), 4, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 5, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'), 6, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 6, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'), 6, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 7, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'), 8, 1)), string-length(string(2 * substring(substring-after(@root, '80036'), 8, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'), 8, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 9, 1)) +         number(substring(string(2 * substring(substring-after(@root, '80036'),10, 1)), string-length(string(2 * substring(substring-after(@root, '80036'),10, 1))), 1)) +         number(substring(string(number(substring(substring-after(@root, '80036'),10, 1)) div 5), 1, 1)) +         number(substring(substring-after(@root, '80036'), 11, 1))         ) mod 10 = 0)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M84" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:code" priority="3998" mode="M84">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:code' tag 'code' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:code' tag 'codeSystem' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem='2.16.840.1.113883.12.203'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:code' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.12.203'. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem='2.16.840.1.113883.12.203'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystemName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:code' tag 'codeSystemName' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystemName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystemName) or normalize-space(@codeSystemName) = '' or @codeSystemName='Identifier Type (HL7)'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:code' tag 'codeSystemName' attribute shall contain the value 'Identifier Type (HL7)'. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystemName) or normalize-space(@codeSystemName) = '' or @codeSystemName='Identifier Type (HL7)'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M84" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M84" />
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]/ext:id" priority="4000" mode="M85">
    <xsl:choose>
      <xsl:when test="@extension" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'extension' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@extension</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@assigningAuthorityName" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:id' tag 'assigningAuthorityName' attribute is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@assigningAuthorityName</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M85" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:asEntityIdentifier[not(ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.') or (@root = '1.2.36.1.2001.1003.0')])]" priority="3999" mode="M85">
    <xsl:choose>
      <xsl:when test="ext:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - The 'ext:code' tag is missing. Refer to section 3.4.10 Local identifier for a person of COMMON-ConformProfileClinDoc-v1.5 and section 6.1.1 SUBJECT OF CARE of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M85" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M85" />
  <xsl:template match="/cda:ClinicalDocument/cda:informationRecipient" priority="4000" mode="M86">
    <xsl:choose>
      <xsl:when test="cda:intendedRecipient" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.2 InformationRecipient - "InformationRecipient/intendedRecipient" - The 'intendedRecipient' tag is missing. Refer to section 5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:intendedRecipient</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:intendedRecipient) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.2 InformationRecipient - "InformationRecipient/intendedRecipient" - The 'intendedRecipient' tag shall appear only once. Refer to section 5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:intendedRecipient) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M86" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:informationRecipient/cda:intendedRecipient" priority="3999" mode="M86">
    <xsl:if test="count(cda:informationRecipient) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.2 InformationRecipient - "InformationRecipient/intendedRecipient/informationRecipient" - The 'informationRecipient' tag shall appear only once. Refer to section 5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:informationRecipient) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:receivedOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.2 InformationRecipient - "InformationRecipient/intendedRecipient/receivedOrganization" - The 'receivedOrganization' tag shall appear only once. Refer to section 5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:receivedOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M86" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:informationRecipient/cda:intendedRecipient/cda:id" priority="3998" mode="M86">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.2 InformationRecipient - "InformationRecipient/intendedRecipient/id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M86" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M86" />
  <xsl:template match="/cda:ClinicalDocument/cda:informationRecipient" priority="4000" mode="M87">
    <xsl:choose>
      <xsl:when test="not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode='PRCP' or @typeCode='TRC'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.2 InformationRecipient - "InformationRecipient" - The 'informationRecipient' tag 'typeCode' attribute shall contain the value 'PRCP' or 'TRC'. Refer to section 5.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@typeCode) or normalize-space(@typeCode) = '' or @typeCode='PRCP' or @typeCode='TRC'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M87" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M87" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M88">
    <xsl:if test="count(cda:legalAuthenticator) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator" - The 'legalAuthenticator' tag shall appear only once. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:legalAuthenticator) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M88" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator" priority="3999" mode="M88">
    <xsl:choose>
      <xsl:when test="cda:time" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/time" - The 'time' tag is missing. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:time</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:time) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/time" - The 'time' tag shall appear only once. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:time) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:signatureCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/signatureCode" - The 'signatureCode' tag is missing. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:signatureCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:signatureCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/signatureCode" - The 'signatureCode' tag shall appear only once. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:signatureCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:assignedEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity" - The 'assignedEntity' tag shall appear only once. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:assignedEntity" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity" - The 'assignedEntity' tag is missing. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:assignedEntity</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M88" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:time" priority="3998" mode="M88">
    <xsl:choose>
      <xsl:when test="@value" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/time" - The 'time' tag 'value' attribute is missing. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@value) or normalize-space(@value) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/time" - The 'time' tag 'value' attribute shall contain a value. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@value) or normalize-space(@value) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/time" - The 'time' tag 'nullFlavor' attribute shall not be present. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M88" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:signatureCode" priority="3997" mode="M88">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/signatureCode" - The 'signatureCode' tag 'code' attribute is missing. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@code) or normalize-space(@code) = '' or @code = 'S'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/signatureCode" - The 'signatureCode' tag 'code' attribute shall contain the value 'S'. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@code) or normalize-space(@code) = '' or @code = 'S'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/signatureCode" - The 'signatureCode' tag 'code' attribute shall contain a value. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M88" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity" priority="3996" mode="M88">
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/code" - The 'code' tag shall appear only once. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/id" - The 'id' tag is missing. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/id" - The 'id' tag shall appear only once. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:assignedPerson) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/assignedPerson" - The 'assignedPerson' tag shall appear only once. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:assignedPerson) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:representedOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/representedOrganization" - The 'representedOrganization' tag shall appear only once. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:representedOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M88" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:id" priority="3995" mode="M88">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M88" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:representedOrganization" priority="3994" mode="M88">
    <xsl:if test="cda:name and normalize-space(cda:name) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/representedOrganization/name" - The 'name' tag shall contain a value. Refer to section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:name and normalize-space(cda:name) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M88" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M88" />
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson" priority="4000" mode="M89">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/assignedPerson/Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 3.4.7 Legal authenticator of the COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.0.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/assignedPerson/Person Name" - The 'name' tag is missing. Refer to section 3.4.7 Legal authenticator of the COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.0.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M89" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:legalAuthenticator/cda:assignedEntity/cda:assignedPerson/ext:asEntityIdentifier/ext:id" priority="3999" mode="M89">
    <xsl:if test="@nullFlavor">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 5.1.1 LegalAuthenticator - "LegalAuthenticator/assignedEntity/assignedPerson/Entity Identifier" - The 'id' tag 'nullFlavor' attribute shall not exist. Refer to section 3.4.7 Legal authenticator of the COMMON-ConformProfileClinDoc-v1.5 and section 5.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.0.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@nullFlavor</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M89" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M89" />
  <xsl:template match="cda:author/cda:time " priority="4000" mode="M90">
    <xsl:choose>
      <xsl:when test="(@value) or ((cda:high/@value) and (cda:low/@value) and (@xsi:type='IVL_TS'))" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - "Participation Period" - The 'time' tag shall have a 'value' attribute OR 'xsi:type' attribute having the value 'IVL_TS' along with both the 'high' and 'low' tags with corresponding 'value' attributes. Refer to the section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">(@value) or ((cda:high/@value) and (cda:low/@value) and (@xsi:type='IVL_TS'))</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="(@value) and ((cda:high) or (cda:low))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - "Participation Period" - The 'time' tag shall not have both a 'value' attribute and the 'high' and/or 'low' tag(s). Refer to the section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(@value) and ((cda:high) or (cda:low))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(cda:high/@nullFlavor) or (cda:low/@nullFlavor)">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - "Participation Period" - The 'time' tag shall not have the 'high' and/or 'low' tag(s) with corresponding 'nullFlavor' attribute(s). Refer to the section 6.1.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(cda:high/@nullFlavor) or (cda:low/@nullFlavor)</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M90" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M90" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M91">
    <xsl:if test="count(cda:participant[@typeCode = 'REFB'][cda:associatedEntity/cda:associatedPerson]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer" - The 'participant' tag shall appear only once for 'Referrer'. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:participant[@typeCode = 'REFB'][cda:associatedEntity/cda:associatedPerson]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M91" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB'][cda:associatedEntity/cda:associatedPerson]" priority="3999" mode="M91">
    <xsl:if test="count(cda:time) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Participation Period" - The 'time' tag shall appear only once. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:time) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:associatedEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Role" - The 'associatedEntity' tag shall appear only once. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:associatedEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M91" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity[cda:associatedPerson]" priority="3998" mode="M91">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Role" - The 'associatedEntity' tag 'classCode' attribute is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Role" - The 'associatedEntity' tag 'classCode' attribute shall contain a value. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'RoleClassAssociative']/code[(@code = current()/@classCode)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Role" - The 'associatedEntity' tag 'classCode' attribute shall be as per HL7 RoleClassAssociative. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'RoleClassAssociative']/code[(@code = current()/@classCode)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Role" - The 'associatedEntity' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / id" - The 'id' tag shall appear only once. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / id" - The 'id' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:addr" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Participant / Address" - The 'addr' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:addr</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Role" - The 'code' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Role" - The 'code' tag shall appear only once. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:telecom" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Participant / Electronic Communication Detail" - The 'telecom' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:telecom</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:associatedPerson) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Participant" - The 'associatedPerson' tag shall appear only once. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:associatedPerson) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M91" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity[cda:associatedPerson]/cda:id" priority="3997" mode="M91">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M91" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity[cda:associatedPerson]/cda:associatedPerson" priority="3996" mode="M91">
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Participant / Person or Organisation or Device / Person / Person Name" - The 'name' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="ext:asEmployment" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Participant / Person or Organisation or Device / Person / Employment Detail" - The 'asEmployment' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEmployment</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:asEmployment) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referrer / Participant / Person or Organisation or Device / Person / Employment Detail" - The 'asEmployment' tag shall appear only once. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:asEmployment) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M91" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M91" />
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']" priority="4000" mode="M92">
    <xsl:choose>
      <xsl:when test="cda:associatedEntity" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - The 'associatedEntity' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:associatedEntity</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M92" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity" priority="3999" mode="M92">
    <xsl:choose>
      <xsl:when test="cda:associatedPerson" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - Referrer / Role - The 'associatedPerson' tag is missing. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:associatedPerson</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M92" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'REFB']/cda:associatedEntity[cda:associatedPerson]/cda:addr" priority="3998" mode="M92">
    <xsl:choose>
      <xsl:when test="document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.3 REFERRER - "Referee / Participant / Address / Australia or International Address / International Address / Country" - The 'country' tag shall contain the value 'Australia'. Refer to section 6.1.3 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M92" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M92" />
  <xsl:template match="/cda:ClinicalDocument/cda:component/cda:structuredBody/cda:component/cda:section[cda:code/@code = '101.20117']/cda:component/cda:section[cda:code/@code = '102.20158']/cda:entry/cda:act[@classCode='ACT']/cda:performer/cda:assignedEntity" priority="4000" mode="M93">
    <xsl:choose>
      <xsl:when test="(cda:assignedPerson) or (cda:representedOrganization)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 7.1.5.3.1.1 SERVICE PROVIDER - PERSON and/or 7.1.5.3.1.2 SERVICE PROVIDER - ORGANISATION - "SERVICE PROVIDER - PERSON / Participant" and/or "SERVICE PROVIDER - ORGANISATION / Participant" - The 'associatedPerson' tag or the 'scopingOrganization' tag is missing. Refer to section 7.1.5.3.1.1 and/or section 7.1.5.3.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">(cda:assignedPerson) or (cda:representedOrganization)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M93" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M93" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M94">
    <xsl:choose>
      <xsl:when test="cda:componentOf" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'componentOf' tag is missing. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:componentOf</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:componentOf) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'componentOf' tag shall appear only once. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:componentOf) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M94" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:componentOf" priority="3999" mode="M94">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'componentOf' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:encompassingEncounter" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'encompassingEncounter' tag is missing. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:encompassingEncounter</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:encompassingEncounter) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'encompassingEncounter' tag shall appear only once. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:encompassingEncounter) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M94" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter" priority="3998" mode="M94">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'encompassingEncounter' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:effectiveTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'effectiveTime' tag is missing. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:effectiveTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:effectiveTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'effectiveTime' tag shall appear only once. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:effectiveTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M94" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:effectiveTime" priority="3997" mode="M94">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter - "Event Summary / Encounter Period" - The 'effectiveTime' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M94" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M94" />
  <xsl:template match="/cda:ClinicalDocument/cda:componentOf/cda:encompassingEncounter/cda:effectiveTime" priority="4000" mode="M95">
    <xsl:if test="@value and normalize-space(@value) = '' or string-length(@value) = 4 or string-length(@value) = 6 ">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1 Specialist Letter "Event Summary / Encounter Period" - The 'effectiveTime' tag 'value' attribute shall be a number formatted as YYYYMMDD or 'YYYYMMDDHHMMSS.UUUU[+|-ZZzz]'. Refer to section 6.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and normalize-space(@value) = '' or string-length(@value) = 4 or string-length(@value) = 6 </xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M95" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M95" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M96">
    <xsl:choose>
      <xsl:when test="cda:recordTarget" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'recordTarget' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:recordTarget</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:recordTarget) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'recordTarget' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:recordTarget) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget" priority="3999" mode="M96">
    <xsl:if test="@typeCode  and normalize-space(@typeCode ) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'recordTarget' tag 'typeCode ' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@typeCode  and normalize-space(@typeCode ) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @typeCode  and normalize-space(@typeCode ) != '' and @typeCode  != 'RCT'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'recordTarget' tag 'typeCode ' attribute shall contain the value 'RCT'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @typeCode  and normalize-space(@typeCode ) != '' and @typeCode  != 'RCT'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:patientRole" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'patientRole' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:patientRole</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:patientRole) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'patientRole' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:patientRole) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole" priority="3998" mode="M96">
    <xsl:if test="@classCode  and normalize-space(@classCode ) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'patientRole' tag 'classCode ' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@classCode  and normalize-space(@classCode ) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @classCode  and normalize-space(@classCode ) != '' and @classCode  != 'PAT'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care" - The 'patientRole' tag 'classCode ' attribute shall contain the value 'PAT'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @classCode  and normalize-space(@classCode ) != '' and @classCode  != 'PAT'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / id" - The 'id' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / id" - The 'id' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:patient" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant" - The 'patient' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:patient</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:patient) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant" - The 'patient' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:patient) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:addr" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Address" - The 'addr' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:addr</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:id" priority="3997" mode="M96">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient" priority="3996" mode="M96">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(ext:asEntityIdentifier) or ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360')]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Entity Identifier" - The 'asEntityIdentifier' tag for 'IHI' is missing. "The value of one Entity Identifier SHALL be an Australian IHI." although there could be multiple Entity Identifiers. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(ext:asEntityIdentifier) or ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800360')]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Person Name" - The 'name' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:administrativeGenderCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:administrativeGenderCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:administrativeGenderCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:administrativeGenderCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:birthTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth" - The 'birthTime' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:birthTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:birthTime" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth" - The 'birthTime' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:birthTime</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:multipleBirthInd) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthInd' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:multipleBirthInd) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:multipleBirthOrderNumber) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthOrderNumber' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:multipleBirthOrderNumber) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:deceasedInd) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedInd' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:deceasedInd) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(ext:deceasedTime) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedTime' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:deceasedTime) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:birthplace) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Country of Birth" - The 'birthplace' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:birthplace) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:ethnicGroupCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:ethnicGroupCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode" priority="3995" mode="M96">
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'code' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'code' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'AS_5017-2006_Health_Care_Client_Identifier_Sex']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'code' attribute shall be as per AS 5017-2006 Health Care Client Identifier Sex. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'AS_5017-2006_Health_Care_Client_Identifier_Sex']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'codeSystem' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.13.68'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.13.68'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.13.68'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'codeSystemName' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'AS 5017-2006 Health Care Client Identifier Sex'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'codeSystemName' attribute shall contain the value 'AS 5017-2006 Health Care Client Identifier Sex'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'AS 5017-2006 Health Care Client Identifier Sex'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'displayName' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'AS_5017-2006_Health_Care_Client_Identifier_Sex']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'code' and 'displayName' attributes shall match as per AS 5017-2006 Health Care Client Identifier Sex. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'AS_5017-2006_Health_Care_Client_Identifier_Sex']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'administrativeGenderCode' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'translation' tag shall not be present within 'administrativeGenderCode'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:administrativeGenderCode/cda:translation" priority="3994" mode="M96">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Sex" - The 'translation' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:birthTime" priority="3993" mode="M96">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Birth Detail / Date of Birth" - The 'birthTime' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:deceasedInd" priority="3992" mode="M96">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedInd' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:deceasedTime" priority="3991" mode="M96">
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedTime' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:birthplace" priority="3990" mode="M96">
    <xsl:if test="count(cda:place) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Country of Birth" - The 'place' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:place) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:place" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Country of Birth" - The 'place' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:place</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:birthplace/cda:place" priority="3989" mode="M96">
    <xsl:if test="count(cda:addr) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Country of Birth" - The 'addr' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:addr) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:addr" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Country of Birth" - The 'addr' tag is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:addr</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:birthplace/cda:place/cda:addr" priority="3988" mode="M96">
    <xsl:if test="count(cda:country) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Country of Birth" - The 'country' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:country) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:state) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / State/Territory of Birth" - The 'state' tag shall appear only once. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:state) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:ethnicGroupCode" priority="3987" mode="M96">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'code' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'METeOR_Indigenous_Status']/code[(@code = current()/@code)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'code' attribute shall be as per METeOR 291036: Indigenous Status. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) = '' or                  document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'METeOR_Indigenous_Status']/code[(@code = current()/@code)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'code' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.3.879.291036'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'codeSystem' attribute shall contain the value '2.16.840.1.113883.3.879.291036'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@codeSystem) or normalize-space(@codeSystem) = '' or @codeSystem = '2.16.840.1.113883.3.879.291036'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@codeSystem) or normalize-space(@codeSystem) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'codeSystem' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@codeSystem) or normalize-space(@codeSystem) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="@codeSystem" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'codeSystem' attribute is missing. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@codeSystem</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@codeSystemName and normalize-space(@codeSystemName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'codeSystemName' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@codeSystemName and normalize-space(@codeSystemName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'METeOR Indigenous Status'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'codeSystemName' attribute shall contain the value 'METeOR Indigenous Status'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @codeSystemName and normalize-space(@codeSystemName) != '' and @codeSystemName != 'METeOR Indigenous Status'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@displayName and normalize-space(@displayName) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'displayName' attribute shall contain a value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@displayName and normalize-space(@displayName) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'METeOR_Indigenous_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'ethnicGroupCode' tag 'code' and 'displayName' attributes shall match as per METeOR 291036: Indigenous Status. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@code and normalize-space(@code) != '' and                 @displayName and normalize-space(@displayName) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system [@codeSystemName = 'METeOR_Indigenous_Status']/code[                     (@code = current()/@code) and (                     translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') =                     translate(current()/@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(cda:translation)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Indigenous Status" - The 'translation' tag shall not be present within 'ethnicGroupCode'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(cda:translation)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M96" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M96" />
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:birthplace/cda:place/cda:addr" priority="4000" mode="M97">
    <xsl:if test="cda:country and not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[(@code = current()/cda:country) or (translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 Subject of Care - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Country of Birth" - The 'country' tag shall contain a value as per the Australia Bureau of Statistics, Standard Australian Classification of Countries SACC) Cat. No. 1269. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">cda:country and not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[(@code = current()/cda:country) or (translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'))])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:state and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_State_Territory_Identifier_-_Postal']/code[(@code = current()/cda:state)])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 Subject of Care - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / State/Territory of Birth" - The 'state' tag shall be coded as per AS 5017-2006 Australian State/Territory Identifier - Postal. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 (not(cda:country) or document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName,  'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU') and                 cda:state and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Australian_State_Territory_Identifier_-_Postal']/code[(@code = current()/cda:state)])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M97" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient" priority="3999" mode="M97">
    <xsl:if test="(ext:multipleBirthInd[@value='true'] and not(ext:multipleBirthOrderNumber))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 Subject Of Care - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthOrderNumber' tag is missing for the existence of 'BirthOrder'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:multipleBirthInd[@value='true'] and not(ext:multipleBirthOrderNumber))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:multipleBirthInd[@value='false'] and (ext:multipleBirthOrderNumber))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 Subject Of Care - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthOrderNumber' tag shall not be present for the missing of 'BirthOrder'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:multipleBirthInd[@value='false'] and (ext:multipleBirthOrderNumber))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:deceasedInd[@value='true'] and not(ext:deceasedTime))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 Subject Of Care - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedTime' tag is missing for the existence of 'deceasedInd=true'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:deceasedInd[@value='true'] and not(ext:deceasedTime))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="(ext:deceasedInd[@value='false'] and (ext:deceasedTime))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 Subject Of Care - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedTime' tag shall not be present for the missing of 'deceasedInd=false'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">(ext:deceasedInd[@value='false'] and (ext:deceasedTime))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M97" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/cda:name" priority="3998" mode="M97">
    <xsl:choose>
      <xsl:when test="cda:family" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - Subject of Care / Participant / Participant/Person or Organisation or Device / Person / Person Name - The 'family' tag is missing. Refer to section section 6.1.1 and section 8.5 Person Name of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:family</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M97" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:multipleBirthInd" priority="3997" mode="M97">
    <xsl:choose>
      <xsl:when test="@value or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthInd' tag shall have at least the 'nullFlavor' or 'value' attribute. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@value and @nullFlavor='NA'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthInd' tag shall not have both the 'nullFlavor=NA' and 'value' attribute. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and @nullFlavor='NA'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and                 @value != 'true' and                 @value != 'false'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthInd' tag 'value' attribute shall contain the value 'true' or 'false'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and                 @value != 'true' and                 @value != 'false'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M97" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:multipleBirthOrderNumber" priority="3996" mode="M97">
    <xsl:choose>
      <xsl:when test="@value or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthOrderNumber' tag shall have at least the 'nullFlavor' or 'value' attribute. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@value and @nullFlavor='NA'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthOrderNumber' tag shall not have both the 'nullFlavor=NA' and 'value' attribute. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and @nullFlavor='NA'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and not(number(@value))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthOrderNumber' tag 'value' attribute shall be an integer value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and not(number(@value))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and number(@value) and not(floor(@value) = number(@value))">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthOrderNumber' tag 'value' attribute shall be an integer value. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and number(@value) and not(floor(@value) = number(@value))</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and (@value) &lt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'multipleBirthOrderNumber' tag 'value' attribute shall be an integer greater than equal to 1. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and (@value) &lt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M97" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:deceasedInd" priority="3995" mode="M97">
    <xsl:choose>
      <xsl:when test="@value or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedInd' tag shall have at least the 'nullFlavor' or 'value' attribute. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@value and @nullFlavor='NA'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedInd' tag shall not have both the 'nullFlavor=NA' and 'value' attribute. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and @nullFlavor='NA'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="@value and                 @value != 'true' and                 @value != 'false'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Date of Death Detail / Date of Death" - The 'deceasedInd' tag 'value' attribute shall contain the value 'true' or 'false'. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and                 @value != 'true' and                 @value != 'false'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M97" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:recordTarget/cda:patientRole/cda:patient/ext:deceasedTime" priority="3994" mode="M97">
    <xsl:choose>
      <xsl:when test="@value or @nullFlavor" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'deceasedTime' tag shall have at least the 'nullFlavor' or 'value' attribute. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@value or @nullFlavor</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="@value and @nullFlavor='NA'">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.1 SUBJECT OF CARE - "Subject of Care / Participant / Person or Organisation or Device / Person / Demographic Data / Birth Order" - The 'deceasedTime' tag shall not have both the 'nullFlavor=NA' and 'value' attribute. Refer to section 6.1.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@value and @nullFlavor='NA'</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M97" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M97" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M98">
    <xsl:if test="count(cda:participant[@typeCode = 'PART'][cda:associatedEntity/cda:scopingOrganization]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP (Organisation)" - The 'participant' tag shall appear only once for 'Usual GP (Organisation)'. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:participant[@typeCode = 'PART'][cda:associatedEntity/cda:scopingOrganization]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART'][cda:associatedEntity/cda:scopingOrganization]" priority="3999" mode="M98">
    <xsl:choose>
      <xsl:when test="cda:functionCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participation Type" - The 'functionCode' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:functionCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:functionCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participation Type" - The 'functionCode' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:functionCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:associatedEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Role" - The 'associatedEntity' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:associatedEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART'][cda:associatedEntity/cda:scopingOrganization]/cda:functionCode" priority="3998" mode="M98">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participation Type" - The 'functionCode' tag 'code' attribute is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participation Type" - The 'functionCode' tag 'code' attribute shall contain a value. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@code) or normalize-space(@code) = '' or @code = 'PCP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participation Type" - The 'functionCode' tag 'code' attribute shall contain the value 'PCP'. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@code) or normalize-space(@code) = '' or @code = 'PCP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:scopingOrganization]" priority="3997" mode="M98">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Role" - The 'associatedEntity' tag 'classCode' attribute is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Role" - The 'associatedEntity' tag 'classCode' attribute shall contain a value. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'RoleClassAssociative']/code[(@code = current()/@classCode)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Role" - The 'associatedEntity' tag 'classCode' attribute shall be as per HL7 RoleClassAssociative. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'RoleClassAssociative']/code[(@code = current()/@classCode)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Role" - The 'code' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Role" - The 'code' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:scopingOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant" - The 'scopingOrganization' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:scopingOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:addr" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Address" - The 'addr' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:addr</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:telecom" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Electronic Communication Detail" - The 'telecom' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:telecom</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / id" - The 'id' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / id" - The 'id' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:scopingOrganization]/cda:scopingOrganization" priority="3996" mode="M98">
    <xsl:if test="count(cda:asOrganizationPartOf) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant" - The 'asOrganizationPartOf' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:asOrganizationPartOf) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:asOrganizationPartOf" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant" - The 'asOrganizationPartOf' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:asOrganizationPartOf</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Person or Organisation or Device / Organisation / Department/Unit" - The 'name' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:scopingOrganization]/cda:scopingOrganization/cda:asOrganizationPartOf" priority="3995" mode="M98">
    <xsl:if test="count(cda:wholeOrganization) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant" - The 'wholeOrganization' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:wholeOrganization) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:wholeOrganization" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant" - The 'wholeOrganization' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:wholeOrganization</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:scopingOrganization]/cda:scopingOrganization/cda:asOrganizationPartOf/cda:wholeOrganization" priority="3994" mode="M98">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(ext:asEntityIdentifier) or ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800362')]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Entity Identifier" - The 'asEntityIdentifier' tag for 'HPI-O' is missing. "The value of one Entity Identifier SHALL be an Australian HPI-O." although there could be multiple Entity Identifiers. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(ext:asEntityIdentifier) or ext:asEntityIdentifier/ext:id[starts-with(@root, '1.2.36.1.2001.1003.0.800362')]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag is missing. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:name) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag shall appear only once. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:name) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:scopingOrganization]/cda:scopingOrganization/cda:asOrganizationPartOf/cda:wholeOrganization/cda:name" priority="3993" mode="M98">
    <xsl:if test="@use and normalize-space(@use) = ''">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'use' attribute shall contain a value. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">@use and normalize-space(@use) = ''</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="                 @use and normalize-space(@use) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Provider_Organisation_Name_Usage']/code[                     (@code = current()/@use) or                     (@alternativeCode = current()/@use) or                     (@hl7Code = current()/@use)                 ])">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'use' attribute shall be as per 10.4 AS 4846-2006: Health Care Provider Organisation Name Usage. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 @use and normalize-space(@use) != '' and                 not(document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'Health_Care_Provider_Organisation_Name_Usage']/code[                     (@code = current()/@use) or                     (@alternativeCode = current()/@use) or                     (@hl7Code = current()/@use)                 ])</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="not(@nullFlavor)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / Participant / Person or Organisation or Device / Organisation / Organisation Name" - The 'name' tag 'nullFlavor' attribute shall not be present. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@nullFlavor)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:scopingOrganization]/cda:id" priority="3992" mode="M98">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP - ORGANISATION - "Usual GP / id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M98" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M98" />
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:scopingOrganization]/cda:addr" priority="4000" mode="M99">
    <xsl:choose>
      <xsl:when test="document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.2 USUAL GP ORGANISATION - "Usual GP / Participant / Address / Australia or International Address / International Address / Country" - The 'country' tag shall contain the value 'Australia'. Refer to section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M99" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M99" />
  <xsl:template match="/cda:ClinicalDocument" priority="4000" mode="M100">
    <xsl:if test="count(cda:participant[@typeCode = 'PART'][cda:associatedEntity/cda:associatedPerson]) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP" - The 'participant' tag shall appear only once for 'Usual GP'. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:participant[@typeCode = 'PART'][cda:associatedEntity/cda:associatedPerson]) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M100" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART'][cda:associatedEntity/cda:associatedPerson]" priority="3999" mode="M100">
    <xsl:choose>
      <xsl:when test="cda:functionCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participation Type" - The 'functionCode' tag is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:functionCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:functionCode) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participation Type" - The 'functionCode' tag shall appear only once. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:functionCode) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:associatedEntity) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Role" - The 'associatedEntity' tag shall appear only once. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:associatedEntity) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M100" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART'][cda:associatedEntity/cda:associatedPerson]/cda:functionCode" priority="3998" mode="M100">
    <xsl:choose>
      <xsl:when test="@code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participation Type" - The 'functionCode' tag 'code' attribute is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@code) or normalize-space(@code) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participation Type" - The 'functionCode' tag 'code' attribute shall contain a value. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@code) or normalize-space(@code) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@code) or normalize-space(@code) = '' or @code = 'PCP'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participation Type" - The 'functionCode' tag 'code' attribute shall contain the value 'PCP'. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@code) or normalize-space(@code) = '' or @code = 'PCP'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M100" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:associatedPerson]" priority="3997" mode="M100">
    <xsl:choose>
      <xsl:when test="@classCode" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Role" - The 'associatedEntity' tag 'classCode' attribute is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">@classCode</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="not(@classCode) or normalize-space(@classCode) != ''" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Role" - The 'associatedEntity' tag 'classCode' attribute shall contain a value. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">not(@classCode) or normalize-space(@classCode) != ''</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="                 not(@classCode) or normalize-space(@classCode) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'RoleClassAssociative']/code[(@code = current()/@classCode)]" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Role" - The 'associatedEntity' tag 'classCode' attribute shall be as per HL7 RoleClassAssociative. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">                 not(@classCode) or normalize-space(@classCode) = '' or                 document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'RoleClassAssociative']/code[(@code = current()/@classCode)]</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:code" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Role" - The 'code' tag is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:code</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:code) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Role" - The 'code' tag shall appear only once. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:code) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:if test="count(cda:associatedPerson) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participant" - The 'associatedPerson' tag shall appear only once. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:associatedPerson) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:addr" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participant / Address" - The 'addr' tag is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:addr</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:telecom" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participant / Electronic Communication Detail" - The 'telecom' tag is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:telecom</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(cda:id) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / id" - The 'id' tag shall appear only once. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(cda:id) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="cda:id" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / id" - The 'id' tag is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:id</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M100" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:associatedPerson]/cda:associatedPerson" priority="3996" mode="M100">
    <xsl:choose>
      <xsl:when test="ext:asEntityIdentifier" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participant / Entity Identifier" - The 'asEntityIdentifier' tag is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">ext:asEntityIdentifier</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:choose>
      <xsl:when test="cda:name" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participant / Person or Organisation or Device / Person / Person Name" - The 'name' tag is missing. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:name</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:if test="count(ext:asEmployment) &gt; 1">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / Participant / Person or Organisation or Device / Person / Employment Detail" - The 'asEmployment' tag shall appear only once. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">count(ext:asEmployment) &gt; 1</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M100" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:associatedPerson]/cda:id" priority="3995" mode="M100">
    <xsl:if test="                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')">
      <xsl:element name="issue">
        <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP - PERSON - "Usual GP / id" - The 'id' tag 'root' attribute shall be a valid UUID. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
        <xsl:element name="context">
          <xsl:apply-templates select="." mode="schematron-get-full-path" />
        </xsl:element>
        <xsl:element name="test">                 contains(@root, '-') and not(                 string-length(@root) = 36 and                 substring(@root,  9, 1) = '-' and substring(@root, 14, 1) = '-' and                 substring(@root, 19, 1) = '-' and substring(@root, 24, 1) = '-' and                 translate(substring(@root,  1,  8), '0123456789ABCDEFabcdef', '0000000000000000000000') = '00000000' and                 translate(substring(@root, 10,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 15,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 20,  4), '0123456789ABCDEFabcdef', '0000000000000000000000') = '0000' and                 translate(substring(@root, 25, 12), '0123456789ABCDEFabcdef', '0000000000000000000000') = '000000000000')</xsl:element>
      </xsl:element>
    </xsl:if>
    <xsl:apply-templates mode="M100" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M100" />
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity[cda:associatedPerson]/cda:addr" priority="4000" mode="M101">
    <xsl:choose>
      <xsl:when test="document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP PERSON - "Usual GP / Participant / Address / Australia or International Address / International Address / Country" - The 'country' tag shall contain the value 'Australia'. Refer to section 6.1.4.1 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">document('CDAValidate_Vocabs.xml')/systems/system[@codeSystemName = 'ISO3166-1']/code[translate(@displayName, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ') = translate(current()/cda:country, 'abcdefghijklmnopqrstuvwxyz', 'ABCDEFGHIJKLMNOPQRSTUVWXYZ')]/@code = 'AU'</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M101" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M101" />
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']" priority="4000" mode="M102">
    <xsl:choose>
      <xsl:when test="cda:associatedEntity" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP PERSON and/or 6.1.4.2 USUAL GP ORGANISATION - "Usual GP - Person / Role" and/or "Usual GP - Organisation / Role" - The 'associatedEntity' tag is missing. Refer to section 6.1.4.1 and/or section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">cda:associatedEntity</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M102" />
  </xsl:template>
  <xsl:template match="/cda:ClinicalDocument/cda:participant[@typeCode = 'PART']/cda:associatedEntity" priority="3999" mode="M102">
    <xsl:choose>
      <xsl:when test="(cda:associatedPerson) or (cda:scopingOrganization)" />
      <xsl:otherwise>
        <xsl:element name="issue">
          <xsl:element name="message">Error: Specialist Letter - 6.1.4.1 USUAL GP PERSON and/or 6.1.4.2 USUAL GP ORGANISATION - "Usual GP - Person / Participant" and/or "Usual GP - Organisation / Participant" - The 'associatedPerson' tag or the 'scopingOrganization' tag is missing. Refer to section 6.1.4.1 and/or section 6.1.4.2 of the Specialist_Letter_CDA_Implementation_Guide_v1.3.</xsl:element>
          <xsl:element name="context">
            <xsl:apply-templates select="." mode="schematron-get-full-path" />
          </xsl:element>
          <xsl:element name="test">(cda:associatedPerson) or (cda:scopingOrganization)</xsl:element>
        </xsl:element>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:apply-templates mode="M102" />
  </xsl:template>
  <xsl:template match="text()" priority="-1" mode="M102" />
  <xsl:template match="text()" priority="-1" />
</xsl:stylesheet>